using System;
using NetFluid;
namespace Agenda
{

public static class ____FluidTemplate973834f1bcab4ea4971cd3d217c7443b
{

public static void Include(Context c, string path, params object[] args)
{

var k = new FluidTemplate(path,args);

k.SendResponse(c);


}

#line 1 "C:\Users\Matteo\Desktop\NetFluid\netfluid\Examples\3.UserStat\bin\Debug\Index.html"
public static void Run(NetFluid.Context Context)
{

Context.Writer.WriteLine("<!DOCTYPE html>");
Context.Writer.WriteLine("<html lang=\"en\">");
Context.Writer.WriteLine("<head>");
Context.Writer.WriteLine("<meta charset=\"utf-8\">");
Context.Writer.WriteLine("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">");
Context.Writer.WriteLine("<meta name=\"description\" content=\"\">");
Context.Writer.WriteLine("<meta name=\"author\" content=\"\">");
Context.Writer.WriteLine("<link rel=\"shortcut icon\" href=\"/ico/favicon.png\">");
Context.Writer.WriteLine("<title>Starter Template for Bootstrap</title>");
Context.Writer.WriteLine("<!-- Bootstrap core CSS -->");
Context.Writer.WriteLine("<link href=\"http://getbootstrap.com/dist/css/bootstrap.min.css\" rel=\"stylesheet\">");
Context.Writer.WriteLine("<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->");
Context.Writer.WriteLine("<!--[if lt IE 9]>");
Context.Writer.WriteLine("<script src=\"/js/html5shiv.js\"></script>");
Context.Writer.WriteLine("<script src=\"/js/respond.min.js\"></script>");
Context.Writer.WriteLine("<![endif]-->");
Context.Writer.WriteLine("</head>");
Context.Writer.WriteLine("<body>");
Context.Writer.WriteLine("<div class=\"container\">");
Context.Writer.WriteLine("<div class=\"starter-template\">");
Context.Writer.WriteLine("<h1>");
Context.Writer.WriteLine("<img src=\"http://netfluid.org/img/logo.png\" alt=\"netfluid logo\" />");
Context.Writer.WriteLine("</h1>");
Context.Writer.WriteLine("<div class=\"lead\">");
Context.Writer.WriteLine("<section>");
Context.Writer.WriteLine("<h3>Controllers</h3>");
Context.Writer.WriteLine("<p>");
Context.Writer.WriteLine("Controllers are lambda function invoked <strong>everytime</strong> the server recieve a request.");
Context.Writer.WriteLine("<br />");
Context.Writer.WriteLine("Controllers can be executed under certain conditions or always and if they return a value, the context is close otherwise they are executed in background and completly insible by the user");
Context.Writer.WriteLine("</p>");
Context.Writer.WriteLine("</section>");
Context.Writer.WriteLine("<section>");
Context.Writer.WriteLine("<h3>How does it work</h3>");
Context.Writer.WriteLine("<p>");
Context.Writer.WriteLine("This simple page is your \"website\", everytime a client do a request the <strong>DataCollector</strong> in ./Analyics/DataCollector is executed.");
Context.Writer.WriteLine("<br />");
Context.Writer.WriteLine("Because the DataCollector controller doesn\'t close the context, the execution go on and this page is executed.");
Context.Writer.WriteLine("<br />");
Context.Writer.WriteLine("In <a href=\"/analytics\">analytics</a> you can see the collected data.");
Context.Writer.WriteLine("</p>");
Context.Writer.WriteLine("</section>");
Context.Writer.WriteLine("</div>");
Context.Writer.WriteLine("</div>");
Context.Writer.WriteLine("</div>");
Context.Writer.WriteLine("</body>");
Context.Writer.WriteLine("</html>");


}


}


}

