<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MongoDB.Driver</name>
    </assembly>
    <members>
        <member name="T:MongoDB.Bson.BsonConstants">
            <summary>
            A static class containing BSON constants.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonConstants.DateTimeMaxValueMillisecondsSinceEpoch">
            <summary>
            Gets the number of milliseconds since the Unix epoch for DateTime.MaxValue.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonConstants.DateTimeMinValueMillisecondsSinceEpoch">
            <summary>
            Gets the number of milliseconds since the Unix epoch for DateTime.MinValue.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonConstants.UnixEpoch">
            <summary>
            Gets the Unix Epoch for BSON DateTimes (1970-01-01).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonDefaults">
            <summary>
            A static helper class containing BSON defaults.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDefaults.DynamicArraySerializer">
            <summary>
            Gets or sets the dynamic array serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDefaults.DynamicDocumentSerializer">
            <summary>
            Gets or sets the dynamic document serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDefaults.GuidRepresentation">
            <summary>
            Gets or sets the default representation to be used in serialization of 
            Guids to the database. 
            <seealso cref="T:MongoDB.Bson.GuidRepresentation"/> 
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDefaults.MaxDocumentSize">
            <summary>
            Gets or sets the default max document size. The default is 4MiB.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDefaults.MaxSerializationDepth">
            <summary>
            Gets or sets the default max serialization depth (used to detect circular references during serialization). The default is 100.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonExtensionMethods">
            <summary>
            A static class containing BSON extension methods.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToBson``1(``0,MongoDB.Bson.Serialization.IBsonSerializer{``0},MongoDB.Bson.IO.BsonBinaryWriterSettings,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a BSON byte array.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="obj">The object.</param>
            <param name="serializer">The serializer.</param>
            <param name="writerSettings">The writer settings.</param>
            <param name="configurator">The serialization context configurator.</param>
            <returns>A BSON byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToBson(System.Object,System.Type,MongoDB.Bson.IO.BsonBinaryWriterSettings,MongoDB.Bson.Serialization.IBsonSerializer,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a BSON byte array.
            </summary>
            <param name="obj">The object.</param>
            <param name="nominalType">The nominal type of the object..</param>
            <param name="writerSettings">The writer settings.</param>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The serialization context configurator.</param>
            <returns>A BSON byte array.</returns>
            <exception cref="T:System.ArgumentNullException">nominalType</exception>
            <exception cref="T:System.ArgumentException">serializer</exception>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToBsonDocument``1(``0,MongoDB.Bson.Serialization.IBsonSerializer{``0},System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a BsonDocument.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="obj">The object.</param>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The serialization context configurator.</param>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToBsonDocument(System.Object,System.Type,MongoDB.Bson.Serialization.IBsonSerializer,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a BsonDocument.
            </summary>
            <param name="obj">The object.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The serialization context configurator.</param>
            <returns>A BsonDocument.</returns>
            <exception cref="T:System.ArgumentNullException">nominalType</exception>
            <exception cref="T:System.ArgumentException">serializer</exception>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToJson``1(``0,MongoDB.Bson.IO.JsonWriterSettings,MongoDB.Bson.Serialization.IBsonSerializer{``0},System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a JSON string.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="obj">The object.</param>
            <param name="writerSettings">The JsonWriter settings.</param>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The serializastion context configurator.</param>
            <returns>
            A JSON string.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.BsonExtensionMethods.ToJson(System.Object,System.Type,MongoDB.Bson.IO.JsonWriterSettings,MongoDB.Bson.Serialization.IBsonSerializer,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes an object to a JSON string.
            </summary>
            <param name="obj">The object.</param>
            <param name="nominalType">The nominal type of the objectt.</param>
            <param name="writerSettings">The JsonWriter settings.</param>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The serializastion context configurator.</param>
            <returns>
            A JSON string.
            </returns>
            <exception cref="T:System.ArgumentNullException">nominalType</exception>
            <exception cref="T:System.ArgumentException">serializer</exception>
        </member>
        <member name="T:MongoDB.Bson.BsonUtils">
            <summary>
            A static class containing BSON utility methods.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.GetFriendlyTypeName(System.Type)">
            <summary>
            Gets a friendly class name suitable for use in error messages.
            </summary>
            <param name="type">The type.</param>
            <returns>A friendly class name.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ParseHexString(System.String)">
            <summary>
            Parses a hex string into its equivalent byte array.
            </summary>
            <param name="s">The hex string to parse.</param>
            <returns>The byte equivalent of the hex string.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ToDateTimeFromMillisecondsSinceEpoch(System.Int64)">
            <summary>
            Converts from number of milliseconds since Unix epoch to DateTime.
            </summary>
            <param name="millisecondsSinceEpoch">The number of milliseconds since Unix epoch.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ToHexString(System.Byte[])">
            <summary>
            Converts a byte array to a hex string.
            </summary>
            <param name="bytes">The byte array.</param>
            <returns>A hex string.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ToLocalTime(System.DateTime)">
            <summary>
            Converts a DateTime to local time (with special handling for MinValue and MaxValue).
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>The DateTime in local time.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ToMillisecondsSinceEpoch(System.DateTime)">
            <summary>
            Converts a DateTime to number of milliseconds since Unix epoch.
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>Number of seconds since Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.ToUniversalTime(System.DateTime)">
            <summary>
            Converts a DateTime to UTC (with special handling for MinValue and MaxValue).
            </summary>
            <param name="dateTime">A DateTime.</param>
            <returns>The DateTime in UTC.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUtils.TryParseHexString(System.String,System.Byte[]@)">
            <summary>
            Tries to parse a hex string to a byte array.
            </summary>
            <param name="s">The hex string.</param>
            <param name="bytes">A byte array.</param>
            <returns>True if the hex string was successfully parsed.</returns>
        </member>
        <member name="T:MongoDB.Bson.BsonException">
            <summary>
            Represents a BSON exception.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonException.#ctor">
            <summary>
            Initializes a new instance of the BsonException class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the BsonException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonException.#ctor(System.String,System.Object[])">
            <summary>
            Initializes a new instance of the BsonException class.
            </summary>
            <param name="format">The error message format string.</param>
            <param name="args">One or more args for the error message.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the BsonException class (this overload used by deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Bson.BsonInternalException">
            <summary>
            Represents a BSON internal exception (almost surely the result of a bug).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonInternalException.#ctor">
            <summary>
            Initializes a new instance of the BsonInternalException class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonInternalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonInternalException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the BsonInternalException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the BsonInternalException class (this overload used by deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Bson.BsonSerializationException">
            <summary>
            Represents a BSON serialization exception.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonSerializationException.#ctor">
            <summary>
            Initializes a new instance of the BsonSerializationException class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonSerializationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonSerializationException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonSerializationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the BsonSerializationException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonSerializationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the BsonSerializationException class (this overload used by deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Bson.DuplicateBsonMemberMapAttributeException">
            <summary>
            Indicates that an attribute restricted to one member has been applied to multiple members.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.DuplicateBsonMemberMapAttributeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.DuplicateBsonMemberMapAttributeException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Bson.DuplicateBsonMemberMapAttributeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.DuplicateBsonMemberMapAttributeException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:MongoDB.Bson.DuplicateBsonMemberMapAttributeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.DuplicateBsonMemberMapAttributeException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Bson.TruncationException">
            <summary>
            Represents a truncation exception.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.TruncationException.#ctor">
            <summary>
            Initializes a new instance of the TruncationException class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.TruncationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the TruncationException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Bson.TruncationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the TruncationException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Bson.TruncationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the TruncationException class (this overload used by deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonBinaryReader">
            <summary>
            Represents a BSON reader for a binary BSON byte array.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonReader">
            <summary>
            Represents a BSON reader for some external format (see subclasses).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.#ctor(MongoDB.Bson.IO.BsonReaderSettings)">
            <summary>
            Initializes a new instance of the BsonReader class.
            </summary>
            <param name="settings">The reader settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.Dispose">
            <summary>
            Disposes of any resources used by the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.FindElement(System.String)">
            <summary>
            Positions the reader to an element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>True if the element was found.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.FindStringElement(System.String)">
            <summary>
            Positions the reader to a string element by name.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>True if the element was found.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.GetBookmark">
            <summary>
            Gets a bookmark to the reader's current position and state.
            </summary>
            <returns>A bookmark.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.GetCurrentBsonType">
            <summary>
            Gets the current BsonType (calls ReadBsonType if necessary).
            </summary>
            <returns>The current BsonType.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.IsAtEndOfFile">
            <summary>
            Determines whether this reader is at end of file.
            </summary>
            <returns>
            Whether this reader is at end of file.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData(System.Byte[]@,MongoDB.Bson.BsonBinarySubType@)">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData(System.Byte[]@,MongoDB.Bson.BsonBinarySubType@,MongoDB.Bson.GuidRepresentation@)">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData(System.String)">
            <summary>
            Reads a BSON binary data element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData(System.String,System.Byte[]@,MongoDB.Bson.BsonBinarySubType@)">
            <summary>
            Reads a BSON binary data element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBinaryData(System.String,System.Byte[]@,MongoDB.Bson.BsonBinarySubType@,MongoDB.Bson.GuidRepresentation@)">
            <summary>
            Reads a BSON binary data element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBoolean">
            <summary>
            Reads a BSON boolean from the reader.
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBoolean(System.String)">
            <summary>
            Reads a BSON boolean element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBsonType">
            <summary>
            Reads a BsonType from the reader.
            </summary>
            <returns>A BsonType.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBytes">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadBytes(System.String)">
            <summary>
            Reads a BSON binary data element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadDateTime">
            <summary>
            Reads a BSON DateTime from the reader.
            </summary>
            <returns>The number of milliseconds since the Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadDateTime(System.String)">
            <summary>
            Reads a BSON DateTime element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The number of milliseconds since the Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadDouble">
            <summary>
            Reads a BSON Double from the reader.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadDouble(System.String)">
            <summary>
            Reads a BSON Double element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadEndArray">
            <summary>
            Reads the end of a BSON array from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadEndDocument">
            <summary>
            Reads the end of a BSON document from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadInt32">
            <summary>
            Reads a BSON Int32 from the reader.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadInt32(System.String)">
            <summary>
            Reads a BSON Int32 element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadInt64">
            <summary>
            Reads a BSON Int64 from the reader.
            </summary>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadInt64(System.String)">
            <summary>
            Reads a BSON Int64 element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadJavaScript">
            <summary>
            Reads a BSON JavaScript from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadJavaScript(System.String)">
            <summary>
            Reads a BSON JavaScript element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadJavaScriptWithScope">
            <summary>
            Reads a BSON JavaScript with scope from the reader (call ReadStartDocument next to read the scope).
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadJavaScriptWithScope(System.String)">
            <summary>
            Reads a BSON JavaScript with scope element from the reader (call ReadStartDocument next to read the scope).
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadMaxKey">
            <summary>
            Reads a BSON MaxKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadMaxKey(System.String)">
            <summary>
            Reads a BSON MaxKey element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadMinKey">
            <summary>
            Reads a BSON MinKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadMinKey(System.String)">
            <summary>
            Reads a BSON MinKey element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadName">
            <summary>
            Reads the name of an element from the reader.
            </summary>
            <returns>The name of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadName``1(MongoDB.Bson.IO.BsonTrie{``0},System.Boolean@,``0@)">
            <summary>
            Reads the name of an element from the reader (using a trie).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="trie">The trie.</param>
            <param name="found">Whether the element name was found in the trie.</param>
            <param name="value">If found is true, the value found in the trie for the element name.</param>
            <returns>
            The name of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadName(System.String)">
            <summary>
            Reads the name of an element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadNull">
            <summary>
            Reads a BSON null from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadNull(System.String)">
            <summary>
            Reads a BSON null element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadObjectId">
            <summary>
            Reads a BSON ObjectId from the reader.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadObjectId(System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Reads a BSON ObjectId from the reader.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadObjectId(System.String)">
            <summary>
            Reads a BSON ObjectId element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadObjectId(System.String,System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Reads a BSON ObjectId element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRawBsonArray">
            <summary>
            Reads a raw BSON array.
            </summary>
            <returns>The raw BSON array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRawBsonArray(System.String)">
            <summary>
            Reads a raw BSON array.
            </summary>
            <param name="name">The name.</param>
            <returns>
            The raw BSON array.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRawBsonDocument">
            <summary>
            Reads a raw BSON document.
            </summary>
            <returns>The raw BSON document.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRawBsonDocument(System.String)">
            <summary>
            Reads a raw BSON document.
            </summary>
            <param name="name">The name.</param>
            <returns>The raw BSON document.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRegularExpression">
            <summary>
            Reads a BSON regular expression from the reader.
            </summary>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRegularExpression(System.String@,System.String@)">
            <summary>
            Reads a BSON regular expression from the reader.
            </summary>
            <param name="pattern">A regular expression pattern.</param>
            <param name="options">A regular expression options.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRegularExpression(System.String)">
            <summary>
            Reads a BSON regular expression element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadRegularExpression(System.String,System.String@,System.String@)">
            <summary>
            Reads a BSON regular expression element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="pattern">A regular expression pattern.</param>
            <param name="options">A regular expression options.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadStartArray">
            <summary>
            Reads the start of a BSON array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadStartDocument">
            <summary>
            Reads the start of a BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadString">
            <summary>
            Reads a BSON string from the reader.
            </summary>
            <returns>A String.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadString(System.String)">
            <summary>
            Reads a BSON string element from the reader.
            </summary>
            <returns>A String.</returns>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadSymbol">
            <summary>
            Reads a BSON symbol from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadSymbol(System.String)">
            <summary>
            Reads a BSON symbol element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadTimestamp">
            <summary>
            Reads a BSON timestamp from the reader.
            </summary>
            <returns>The combined timestamp/increment.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadTimestamp(System.String)">
            <summary>
            Reads a BSON timestamp element from the reader.
            </summary>
            <returns>The combined timestamp/increment.</returns>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadUndefined">
            <summary>
            Reads a BSON undefined from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReadUndefined(System.String)">
            <summary>
            Reads a BSON undefined element from the reader.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ReturnToBookmark(MongoDB.Bson.IO.BsonReaderBookmark)">
            <summary>
            Returns the reader to previously bookmarked position and state.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.SkipName">
            <summary>
            Skips the name (reader must be positioned on a name).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.SkipValue">
            <summary>
            Skips the value (reader must be positioned on a value).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the reader.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ThrowInvalidContextType(System.String,MongoDB.Bson.IO.ContextType,MongoDB.Bson.IO.ContextType[])">
            <summary>
            Throws an InvalidOperationException when the method called is not valid for the current ContextType.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="actualContextType">The actual ContextType.</param>
            <param name="validContextTypes">The valid ContextTypes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ThrowInvalidState(System.String,MongoDB.Bson.IO.BsonReaderState[])">
            <summary>
            Throws an InvalidOperationException when the method called is not valid for the current state.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="validStates">The valid states.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.ThrowObjectDisposedException">
            <summary>
            Throws an ObjectDisposedException.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.VerifyBsonType(System.String,MongoDB.Bson.BsonType)">
            <summary>
            Verifies the current state and BsonType of the reader.
            </summary>
            <param name="methodName">The name of the method calling this one.</param>
            <param name="requiredBsonType">The required BSON type.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReader.VerifyName(System.String)">
            <summary>
            Verifies the name of the current element.
            </summary>
            <param name="expectedName">The expected name.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReader.CurrentBsonType">
            <summary>
            Gets the current BsonType.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReader.Settings">
            <summary>
            Gets the settings of the reader.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReader.State">
            <summary>
            Gets the current state of the reader.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReader.CurrentName">
            <summary>
            Gets the current name.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReader.Disposed">
            <summary>
            Gets whether the BsonReader has been disposed.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BsonBinaryReader class.
            </summary>
            <param name="stream">A stream (BsonBinary does not own the stream and will not Dispose it).</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.#ctor(System.IO.Stream,MongoDB.Bson.IO.BsonBinaryReaderSettings)">
            <summary>
            Initializes a new instance of the BsonBinaryReader class.
            </summary>
            <param name="stream">A stream (BsonBinary does not own the stream and will not Dispose it).</param>
            <param name="settings">A BsonBinaryReaderSettings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.GetBookmark">
            <summary>
            Gets a bookmark to the reader's current position and state.
            </summary>
            <returns>A bookmark.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.IsAtEndOfFile">
            <summary>
            Determines whether this reader is at end of file.
            </summary>
            <returns>
            Whether this reader is at end of file.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadBinaryData">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadBoolean">
            <summary>
            Reads a BSON boolean from the reader.
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadBsonType">
            <summary>
            Reads a BsonType from the reader.
            </summary>
            <returns>A BsonType.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadBytes">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadDateTime">
            <summary>
            Reads a BSON DateTime from the reader.
            </summary>
            <returns>The number of milliseconds since the Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadDouble">
            <summary>
            Reads a BSON Double from the reader.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadEndArray">
            <summary>
            Reads the end of a BSON array from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadEndDocument">
            <summary>
            Reads the end of a BSON document from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadInt32">
            <summary>
            Reads a BSON Int32 from the reader.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadInt64">
            <summary>
            Reads a BSON Int64 from the reader.
            </summary>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadJavaScript">
            <summary>
            Reads a BSON JavaScript from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadJavaScriptWithScope">
            <summary>
            Reads a BSON JavaScript with scope from the reader (call ReadStartDocument next to read the scope).
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadMaxKey">
            <summary>
            Reads a BSON MaxKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadMinKey">
            <summary>
            Reads a BSON MinKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadName">
            <summary>
            Reads the name of an element from the reader.
            </summary>
            <returns>The name of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadName``1(MongoDB.Bson.IO.BsonTrie{``0},System.Boolean@,``0@)">
            <summary>
            Reads the name of an element from the reader (using a trie).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="trie">The trie.</param>
            <param name="found">Whether the element name was found in the trie.</param>
            <param name="value">If found is true, the value found in the trie for the element name.</param>
            <returns>
            The name of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadNull">
            <summary>
            Reads a BSON null from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadObjectId">
            <summary>
            Reads a BSON ObjectId from the reader.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadRawBsonArray">
            <summary>
            Reads a raw BSON array.
            </summary>
            <returns>
            The raw BSON array.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadRawBsonDocument">
            <summary>
            Reads a raw BSON document.
            </summary>
            <returns>
            The raw BSON document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadRegularExpression">
            <summary>
            Reads a BSON regular expression from the reader.
            </summary>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadStartArray">
            <summary>
            Reads the start of a BSON array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadStartDocument">
            <summary>
            Reads the start of a BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadString">
            <summary>
            Reads a BSON string from the reader.
            </summary>
            <returns>A String.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadSymbol">
            <summary>
            Reads a BSON symbol from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadTimestamp">
            <summary>
            Reads a BSON timestamp from the reader.
            </summary>
            <returns>The combined timestamp/increment.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReadUndefined">
            <summary>
            Reads a BSON undefined from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.ReturnToBookmark(MongoDB.Bson.IO.BsonReaderBookmark)">
            <summary>
            Returns the reader to previously bookmarked position and state.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.SkipName">
            <summary>
            Skips the name (reader must be positioned on a name).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.SkipValue">
            <summary>
            Skips the value (reader must be positioned on a value).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReader.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the reader.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonBinaryReaderBookmark">
            <summary>
            Represents a bookmark that can be used to return a reader to the current position and state.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonReaderBookmark">
            <summary>
            Represents a bookmark that can be used to return a reader to the current position and state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderBookmark.#ctor(MongoDB.Bson.IO.BsonReaderState,MongoDB.Bson.BsonType,System.String)">
            <summary>
            Initializes a new instance of the BsonReaderBookmark class.
            </summary>
            <param name="state">The state of the reader.</param>
            <param name="currentBsonType">The current BSON type.</param>
            <param name="currentName">The name of the current element.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReaderBookmark.State">
            <summary>
            Gets the current state of the reader.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReaderBookmark.CurrentBsonType">
            <summary>
            Gets the current BsonType;
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReaderBookmark.CurrentName">
            <summary>
            Gets the name of the current element.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReaderContext.Clone">
            <summary>
            Creates a clone of the context.
            </summary>
            <returns>A clone of the context.</returns>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonBinaryReaderSettings">
            <summary>
            Represents settings for a BsonBinaryReader.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonReaderSettings">
            <summary>
            Represents settings for a BsonReader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonReaderSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.#ctor(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonReaderSettings class.
            </summary>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonReaderSettings.ThrowFrozenException">
            <summary>
            Throws an InvalidOperationException when an attempt is made to change a setting after the settings are frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReaderSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonReaderSettings.IsFrozen">
            <summary>
            Gets whether the settings are frozen.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReaderSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonBinaryReaderSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReaderSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryReaderSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryReaderSettings.Defaults">
            <summary>
            Gets or sets the default settings for a BsonBinaryReader.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryReaderSettings.Encoding">
            <summary>
            Gets or sets the Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryReaderSettings.FixOldBinarySubTypeOnInput">
            <summary>
            Gets or sets whether to fix occurrences of the old binary subtype on input. 
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryReaderSettings.FixOldDateTimeMaxValueOnInput">
            <summary>
            Gets or sets whether to fix occurrences of the old representation of DateTime.MaxValue on input. 
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryReaderSettings.MaxDocumentSize">
            <summary>
            Gets or sets the max document size.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonBinaryWriter">
            <summary>
            Represents a BSON writer to a BSON Stream.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonWriter">
            <summary>
            Represents a BSON writer for some external format (see subclasses).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.#ctor(MongoDB.Bson.IO.BsonWriterSettings)">
            <summary>
            Initializes a new instance of the BsonWriter class.
            </summary>
            <param name="settings">The writer settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.Close">
            <summary>
            Closes the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.Dispose">
            <summary>
            Disposes of any resources used by the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.Flush">
            <summary>
            Flushes any pending data to the output destination.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="binaryData">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(System.Byte[],MongoDB.Bson.BsonBinarySubType)">
            <summary>
            Writes a BSON binary data element to the writer.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(System.Byte[],MongoDB.Bson.BsonBinarySubType,MongoDB.Bson.GuidRepresentation)">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
            <param name="guidRepresentation">The respresentation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(System.String,MongoDB.Bson.BsonBinaryData)">
            <summary>
            Writes a BSON binary data element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="binaryData">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(System.String,System.Byte[],MongoDB.Bson.BsonBinarySubType)">
            <summary>
            Writes a BSON binary data element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBinaryData(System.String,System.Byte[],MongoDB.Bson.BsonBinarySubType,MongoDB.Bson.GuidRepresentation)">
            <summary>
            Writes a BSON binary data element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a BSON Boolean to the writer.
            </summary>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBoolean(System.String,System.Boolean)">
            <summary>
            Writes a BSON Boolean element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteBytes(System.String,System.Byte[])">
            <summary>
            Writes a BSON binary data element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteDateTime(System.Int64)">
            <summary>
            Writes a BSON DateTime to the writer.
            </summary>
            <param name="value">The number of milliseconds since the Unix epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteDateTime(System.String,System.Int64)">
            <summary>
            Writes a BSON DateTime element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The number of milliseconds since the Unix epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteDouble(System.Double)">
            <summary>
            Writes a BSON Double to the writer.
            </summary>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteDouble(System.String,System.Double)">
            <summary>
            Writes a BSON Double element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteEndArray">
            <summary>
            Writes the end of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteEndDocument">
            <summary>
            Writes the end of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a BSON Int32 to the writer.
            </summary>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteInt32(System.String,System.Int32)">
            <summary>
            Writes a BSON Int32 element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a BSON Int64 to the writer.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteInt64(System.String,System.Int64)">
            <summary>
            Writes a BSON Int64 element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteJavaScript(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer.
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteJavaScript(System.String,System.String)">
            <summary>
            Writes a BSON JavaScript element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteJavaScriptWithScope(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer (call WriteStartDocument to start writing the scope).
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteJavaScriptWithScope(System.String,System.String)">
            <summary>
            Writes a BSON JavaScript element to the writer (call WriteStartDocument to start writing the scope).
            </summary>
            <param name="name">The name of the element.</param>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteMaxKey">
            <summary>
            Writes a BSON MaxKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteMaxKey(System.String)">
            <summary>
            Writes a BSON MaxKey element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteMinKey">
            <summary>
            Writes a BSON MinKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteMinKey(System.String)">
            <summary>
            Writes a BSON MinKey element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteName(System.String)">
            <summary>
            Writes the name of an element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteNull">
            <summary>
            Writes a BSON null to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteNull(System.String)">
            <summary>
            Writes a BSON null element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the writer.
            </summary>
            <param name="objectId">The ObjectId.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteObjectId(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Writes a BSON ObjectId to the writer.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteObjectId(System.String,MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="objectId">The ObjectId.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteObjectId(System.String,System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Writes a BSON ObjectId element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRawBsonArray(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON array.
            </summary>
            <param name="slice">The byte buffer containing the raw BSON array.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRawBsonArray(System.String,MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON array.
            </summary>
            <param name="name">The name.</param>
            <param name="slice">The byte buffer containing the raw BSON array.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRawBsonDocument(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON document.
            </summary>
            <param name="slice">The byte buffer containing the raw BSON document.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRawBsonDocument(System.String,MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON document.
            </summary>
            <param name="name">The name.</param>
            <param name="slice">The byte buffer containing the raw BSON document.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRegularExpression(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Writes a BSON regular expression to the writer.
            </summary>
            <param name="regex">A BsonRegularExpression.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRegularExpression(System.String,System.String)">
            <summary>
            Writes a BSON regular expression to the writer.
            </summary>
            <param name="pattern">A regular expression pattern.</param>
            <param name="options">A regular expression options.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRegularExpression(System.String,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Writes a BSON regular expression element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="regex">A BsonRegularExpression.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteRegularExpression(System.String,System.String,System.String)">
            <summary>
            Writes a BSON regular expression element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="pattern">A regular expression pattern.</param>
            <param name="options">A regular expression options.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteStartArray">
            <summary>
            Writes the start of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteStartArray(System.String)">
            <summary>
            Writes the start of a BSON array element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteStartDocument">
            <summary>
            Writes the start of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteStartDocument(System.String)">
            <summary>
            Writes the start of a BSON document element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteString(System.String)">
            <summary>
            Writes a BSON String to the writer.
            </summary>
            <param name="value">The String value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteString(System.String,System.String)">
            <summary>
            Writes a BSON String element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The String value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteSymbol(System.String)">
            <summary>
            Writes a BSON Symbol to the writer.
            </summary>
            <param name="value">The symbol.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteSymbol(System.String,System.String)">
            <summary>
            Writes a BSON Symbol element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The symbol.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteTimestamp(System.Int64)">
            <summary>
            Writes a BSON timestamp to the writer.
            </summary>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteTimestamp(System.String,System.Int64)">
            <summary>
            Writes a BSON timestamp element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteUndefined">
            <summary>
            Writes a BSON undefined to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.WriteUndefined(System.String)">
            <summary>
            Writes a BSON undefined element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.CheckElementName(System.String)">
            <summary>
            Checks that the element name is valid.
            </summary>
            <param name="name">The element name to be checked.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the writer.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.ThrowInvalidContextType(System.String,MongoDB.Bson.IO.ContextType,MongoDB.Bson.IO.ContextType[])">
            <summary>
            Throws an InvalidOperationException when the method called is not valid for the current ContextType.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="actualContextType">The actual ContextType.</param>
            <param name="validContextTypes">The valid ContextTypes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriter.ThrowInvalidState(System.String,MongoDB.Bson.IO.BsonWriterState[])">
            <summary>
            Throws an InvalidOperationException when the method called is not valid for the current state.
            </summary>
            <param name="methodName">The name of the method.</param>
            <param name="validStates">The valid states.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.CheckElementNames">
            <summary>
            Gets or sets whether to check element names (no periods or leading $).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.CheckUpdateDocument">
            <summary>
            Gets or sets whether to check an update document (turns CheckElementNames on if first element name does *not* start with $).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.SerializationDepth">
            <summary>
            Gets the current serialization depth.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.Settings">
            <summary>
            Gets the settings of the writer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.State">
            <summary>
            Gets the current state of the writer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.Disposed">
            <summary>
            Gets whether the BsonWriter has been disposed.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriter.Name">
            <summary>
            Gets the name of the element being written.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BsonBinaryWriter class.
            </summary>
            <param name="stream">A stream. The BsonBinaryWriter does not own the stream and will not Dispose it.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.#ctor(System.IO.Stream,MongoDB.Bson.IO.BsonBinaryWriterSettings)">
            <summary>
            Initializes a new instance of the BsonBinaryWriter class.
            </summary>
            <param name="stream">A stream. The BsonBinaryWriter does not own the stream and will not Dispose it.</param>
            <param name="settings">The BsonBinaryWriter settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.Close">
            <summary>
            Closes the writer. Also closes the base stream.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.Flush">
            <summary>
            Flushes any pending data to the output destination.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.PopMaxDocumentSize">
            <summary>
            Pops the max document size stack, restoring the previous max document size.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.PushMaxDocumentSize(System.Int32)">
            <summary>
            Pushes a new max document size onto the max document size stack.
            </summary>
            <param name="maxDocumentSize">The maximum size of the document.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteBinaryData(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="binaryData">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a BSON Boolean to the writer.
            </summary>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteDateTime(System.Int64)">
            <summary>
            Writes a BSON DateTime to the writer.
            </summary>
            <param name="value">The number of milliseconds since the Unix epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteDouble(System.Double)">
            <summary>
            Writes a BSON Double to the writer.
            </summary>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteEndArray">
            <summary>
            Writes the end of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteEndDocument">
            <summary>
            Writes the end of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a BSON Int32 to the writer.
            </summary>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a BSON Int64 to the writer.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteJavaScript(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer.
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteJavaScriptWithScope(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer (call WriteStartDocument to start writing the scope).
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteMaxKey">
            <summary>
            Writes a BSON MaxKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteMinKey">
            <summary>
            Writes a BSON MinKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteNull">
            <summary>
            Writes a BSON null to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the writer.
            </summary>
            <param name="objectId">The ObjectId.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteRawBsonArray(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON array.
            </summary>
            <param name="slice">The byte buffer containing the raw BSON array.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteRawBsonDocument(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Writes a raw BSON document.
            </summary>
            <param name="slice">The byte buffer containing the raw BSON document.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteRegularExpression(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Writes a BSON regular expression to the writer.
            </summary>
            <param name="regex">A BsonRegularExpression.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteStartArray">
            <summary>
            Writes the start of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteStartDocument">
            <summary>
            Writes the start of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteString(System.String)">
            <summary>
            Writes a BSON String to the writer.
            </summary>
            <param name="value">The String value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteSymbol(System.String)">
            <summary>
            Writes a BSON Symbol to the writer.
            </summary>
            <param name="value">The symbol.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteTimestamp(System.Int64)">
            <summary>
            Writes a BSON timestamp to the writer.
            </summary>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.WriteUndefined">
            <summary>
            Writes a BSON undefined to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriter.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the writer.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryWriter.Stream">
            <summary>
            Gets the stream.
            </summary>
            <value>
            The stream.
            </value>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonBinaryWriterSettings">
            <summary>
            Represents settings for a BsonBinaryWriter.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonWriterSettings">
            <summary>
            Represents settings for a BsonWriter.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonWriterSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.#ctor(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonWriterSettings class.
            </summary>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonWriterSettings.ThrowFrozenException">
            <summary>
            Throws an InvalidOperationException when an attempt is made to change a setting after the settings are frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriterSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriterSettings.IsFrozen">
            <summary>
            Gets whether the settings are frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonWriterSettings.MaxSerializationDepth">
            <summary>
            Gets or sets the max serialization depth allowed (used to detect circular references).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriterSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonBinaryWriterSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriterSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonBinaryWriterSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryWriterSettings.Defaults">
            <summary>
            Gets or sets the default BsonBinaryWriter settings.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryWriterSettings.Encoding">
            <summary>
            Gets or sets the Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryWriterSettings.FixOldBinarySubTypeOnOutput">
            <summary>
            Gets or sets whether to fix the old binary data subtype on output.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonBinaryWriterSettings.MaxDocumentSize">
            <summary>
            Gets or sets the max document size.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonChunk">
            <summary>
            Represents a BSON buffer chunk.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunk.#ctor(System.Byte[],MongoDB.Bson.IO.BsonChunkPool)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonChunk"/> class.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="chunkPool">The chunk pool.</param>
            <exception cref="T:System.ArgumentNullException">
            bytes
            or
            pool
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunk.DecrementReferenceCount">
            <summary>
            Decrements the reference count.
            </summary>
            <exception cref="T:MongoDB.Bson.BsonInternalException">Reference count is less than or equal to zero.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunk.IncrementReferenceCount">
            <summary>
            Increments the reference count.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonChunk.Bytes">
            <summary>
            Gets the bytes.
            </summary>
            <value>
            The bytes.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonChunk.ReferenceCount">
            <summary>
            Gets the reference count.
            </summary>
            <value>
            The reference count.
            </value>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonChunkPool">
            <summary>
            Represents a pool of chunks used by BsonBuffer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunkPool.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonChunkPool"/> class.
            </summary>
            <param name="maxPoolSize">The maximum number of chunks to keep in the pool.</param>
            <param name="chunkSize">The size of each chunk.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunkPool.AcquireChunk">
            <summary>
            Acquires a chunk.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonChunkPool.ReleaseChunk(MongoDB.Bson.IO.BsonChunk)">
            <summary>
            Releases a chunk.
            </summary>
            <param name="chunk">The chunk.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonChunkPool.Default">
            <summary>
            Gets the default chunk pool.
            </summary>
            <value>
            The default chunk pool.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonChunkPool.ChunkSize">
            <summary>
            Gets the chunk size.
            </summary>
            <value>
            The chunk size.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonChunkPool.MaxPoolSize">
            <summary>
            Gets or sets the max pool size.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonDocumentReader">
            <summary>
            Represents a BSON reader for a BsonDocument.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the BsonDocumentReader class.
            </summary>
            <param name="document">A BsonDocument.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.BsonDocumentReaderSettings)">
            <summary>
            Initializes a new instance of the BsonDocumentReader class.
            </summary>
            <param name="document">A BsonDocument.</param>
            <param name="settings">The reader settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.GetBookmark">
            <summary>
            Gets a bookmark to the reader's current position and state.
            </summary>
            <returns>A bookmark.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.IsAtEndOfFile">
            <summary>
            Determines whether this reader is at end of file.
            </summary>
            <returns>
            Whether this reader is at end of file.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadBinaryData">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadBoolean">
            <summary>
            Reads a BSON boolean from the reader.
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadBsonType">
            <summary>
            Reads a BsonType from the reader.
            </summary>
            <returns>A BsonType.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadBytes">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadDateTime">
            <summary>
            Reads a BSON DateTime from the reader.
            </summary>
            <returns>The number of milliseconds since the Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadDouble">
            <summary>
            Reads a BSON Double from the reader.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadEndArray">
            <summary>
            Reads the end of a BSON array from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadEndDocument">
            <summary>
            Reads the end of a BSON document from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadInt32">
            <summary>
            Reads a BSON Int32 from the reader.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadInt64">
            <summary>
            Reads a BSON Int64 from the reader.
            </summary>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadJavaScript">
            <summary>
            Reads a BSON JavaScript from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadJavaScriptWithScope">
            <summary>
            Reads a BSON JavaScript with scope from the reader (call ReadStartDocument next to read the scope).
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadMaxKey">
            <summary>
            Reads a BSON MaxKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadMinKey">
            <summary>
            Reads a BSON MinKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadName">
            <summary>
            Reads the name of an element from the reader.
            </summary>
            <returns>
            The name of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadNull">
            <summary>
            Reads a BSON null from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadObjectId">
            <summary>
            Reads a BSON ObjectId from the reader.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadRegularExpression">
            <summary>
            Reads a BSON regular expression from the reader.
            </summary>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadStartArray">
            <summary>
            Reads the start of a BSON array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadStartDocument">
            <summary>
            Reads the start of a BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadString">
            <summary>
            Reads a BSON string from the reader.
            </summary>
            <returns>A String.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadSymbol">
            <summary>
            Reads a BSON symbol from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadTimestamp">
            <summary>
            Reads a BSON timestamp from the reader.
            </summary>
            <returns>The combined timestamp/increment.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReadUndefined">
            <summary>
            Reads a BSON undefined from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.ReturnToBookmark(MongoDB.Bson.IO.BsonReaderBookmark)">
            <summary>
            Returns the reader to previously bookmarked position and state.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.SkipName">
            <summary>
            Skips the name (reader must be positioned on a name).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.SkipValue">
            <summary>
            Skips the value (reader must be positioned on a value).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReader.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the reader.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonDocumentReaderBookmark">
            <summary>
            Represents a bookmark that can be used to return a reader to the current position and state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReaderContext.Clone">
            <summary>
            Creates a clone of the context.
            </summary>
            <returns>A clone of the context.</returns>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonDocumentReaderSettings">
            <summary>
            Represents settings for a BsonDocumentReader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReaderSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonDocumentReaderSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReaderSettings.#ctor(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonDocumentReaderSettings class.
            </summary>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReaderSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentReaderSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonDocumentReaderSettings.Defaults">
            <summary>
            Gets or sets the default settings for a BsonDocumentReader.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonDocumentWriter">
            <summary>
            Represents a BSON writer to a BsonDocument.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the BsonDocumentWriter class.
            </summary>
            <param name="document">The document to write to (normally starts out as an empty document).</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.IO.BsonDocumentWriterSettings)">
            <summary>
            Initializes a new instance of the BsonDocumentWriter class.
            </summary>
            <param name="document">The document to write to (normally starts out as an empty document).</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.Close">
            <summary>
            Closes the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.Flush">
            <summary>
            Flushes any pending data to the output destination.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteBinaryData(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="binaryData">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a BSON Boolean to the writer.
            </summary>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteDateTime(System.Int64)">
            <summary>
            Writes a BSON DateTime to the writer.
            </summary>
            <param name="value">The number of milliseconds since the Unix epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteDouble(System.Double)">
            <summary>
            Writes a BSON Double to the writer.
            </summary>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteEndArray">
            <summary>
            Writes the end of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteEndDocument">
            <summary>
            Writes the end of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a BSON Int32 to the writer.
            </summary>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a BSON Int64 to the writer.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteJavaScript(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer.
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteJavaScriptWithScope(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer (call WriteStartDocument to start writing the scope).
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteMaxKey">
            <summary>
            Writes a BSON MaxKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteMinKey">
            <summary>
            Writes a BSON MinKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteName(System.String)">
            <summary>
            Writes the name of an element to the writer.
            </summary>
            <param name="name">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteNull">
            <summary>
            Writes a BSON null to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the writer.
            </summary>
            <param name="objectId">The ObjectId.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteRegularExpression(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Writes a BSON regular expression to the writer.
            </summary>
            <param name="regex">A BsonRegularExpression.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteStartArray">
            <summary>
            Writes the start of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteStartDocument">
            <summary>
            Writes the start of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteString(System.String)">
            <summary>
            Writes a BSON String to the writer.
            </summary>
            <param name="value">The String value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteSymbol(System.String)">
            <summary>
            Writes a BSON Symbol to the writer.
            </summary>
            <param name="value">The symbol.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteTimestamp(System.Int64)">
            <summary>
            Writes a BSON timestamp to the writer.
            </summary>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.WriteUndefined">
            <summary>
            Writes a BSON undefined to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriter.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the writer.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonDocumentWriter.Document">
            <summary>
            Gets the BsonDocument being written to.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonDocumentWriterSettings">
            <summary>
            Represents settings for a BsonDocumentWriter.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriterSettings.#ctor">
            <summary>
            Initializes a new instance of the BsonDocumentWriterSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriterSettings.#ctor(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonDocumentWriterSettings class.
            </summary>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriterSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonDocumentWriterSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonDocumentWriterSettings.Defaults">
            <summary>
            Gets or sets the default BsonDocumentWriter settings.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonMemoryStream">
            <summary>
            Represents a Stream backed by memory. Similar to MemoryStream but has a configurable buffer
            provider and also implements the IBsonStream interface for higher performance BSON I/O.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.IBsonStream">
            <summary>
            Represents specialized performance critial reading and writing methods for BSON values. Classes
            that implement Stream can choose to also implement this interface to improve performance when
            reading and writing BSON values.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonCString">
            <summary>
            Reads a BSON CString from the stream.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonDouble">
            <summary>
            Reads a BSON double from the stream.
            </summary>
            <returns>A double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonInt32">
            <summary>
            Reads a 32-bit BSON integer from the stream.
            </summary>
            <returns>An int.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonInt64">
            <summary>
            Reads a 64-bit BSON integer from the stream.
            </summary>
            <returns>A long.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonObjectId">
            <summary>
            Reads a BSON ObjectId from the stream.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.ReadBsonString(System.Text.UTF8Encoding)">
            <summary>
            Reads a BSON string from the stream.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.SkipBsonCString">
            <summary>
            Skips over a BSON CString leaving the stream positioned just after the terminating null byte.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonCString(System.String)">
            <summary>
            Writes a BSON CString to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonDouble(System.Double)">
            <summary>
            Writes a BSON double to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonInt32(System.Int32)">
            <summary>
            Writes a 32-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonInt64(System.Int64)">
            <summary>
            Writes a 64-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IBsonStream.WriteBsonString(System.String,System.Text.UTF8Encoding)">
            <summary>
            Writes a BSON string to the stream.
            </summary>
            <param name="value">The value.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.ArraySegment{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="segment">The backing array segment.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.ArraySegment{System.Byte},System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="segment">The backing array segment.</param>
            <param name="writeable">Whether the stream is writeable.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="buffer">The backing buffer.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Byte[],System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="buffer">The backing buffer.</param>
            <param name="writeable">Whether the stream is writeable.</param>
            <exception cref="T:System.ArgumentNullException">buffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="buffer">The backing buffer.</param>
            <param name="origin">The origin of the slice in the backing buffer.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="buffer">The backing buffer.</param>
            <param name="origin">The origin of the slice in the backing buffer.</param>
            <param name="count">The count.</param>
            <param name="writeable">Whether the stream is writeable.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="buffer">The backing buffer.</param>
            <param name="origin">The origin of the slice in the backing buffer.</param>
            <param name="count">The count.</param>
            <param name="writeable">Whether the stream is writeable.</param>
            <param name="publiclyVisible">Whether the backing bytes are publicly visible (via GetBuffer).</param>
            <exception cref="T:System.ArgumentNullException">buffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonMemoryStream"/> class.
            </summary>
            <param name="capacity">The initial capacity.</param>
            <exception cref="T:System.ArgumentException">Capacity cannot be negative.;capacity</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets the slice.
            </summary>
            <param name="position">The position.</param>
            <param name="length">The length.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
            <exception cref="T:System.ArgumentException">
            Length is negative.;length
            or
            Length extends beyond the end of the buffer.;length
            </exception>
            <exception cref="T:System.NotSupportedException">GetSlice is not supported for writeable streams.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset"/> and (<paramref name="offset"/> + <paramref name="count"/> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
            <exception cref="T:System.ArgumentNullException">buffer</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            offset;Offset is negative.
            or
            count;Count is negative.
            </exception>
            <exception cref="T:System.ArgumentException">Offset plus count exceed buffer length.;count</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">offset;Offset must be a 32-bit value.</exception>
            <exception cref="T:System.ArgumentException">origin</exception>
            <exception cref="T:System.IO.IOException">
            Attempt to Seek before the beginning of the stream.
            or
            Attempt to Seek to a position greater than Int32.MaxValue.
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="value">The desired length of the current stream in bytes.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value;Length is not a positive 32-bit integer value.
            or
            value
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.ToArray">
            <summary>
            Writes the stream contents to a byte array, regardless of the Position property.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count"/> bytes from <paramref name="buffer"/> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer"/> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
            <exception cref="T:System.ArgumentNullException">buffer</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            offset;Offset is negative.
            or
            count;Count is negative.
            </exception>
            <exception cref="T:System.ArgumentException">Offset plus count exceed buffer length.;count</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.WriteTo(System.IO.Stream)">
            <summary>
            Writes the entire contents of the memory stream to another stream.
            </summary>
            <param name="stream">The stream to write this memory stream to.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonCString">
            <summary>
            Reads a BSON CString from the stream.
            </summary>
            <returns>
            A string.
            </returns>
            <exception cref="T:System.ArgumentNullException">encoding</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonDouble">
            <summary>
            Reads a BSON double from the stream.
            </summary>
            <returns>
            A double.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonInt32">
            <summary>
            Reads a 32-bit BSON integer from the stream.
            </summary>
            <returns>
            An int.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonInt64">
            <summary>
            Reads a 64-bit BSON integer from the stream.
            </summary>
            <returns>
            A long.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonObjectId">
            <summary>
            Reads a BSON ObjectId from the stream.
            </summary>
            <returns>
            An ObjectId.
            </returns>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#ReadBsonString(System.Text.UTF8Encoding)">
            <summary>
            Reads a BSON string from the stream.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>
            A string.
            </returns>
            <exception cref="T:System.ArgumentNullException">encoding</exception>
            <exception cref="T:System.FormatException"></exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#SkipBsonCString">
            <summary>
            Skips over a BSON CString leaving the stream positioned just after the terminating null byte.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonCString(System.String)">
            <summary>
            Writes a BSON CString to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonDouble(System.Double)">
            <summary>
            Writes a BSON double to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonInt32(System.Int32)">
            <summary>
            Writes a 32-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonInt64(System.Int64)">
            <summary>
            Writes a 64-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonMemoryStream.MongoDB#Bson#IO#IBsonStream#WriteBsonString(System.String,System.Text.UTF8Encoding)">
            <summary>
            Writes a BSON string to the stream.
            </summary>
            <param name="value">The value.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.Capacity">
            <summary>
            Gets or sets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">value;Capacity is smaller than current Length.</exception>
            <exception cref="T:System.NotSupportedException">Stream Capacity is fixed.</exception>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonMemoryStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value;Position is negative.
            or
            value;Position is greater than Int32.MaxValue.
            </exception>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonReaderState">
            <summary>
            Represents the state of a reader.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Initial">
            <summary>
            The initial state.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Type">
            <summary>
            The reader is positioned at the type of an element or value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Name">
            <summary>
            The reader is positioned at the name of an element.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Value">
            <summary>
            The reader is positioned at a value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.ScopeDocument">
            <summary>
            The reader is positioned at a scope document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.EndOfDocument">
            <summary>
            The reader is positioned at the end of a document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.EndOfArray">
            <summary>
            The reader is positioned at the end of an array.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Done">
            <summary>
            The reader has finished reading a document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonReaderState.Closed">
            <summary>
            The reader is closed.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonStreamReader">
            <summary>
            Represents a reader that reads primitive BSON types from a Stream.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.#ctor(System.IO.Stream,System.Text.UTF8Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonStreamReader"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadBoolean">
            <summary>
            Reads a BSON boolean from the stream.
            </summary>
            <returns>A bool.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadBsonType">
            <summary>
            Reads a BSON type code from the stream.
            </summary>
            <returns>A BsonType.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadCString">
            <summary>
            Reads a BSON CString from the stream.
            </summary>
            <returns>A string.</returns>
            <exception cref="T:System.ArgumentNullException">
            stream
            or
            encoding
            </exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadDouble">
            <summary>
            Reads a BSON double from the stream.
            </summary>
            <returns>A double.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadInt32">
            <summary>
            Reads a 32-bit BSON integer from the stream.
            </summary>
            <returns>An int.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadInt64">
            <summary>
            Reads a 64-bit BSON integer from the stream.
            </summary>
            <returns>A long.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadObjectId">
            <summary>
            Reads a BSON ObjectId from the stream.
            </summary>
            <returns>An ObjectId.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadString">
            <summary>
            Reads a BSON string from the stream.
            </summary>
            
            <returns>A string.</returns>
            <exception cref="T:System.ArgumentNullException">
            stream
            or
            encoding
            </exception>
            <exception cref="T:System.FormatException">
            String is missing null terminator byte.
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadByte">
            <summary>
            Reads a byte.
            </summary>
            <returns>A byte.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes from the stream and stores them in an existing buffer. Throws EndOfStreamException if not enough bytes are available.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset in the buffer at which to start storing the bytes being read.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.ArgumentException">Count cannot be negative.;count</exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.ReadBytes(System.Int32)">
            <summary>
            Reads bytes from the stream. Throws EndOfStreamException if not enough bytes are available.
            </summary>
            <param name="count">The count.</param>
            <returns>A byte array.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.ArgumentException">Count cannot be negative.;count</exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamReader.SkipCString">
            <summary>
            Skips over a BSON CString positioning the stream to just after the terminating null byte.
            </summary>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonStreamReader.BaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <value>
            The base stream.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonStreamReader.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonStreamWriter">
            <summary>
            Represents a writer that writes primitive BSON types to a Stream.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.#ctor(System.IO.Stream,System.Text.UTF8Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.BsonStreamWriter"/> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a BSON boolean to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteBsonType(MongoDB.Bson.BsonType)">
            <summary>
            Writes a BSON type code to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes bytes to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteCString(System.String)">
            <summary>
            Writes a BSON CString to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">
            stream
            or
            encoding
            </exception>
            <exception cref="T:System.ArgumentException">UTF8 representation cannot contain null bytes when writing a BSON CString.;value</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteDouble(System.Double)">
            <summary>
            Writes a BSON double to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a 32-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a 64-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonStreamWriter.WriteString(System.String)">
            <summary>
            Writes a BSON string to the stream.
            </summary>
            <param name="value">The value.</param>
            
            <exception cref="T:System.ArgumentNullException">
            stream
            or
            encoding
            </exception>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonStreamWriter.BaseStream">
            <summary>
            Gets the base stream.
            </summary>
            <value>
            The base stream.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonStreamWriter.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonTrie`1">
            <summary>
            Represents a mapping from a set of UTF8 encoded strings to a set of elementName/value pairs, implemented as a trie.
            </summary>
            <typeparam name="TValue">The type of the BsonTrie values.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonTrie`1.#ctor">
            <summary>
            Initializes a new instance of the BsonTrie class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonTrie`1.Add(System.String,`0)">
            <summary>
            Adds the specified elementName (after encoding as a UTF8 byte sequence) and value to the trie.
            </summary>
            <param name="elementName">The element name to add.</param>
            <param name="value">The value to add. The value can be null for reference types.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonTrie`1.TryGetValue(System.String,`0@)">
            <summary>
            Gets the value associated with the specified element name.
            </summary>
            <param name="elementName">The element name.</param>
            <param name="value">
            When this method returns, contains the value associated with the specified element name, if the key is found;
            otherwise, the default value for the type of the value parameter. This parameter is passed unitialized.
            </param>
            <returns>True if the value was found; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonTrie`1.Root">
            <summary>
            Gets the root node.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonTrieNode`1">
            <summary>
            Represents a node in a BsonTrie.
            </summary>
            <typeparam name="TValue">The type of the BsonTrie values.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.IO.BsonTrieNode`1.GetChild(System.Byte)">
            <summary>
            Gets the child of this node for a given key byte.
            </summary>
            <param name="keyByte">The key byte.</param>
            <returns>The child node if it exists; otherwise, null.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonTrieNode`1.HasValue">
            <summary>
            Gets whether this node has a value.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonTrieNode`1.ElementName">
            <summary>
            Gets the element name for this node.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.BsonTrieNode`1.Value">
            <summary>
            Gets the value for this node.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.BsonWriterState">
            <summary>
            Represents the state of a BsonWriter.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.Initial">
            <summary>
            The initial state.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.Name">
            <summary>
            The writer is positioned to write a name.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.Value">
            <summary>
            The writer is positioned to write a value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.ScopeDocument">
            <summary>
            The writer is positioned to write a scope document (call WriteStartDocument to start writing the scope document).
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.Done">
            <summary>
            The writer is done.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.BsonWriterState.Closed">
            <summary>
            The writer is closed.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.ByteArrayBuffer">
            <summary>
            An IByteBuffer that is backed by a contiguous byte array.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.IByteBuffer">
            <summary>
            Represents a byte buffer (backed by various means depending on the implementation).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.AccessBackingBytes(System.Int32)">
            <summary>
            Access the backing bytes directly. The returned ArraySegment will point to the desired position and contain
            as many bytes as possible up to the next chunk boundary (if any). If the returned ArraySegment does not
            contain enough bytes for your needs you will have to call ReadBytes instead.
            </summary>
            <param name="position">The position.</param>
            <returns>
            An ArraySegment pointing directly to the backing bytes for the position.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.Clear(System.Int32,System.Int32)">
            <summary>
            Clears the specified bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.EnsureCapacity(System.Int32)">
            <summary>
            Ensure that the buffer has at least the requested capacity. Depending on the buffer allocation strategy
            calling this method may result in a higher capacity than requested (but never lower).
            </summary>
            <param name="capacity">The minimum length.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets a slice of this buffer.
            </summary>
            <param name="position">The position of the start of the slice.</param>
            <param name="length">The length of the slice.</param>
            <returns>A slice of this buffer.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.LoadFrom(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Loads the buffer from a stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.MakeReadOnly">
            <summary>
            Makes this buffer read only.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.ReadByte(System.Int32)">
            <summary>
            Reads a byte.
            </summary>
            <param name="position">The position.</param>
            <returns>A byte.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.ReadBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="destination">The destination.</param>
            <param name="offset">The destination offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.WriteByte(System.Int32,System.Byte)">
            <summary>
            Writes a byte.
            </summary>
            <param name="position">The position.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.WriteBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="source">The bytes (in the form of a byte array).</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.IByteBuffer.WriteTo(System.IO.Stream)">
            <summary>
            Writes the contents of this buffer to a stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.IByteBuffer.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.IByteBuffer.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.IByteBuffer.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.#ctor(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.ByteArrayBuffer"/> class.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="origin">The origin of the slice.</param>
            <param name="length">The length of the slice.</param>
            <param name="isReadOnly">Whether the buffer is read only.</param>
            <exception cref="T:System.ArgumentNullException">bytes</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.AccessBackingBytes(System.Int32)">
            <summary>
            Accesses the backing bytes.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.Clear(System.Int32,System.Int32)">
            <summary>
            Clears the specified bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.EnsureCapacity(System.Int32)">
            <summary>
            Expands the buffer to at least the specified minimum length. Depending on the buffer's growth strategy
            it may choose to expand to a larger length.
            </summary>
            <param name="capacity">The minimum length.</param>
            <exception cref="T:System.ArgumentException">Minimum length is negative.;minimumLength</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets a slice of this buffer.
            </summary>
            <param name="position">The position of the start of the slice.</param>
            <param name="length">The length of the slice.</param>
            <returns>
            A slice of this buffer.
            </returns>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer</exception>
            <exception cref="T:System.InvalidOperationException">GetSlice can only be called for read only buffers.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position
            or
            length
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.LoadFrom(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Loads the buffer from a stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
            <exception cref="T:System.ArgumentException">
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            </exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.MakeReadOnly">
            <summary>
            Makes this buffer read only.
            </summary>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.ReadByte(System.Int32)">
            <summary>
            Reads a byte.
            </summary>
            <param name="position">The position.</param>
            <returns>
            A byte.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.ReadBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="destination">The destination.</param>
            <param name="offset">The destination offset.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
            <exception cref="T:System.ArgumentNullException">destination</exception>
            <exception cref="T:System.ArgumentException">
            Offset is negative.;offset
            or
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            or
            Count extends past the end of the destination.;count
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.WriteByte(System.Int32,System.Byte)">
            <summary>
            Writes a byte.
            </summary>
            <param name="position">The position.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.WriteBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="source">The bytes (in the form of a byte array).</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position;Position is outside of the buffer.
            or
            offset;Offset is outside of the source.
            </exception>
            <exception cref="T:System.ArgumentNullException">source</exception>
            <exception cref="T:System.ArgumentException">
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            or
            Count extends past the end of the source.;count
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.WriteTo(System.IO.Stream)">
            <summary>
            Writes Length bytes from this buffer starting at Position 0 to a stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.EnsureIsReadOnly">
            <summary>
            Ensures the buffer is read only.
            </summary>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer is not read only.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.EnsureIsWritable">
            <summary>
            Ensures the buffer is writable.
            </summary>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer is not writable.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteArrayBuffer.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteArrayBuffer.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteArrayBuffer.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer</exception>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteArrayBuffer.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
            <exception cref="T:System.ArgumentException">Length is negative.;value</exception>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteArrayBuffer.Disposed">
            <summary>
            Gets a value indicating whether this <see cref="T:MongoDB.Bson.IO.ByteArrayBuffer"/> is disposed.
            </summary>
            <value>
              <c>true</c> if disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteArrayBuffer.Origin">
            <summary>
            Gets the origin.
            </summary>
            <value>
            The origin.
            </value>
        </member>
        <member name="T:MongoDB.Bson.IO.ByteBufferFactory">
            <summary>
            Represents a factory for IBsonBuffers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferFactory.Create(MongoDB.Bson.IO.BsonChunkPool,System.Int32)">
            <summary>
            Creates a buffer of the specified length. Depending on the length, either a SingleChunkBuffer or a MultiChunkBuffer will be created.
            </summary>
            <param name="chunkPool">The chunk pool.</param>
            <param name="length">The length.</param>
            <returns>A buffer.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferFactory.LoadLengthPrefixedDataFrom(System.IO.Stream)">
            <summary>
            Loads a byte buffer from a stream (the first 4 bytes in the stream are the length of the data).
            Depending on the required capacity, either a SingleChunkBuffer or a MultiChunkBuffer will be created.
            </summary>
            <param name="stream">The stream.</param>
            <returns>A buffer.</returns>
            <exception cref="T:System.ArgumentNullException">stream</exception>
        </member>
        <member name="T:MongoDB.Bson.IO.ByteBufferStream">
            <summary>
            Represents a Stream backed by an IByteBuffer. Similar to MemoryStream but backed by an IByteBuffer
            instead of a byte array and also implements the IBsonStream interface for higher performance BSON I/O.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.#ctor(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.ByteBufferStream"/> class.
            </summary>
            <param name="byteBuffer">The byte buffer.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.#ctor(MongoDB.Bson.IO.IByteBuffer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.ByteBufferStream"/> class.
            </summary>
            <param name="byteBuffer">The byte buffer.</param>
            <param name="ownsByteBuffer">Whether the stream owns the byteBuffer and should Dispose it when done.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.Flush">
            <summary>
            When overridden in a derived class, clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets the slice.
            </summary>
            <param name="position">The position.</param>
            <param name="length">The length.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside the stream.</exception>
            <exception cref="T:System.ArgumentException">
            Length is negative.;length
            or
            Length extends beyond the end of the stream.
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
            <param name="count">The maximum number of bytes to be read from the current stream.</param>
            <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.ReadByte">
            <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
            <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            When overridden in a derived class, sets the position within the current stream.
            </summary>
            <param name="offset">A byte offset relative to the <paramref name="origin"/> parameter.</param>
            <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin"/> indicating the reference point used to obtain the new position.</param>
            <returns>
            The new position within the current stream.
            </returns>
            <exception cref="T:System.ArgumentException">origin</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.SetLength(System.Int64)">
            <summary>
            When overridden in a derived class, sets the length of the current stream.
            </summary>
            <param name="length">The desired length of the current stream in bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            When overridden in a derived class, writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
            <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
            <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
            <param name="count">The number of bytes to be written to the current stream.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
            <param name="value">The byte to write to the stream.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.Stream" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonCString">
            <summary>
            Reads a BSON CString from the stream.
            </summary>
            <returns>
            A string.
            </returns>
            <exception cref="T:System.ArgumentNullException">encoding</exception>
            <exception cref="T:System.FormatException">CString is missing terminating null byte.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonDouble">
            <summary>
            Reads a BSON double from the stream.
            </summary>
            <returns>
            A double.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonInt32">
            <summary>
            Reads a 32-bit BSON integer from the stream.
            </summary>
            <returns>
            An int.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonInt64">
            <summary>
            Reads a 64-bit BSON integer from the stream.
            </summary>
            <returns>
            A long.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonObjectId">
            <summary>
            Reads a BSON ObjectId from the stream.
            </summary>
            <returns>
            An ObjectId.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#ReadBsonString(System.Text.UTF8Encoding)">
            <summary>
            Reads a BSON string from the stream.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>
            A string.
            </returns>
            <exception cref="T:System.ArgumentNullException">encoding</exception>
            <exception cref="T:System.FormatException">
            String is missing terminating null byte.
            or
            String is missing terminating null byte.
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#SkipBsonCString">
            <summary>
            Skips over a BSON CString leaving the stream positioned just after the terminating null byte.
            </summary>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonCString(System.String)">
            <summary>
            Writes a BSON CString to the stream.
            </summary>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentException">
            UTF8 representation of a CString cannot contain null bytes.
            or
            UTF8 representation of a CString cannot contain null bytes.
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonDouble(System.Double)">
            <summary>
            Writes a BSON double to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonInt32(System.Int32)">
            <summary>
            Writes a 32-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonInt64(System.Int64)">
            <summary>
            Writes a 64-bit BSON integer to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the stream.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.ByteBufferStream.MongoDB#Bson#IO#IBsonStream#WriteBsonString(System.String,System.Text.UTF8Encoding)">
            <summary>
            Writes a BSON string to the stream.
            </summary>
            <param name="value">The value.</param>
            <param name="encoding">The encoding.</param>
            <exception cref="T:System.ArgumentException">
            UTF8 representation of a CString cannot contain null bytes.
            or
            UTF8 representation of a CString cannot contain null bytes.
            </exception>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.CanRead">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports reading.
            </summary>
            <returns>true if the stream supports reading; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.CanSeek">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports seeking.
            </summary>
            <returns>true if the stream supports seeking; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.CanTimeout">
            <summary>
            Gets a value that determines whether the current stream can time out.
            </summary>
            <returns>A value that determines whether the current stream can time out.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.CanWrite">
            <summary>
            When overridden in a derived class, gets a value indicating whether the current stream supports writing.
            </summary>
            <returns>true if the stream supports writing; otherwise, false.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.Length">
            <summary>
            When overridden in a derived class, gets the length in bytes of the stream.
            </summary>
            <returns>A long value representing the length of the stream in bytes.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.ByteBufferStream.Position">
            <summary>
            When overridden in a derived class, gets or sets the position within the current stream.
            </summary>
            <returns>The current position within the stream.</returns>
        </member>
        <member name="T:MongoDB.Bson.IO.ContextType">
            <summary>
            Used by BsonReaders and BsonWriters to represent the current context.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.ContextType.TopLevel">
            <summary>
            The top level of a BSON document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.ContextType.Document">
            <summary>
            A (possibly embedded) BSON document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.ContextType.Array">
            <summary>
            A BSON array.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.ContextType.JavaScriptWithScope">
            <summary>
            A JavaScriptWithScope BSON value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.ContextType.ScopeDocument">
            <summary>
            The scope document of a JavaScriptWithScope BSON value.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonBuffer">
            <summary>
            Represents a wrapper around a TextReader to provide some buffering functionality.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.JsonBuffer"/> class.
            </summary>
            <param name="json">The json.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.JsonBuffer"/> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.GetSnippet(System.Int32,System.Int32)">
            <summary>
            Gets a snippet of a maximum length from the buffer (usually to include in an error message).
            </summary>
            <param name="start">The start.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>The snippet.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.GetSubstring(System.Int32,System.Int32)">
            <summary>
            Gets a substring from the buffer.
            </summary>
            <param name="start">The start.</param>
            <param name="count">The count.</param>
            <returns>The substring.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.Read">
            <summary>
            Reads the next character from the text reader and advances the character position by one character.
            </summary>
            <returns>
            The next character from the text reader, or -1 if no more characters are available. The default implementation returns -1.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.ResetBuffer">
            <summary>
            Resets the buffer (clears everything up to the current position).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonBuffer.UnRead(System.Int32)">
            <summary>
            Unreads one character (moving the current Position back one position).
            </summary>
            <param name="c">The character.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonBuffer.Position">
            <summary>
            Gets or sets the current position.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonOutputMode">
            <summary>
            Represents the output mode of a JsonWriter.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonOutputMode.Strict">
            <summary>
            Output strict JSON.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonOutputMode.JavaScript">
            <summary>
            Use JavaScript data types for some values.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonOutputMode.TenGen">
            <summary>
            Use JavaScript and MongoDB data types for some values.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonOutputMode.Shell">
            <summary>
            Use a format that can be pasted in to the MongoDB shell.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonReader">
            <summary>
            Represents a BSON reader for a JSON string.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the JsonReader class.
            </summary>
            <param name="json">The JSON string.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.#ctor(System.String,MongoDB.Bson.IO.JsonReaderSettings)">
            <summary>
            Initializes a new instance of the JsonReader class.
            </summary>
            <param name="json">The JSON string.</param>
            <param name="settings">The reader settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.#ctor(System.IO.TextReader)">
            <summary>
            Initializes a new instance of the JsonReader class.
            </summary>
            <param name="textReader">The TextReader.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.#ctor(System.IO.TextReader,MongoDB.Bson.IO.JsonReaderSettings)">
            <summary>
            Initializes a new instance of the JsonReader class.
            </summary>
            <param name="textReader">The TextReader.</param>
            <param name="settings">The reader settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.Close">
            <summary>
            Closes the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.GetBookmark">
            <summary>
            Gets a bookmark to the reader's current position and state.
            </summary>
            <returns>A bookmark.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.IsAtEndOfFile">
            <summary>
            Determines whether this reader is at end of file.
            </summary>
            <returns>
            Whether this reader is at end of file.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadBinaryData">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadBoolean">
            <summary>
            Reads a BSON boolean from the reader.
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadBsonType">
            <summary>
            Reads a BsonType from the reader.
            </summary>
            <returns>A BsonType.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadBytes">
            <summary>
            Reads BSON binary data from the reader.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadDateTime">
            <summary>
            Reads a BSON DateTime from the reader.
            </summary>
            <returns>The number of milliseconds since the Unix epoch.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadDouble">
            <summary>
            Reads a BSON Double from the reader.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadEndArray">
            <summary>
            Reads the end of a BSON array from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadEndDocument">
            <summary>
            Reads the end of a BSON document from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadInt32">
            <summary>
            Reads a BSON Int32 from the reader.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadInt64">
            <summary>
            Reads a BSON Int64 from the reader.
            </summary>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadJavaScript">
            <summary>
            Reads a BSON JavaScript from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadJavaScriptWithScope">
            <summary>
            Reads a BSON JavaScript with scope from the reader (call ReadStartDocument next to read the scope).
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadMaxKey">
            <summary>
            Reads a BSON MaxKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadMinKey">
            <summary>
            Reads a BSON MinKey from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadName">
            <summary>
            Reads the name of an element from the reader.
            </summary>
            <returns>
            The name of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadNull">
            <summary>
            Reads a BSON null from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadObjectId">
            <summary>
            Reads a BSON ObjectId from the reader.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadRegularExpression">
            <summary>
            Reads a BSON regular expression from the reader.
            </summary>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadStartArray">
            <summary>
            Reads the start of a BSON array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadStartDocument">
            <summary>
            Reads the start of a BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadString">
            <summary>
            Reads a BSON string from the reader.
            </summary>
            <returns>A String.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadSymbol">
            <summary>
            Reads a BSON symbol from the reader.
            </summary>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadTimestamp">
            <summary>
            Reads a BSON timestamp from the reader.
            </summary>
            <returns>The combined timestamp/increment.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReadUndefined">
            <summary>
            Reads a BSON undefined from the reader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.ReturnToBookmark(MongoDB.Bson.IO.BsonReaderBookmark)">
            <summary>
            Returns the reader to previously bookmarked position and state.
            </summary>
            <param name="bookmark">The bookmark.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.SkipName">
            <summary>
            Skips the name (reader must be positioned on a name).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.SkipValue">
            <summary>
            Skips the value (reader must be positioned on a value).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReader.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the reader.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonReaderBookmark">
            <summary>
            Represents a bookmark that can be used to return a reader to the current position and state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReaderContext.Clone">
            <summary>
            Creates a clone of the context.
            </summary>
            <returns>A clone of the context.</returns>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonReaderSettings">
            <summary>
            Represents settings for a JsonReader.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReaderSettings.#ctor">
            <summary>
            Initializes a new instance of the JsonReaderSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReaderSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonReaderSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonReaderSettings.Defaults">
            <summary>
            Gets or sets the default settings for a JsonReader.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonScanner">
            <summary>
            A static class that represents a JSON scanner.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonScanner.GetNextToken(MongoDB.Bson.IO.JsonBuffer)">
            <summary>
            Gets the next JsonToken from a JsonBuffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <returns>The next token.</returns>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonTokenType">
            <summary>
            Represents a JSON token type.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Invalid">
            <summary>
            An invalid token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.BeginArray">
            <summary>
            A begin array token (a '[').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.BeginObject">
            <summary>
            A begin object token (a '{').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.EndArray">
            <summary>
            An end array token (a ']').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.LeftParen">
            <summary>
            A left parenthesis (a '(').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.RightParen">
            <summary>
            A right parenthesis (a ')').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.EndObject">
            <summary>
            An end object token (a '}').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Colon">
            <summary>
            A colon token (a ':').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Comma">
            <summary>
            A comma token (a ',').
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.DateTime">
            <summary>
            A DateTime token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Double">
            <summary>
            A Double token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Int32">
            <summary>
            An Int32 token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.Int64">
            <summary>
            And Int64 token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.ObjectId">
            <summary>
            An ObjectId token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.RegularExpression">
            <summary>
            A regular expression token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.String">
            <summary>
            A string token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.UnquotedString">
            <summary>
            An unquoted string token.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.IO.JsonTokenType.EndOfFile">
            <summary>
            An end of file token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonToken">
            <summary>
            Represents a JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonToken.#ctor(MongoDB.Bson.IO.JsonTokenType,System.String)">
            <summary>
            Initializes a new instance of the JsonToken class.
            </summary>
            <param name="type">The token type.</param>
            <param name="lexeme">The lexeme.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.Type">
            <summary>
            Gets the token type.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.Lexeme">
            <summary>
            Gets the lexeme.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.DateTimeValue">
            <summary>
            Gets the value of a DateTime token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.DoubleValue">
            <summary>
            Gets the value of a Double token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.Int32Value">
            <summary>
            Gets the value of an Int32 token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.Int64Value">
            <summary>
            Gets the value of an Int64 token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.ObjectIdValue">
            <summary>
            Gets the value of an ObjectId token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.RegularExpressionValue">
            <summary>
            Gets the value of a regular expression token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonToken.StringValue">
            <summary>
            Gets the value of a string token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.DateTimeJsonToken">
            <summary>
            Represents a DateTime JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.DateTimeJsonToken.#ctor(System.String,MongoDB.Bson.BsonDateTime)">
            <summary>
            Initializes a new instance of the DateTimeJsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The DateTime value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.DateTimeJsonToken.DateTimeValue">
            <summary>
            Gets the value of a DateTime token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.DoubleJsonToken">
            <summary>
            Represents a Double JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.DoubleJsonToken.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the DoubleJsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The Double value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.DoubleJsonToken.DoubleValue">
            <summary>
            Gets the value of a Double token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.Int32JsonToken">
            <summary>
            Represents an Int32 JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.Int32JsonToken.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the Int32JsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.Int32JsonToken.Int32Value">
            <summary>
            Gets the value of an Int32 token.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.Int32JsonToken.Int64Value">
            <summary>
            Gets the value of an Int32 token as an Int64.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.Int64JsonToken">
            <summary>
            Represents an Int64 JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.Int64JsonToken.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the Int64JsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.Int64JsonToken.Int64Value">
            <summary>
            Gets the value of an Int64 token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.ObjectIdJsonToken">
            <summary>
            Represents an ObjectId JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.ObjectIdJsonToken.#ctor(System.String,MongoDB.Bson.ObjectId)">
            <summary>
            Initializes a new instance of the ObjectIdJsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The ObjectId value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.ObjectIdJsonToken.ObjectIdValue">
            <summary>
            Gets the value of an ObjectId token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.RegularExpressionJsonToken">
            <summary>
            Represents a regular expression JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.RegularExpressionJsonToken.#ctor(System.String,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Initializes a new instance of the RegularExpressionJsonToken class.
            </summary>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The BsonRegularExpression value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.RegularExpressionJsonToken.RegularExpressionValue">
            <summary>
            Gets the value of a regular expression token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.StringJsonToken">
            <summary>
            Represents a String JSON token.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.StringJsonToken.#ctor(MongoDB.Bson.IO.JsonTokenType,System.String,System.String)">
            <summary>
            Initializes a new instance of the StringJsonToken class.
            </summary>
            <param name="type">The token type.</param>
            <param name="lexeme">The lexeme.</param>
            <param name="value">The String value.</param>
        </member>
        <member name="P:MongoDB.Bson.IO.StringJsonToken.StringValue">
            <summary>
            Gets the value of an String token.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonWriter">
            <summary>
            Represents a BSON writer to a TextWriter (in JSON format).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the JsonWriter class.
            </summary>
            <param name="writer">A TextWriter.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.#ctor(System.IO.TextWriter,MongoDB.Bson.IO.JsonWriterSettings)">
            <summary>
            Initializes a new instance of the JsonWriter class.
            </summary>
            <param name="writer">A TextWriter.</param>
            <param name="settings">Optional JsonWriter settings.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.Close">
            <summary>
            Closes the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.Flush">
            <summary>
            Flushes any pending data to the output destination.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteBinaryData(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="binaryData">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a BSON Boolean to the writer.
            </summary>
            <param name="value">The Boolean value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes BSON binary data to the writer.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteDateTime(System.Int64)">
            <summary>
            Writes a BSON DateTime to the writer.
            </summary>
            <param name="value">The number of milliseconds since the Unix epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteDouble(System.Double)">
            <summary>
            Writes a BSON Double to the writer.
            </summary>
            <param name="value">The Double value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteEndArray">
            <summary>
            Writes the end of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteEndDocument">
            <summary>
            Writes the end of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a BSON Int32 to the writer.
            </summary>
            <param name="value">The Int32 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a BSON Int64 to the writer.
            </summary>
            <param name="value">The Int64 value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteJavaScript(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer.
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteJavaScriptWithScope(System.String)">
            <summary>
            Writes a BSON JavaScript to the writer (call WriteStartDocument to start writing the scope).
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteMaxKey">
            <summary>
            Writes a BSON MaxKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteMinKey">
            <summary>
            Writes a BSON MinKey to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteNull">
            <summary>
            Writes a BSON null to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteObjectId(MongoDB.Bson.ObjectId)">
            <summary>
            Writes a BSON ObjectId to the writer.
            </summary>
            <param name="objectId">The ObjectId.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteRegularExpression(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Writes a BSON regular expression to the writer.
            </summary>
            <param name="regex">A BsonRegularExpression.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteStartArray">
            <summary>
            Writes the start of a BSON array to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteStartDocument">
            <summary>
            Writes the start of a BSON document to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteString(System.String)">
            <summary>
            Writes a BSON String to the writer.
            </summary>
            <param name="value">The String value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteSymbol(System.String)">
            <summary>
            Writes a BSON Symbol to the writer.
            </summary>
            <param name="value">The symbol.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteTimestamp(System.Int64)">
            <summary>
            Writes a BSON timestamp to the writer.
            </summary>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.WriteUndefined">
            <summary>
            Writes a BSON undefined to the writer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriter.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the writer.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.JsonWriterSettings">
            <summary>
            Represents settings for a JsonWriter.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriterSettings.#ctor">
            <summary>
            Initializes a new instance of the JsonWriterSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriterSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Bson.IO.JsonWriterSettings.CloneImplementation">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.Defaults">
            <summary>
            Gets or sets the default JsonWriterSettings.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.Encoding">
            <summary>
            Gets or sets the output Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.Indent">
            <summary>
            Gets or sets whether to indent the output.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.IndentChars">
            <summary>
            Gets or sets the indent characters.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.NewLineChars">
            <summary>
            Gets or sets the new line characters.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.OutputMode">
            <summary>
            Gets or sets the output mode.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.IO.JsonWriterSettings.ShellVersion">
            <summary>
            Gets or sets the shell version (used with OutputMode Shell).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IO.MultiChunkBuffer">
            <summary>
            An IBsonBuffer that has multiple chunks.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.#ctor(MongoDB.Bson.IO.BsonChunkPool)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.MultiChunkBuffer"/> class.
            </summary>
            <param name="chunkPool">The chunk pool.</param>
            <exception cref="T:System.ArgumentNullException">chunkPool</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.IO.BsonChunk},System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.MultiChunkBuffer"/> class.
            </summary>
            <param name="chunks">The chunks.</param>
            <param name="origin">The slice offset.</param>
            <param name="length">The length.</param>
            <param name="isReadOnly">Whether the buffer is read only.</param>
            <exception cref="T:System.ArgumentNullException">chunks</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.AccessBackingBytes(System.Int32)">
            <summary>
            Access the backing bytes directly. The returned ArraySegment will point to the desired position and contain
            as many bytes as possible up to the next chunk boundary (if any). If the returned ArraySegment does not
            contain enough bytes for your needs you will have to call ReadBytes instead.
            </summary>
            <param name="position">The position.</param>
            <returns>
            An ArraySegment pointing directly to the backing bytes for the position.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.Clear(System.Int32,System.Int32)">
            <summary>
            Clears the specified bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.EnsureCapacity(System.Int32)">
            <summary>
            Expands the buffer to at least the specified minimum length. Depending on the buffer's growth strategy
            it may choose to expand to a larger length.
            </summary>
            <param name="capacity">The minimum length.</param>
            <exception cref="T:System.InvalidOperationException">Capacity cannot be expanded because this buffer was created without specifying a chunk pool.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets a slice of this buffer.
            </summary>
            <param name="position">The position of the start of the slice.</param>
            <param name="length">The length of the slice.</param>
            <returns>
            A slice of this buffer.
            </returns>
            <exception cref="T:System.ObjectDisposedException">MultiChunkBuffer</exception>
            <exception cref="T:System.InvalidOperationException">GetSlice can only be called for read only buffers.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position
            or
            length
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.LoadFrom(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            Loads the buffer from a stream.
            </summary>
            <param name="stream">The stream.</param>
            <param name="position">The position.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentNullException">stream</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">count</exception>
            <exception cref="T:System.ArgumentException">
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            </exception>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
            <exception cref="T:System.ObjectDisposedException">MultiChunkBuffer</exception>
            <exception cref="T:System.InvalidOperationException">The MultiChunkBuffer is read only.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.MakeReadOnly">
            <summary>
            Makes this buffer read only.
            </summary>
            <exception cref="T:System.ObjectDisposedException">ByteArrayBuffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.ReadByte(System.Int32)">
            <summary>
            Reads a byte.
            </summary>
            <param name="position">The position.</param>
            <returns>
            A byte.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.ReadBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="destination">The destination.</param>
            <param name="offset">The destination offset.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
            <exception cref="T:System.ArgumentNullException">destination</exception>
            <exception cref="T:System.ArgumentException">
            Offset is negative.;offset
            or
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            or
            Count extends past the end of the destination.;count
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.WriteByte(System.Int32,System.Byte)">
            <summary>
            Writes a byte.
            </summary>
            <param name="position">The position.</param>
            <param name="value">The value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">position;Position is outside of the buffer.</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.WriteBytes(System.Int32,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes.
            </summary>
            <param name="position">The position.</param>
            <param name="source">The bytes (in the form of a byte array).</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position;Position is outside of the buffer.
            or
            offset;Offset is outside of the source.
            </exception>
            <exception cref="T:System.ArgumentNullException">source</exception>
            <exception cref="T:System.ArgumentException">
            Count is negative.;count
            or
            Count extends past the end of the buffer.;count
            or
            Count extends past the end of the source.;count
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.WriteTo(System.IO.Stream)">
            <summary>
            Writes Length bytes from this buffer starting at Position 0 to a stream.
            </summary>
            <param name="stream">The stream.</param>
            <exception cref="T:System.ObjectDisposedException">MultiChunkBuffer</exception>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.MultiChunkBuffer.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.IO.MultiChunkBuffer.Capacity">
            <summary>
            Gets the capacity.
            </summary>
            <value>
            The capacity.
            </value>
        </member>
        <member name="P:MongoDB.Bson.IO.MultiChunkBuffer.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            <c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.ObjectDisposedException">MultiChunkBuffer</exception>
        </member>
        <member name="P:MongoDB.Bson.IO.MultiChunkBuffer.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>
            The length.
            </value>
            <exception cref="T:System.ObjectDisposedException">MultiChunkBuffer</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Length</exception>
            <exception cref="T:System.InvalidOperationException">The length of a read only buffer cannot be changed.</exception>
        </member>
        <member name="T:MongoDB.Bson.IO.SingleChunkBuffer">
            <summary>
            An IBsonBuffer that only has a single chunk.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.SingleChunkBuffer.#ctor(MongoDB.Bson.IO.BsonChunk,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.IO.SingleChunkBuffer"/> class.
            </summary>
            <param name="chunk">The chunk.</param>
            <param name="sliceOffset">The slice offset.</param>
            <param name="length">The length.</param>
            <param name="isReadOnly">Whether the buffer is read only.</param>
        </member>
        <member name="M:MongoDB.Bson.IO.SingleChunkBuffer.GetSlice(System.Int32,System.Int32)">
            <summary>
            Gets a slice of this buffer.
            </summary>
            <param name="position">The position of the start of the slice.</param>
            <param name="length">The length of the slice.</param>
            <returns>
            A slice of this buffer.
            </returns>
            <exception cref="T:System.ObjectDisposedException">SingleChunkBuffer</exception>
            <exception cref="T:System.InvalidOperationException">GetSlice can only be called for read only buffers.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            position
            or
            length
            </exception>
        </member>
        <member name="M:MongoDB.Bson.IO.SingleChunkBuffer.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:MongoDB.Bson.IO.Utf8Helper">
            <summary>
            Represents a class that has some helper methods for decoding UTF8 strings.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IO.Utf8Helper.DecodeUtf8String(System.Byte[],System.Int32,System.Int32,System.Text.UTF8Encoding)">
            <summary>
            Decodes a UTF8 string.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <param name="encoding">The encoding.</param>
            <returns>The decoded string.</returns>
        </member>
        <member name="P:MongoDB.Bson.IO.Utf8Helper.StrictUtf8Encoding">
            <summary>
            Gets a strict UTF8 encoding.
            </summary>
            <value>
            A strict UTF8 encoding.
            </value>
        </member>
        <member name="T:MongoDB.Bson.BsonArray">
            <summary>
            Represents a BSON array.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonValue">
            <summary>
            Represents a BSON value (this is an abstract class, see the various subclasses).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the BsonValue class.
            </summary>
            <param name="bsonType">The BsonType of this BsonValue.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Boolean">
            <summary>
            Casts a BsonValue to a bool.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A bool.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.Boolean}">
            <summary>
            Casts a BsonValue to a bool?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A bool?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Boolean)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a bool to a BsonValue.
            </summary>
            <param name="value">A bool.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.Boolean})~MongoDB.Bson.BsonValue">
            <summary>
            Converts a bool? to a BsonValue.
            </summary>
            <param name="value">A bool?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Byte[])~MongoDB.Bson.BsonValue">
            <summary>
            Converts a byte[] to a BsonValue.
            </summary>
            <param name="value">A byte[].</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.DateTime)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a DateTime to a BsonValue.
            </summary>
            <param name="value">A DateTime.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.DateTime})~MongoDB.Bson.BsonValue">
            <summary>
            Converts a DateTime? to a BsonValue.
            </summary>
            <param name="value">A DateTime?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Double)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a double to a BsonValue.
            </summary>
            <param name="value">A double.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.Double})~MongoDB.Bson.BsonValue">
            <summary>
            Converts a double? to a BsonValue.
            </summary>
            <param name="value">A double?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Enum)~MongoDB.Bson.BsonValue">
            <summary>
            Converts an Enum to a BsonValue.
            </summary>
            <param name="value">An Enum.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Guid)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a Guid to a BsonValue.
            </summary>
            <param name="value">A Guid.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.Guid})~MongoDB.Bson.BsonValue">
            <summary>
            Converts a Guid? to a BsonValue.
            </summary>
            <param name="value">A Guid?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Int32)~MongoDB.Bson.BsonValue">
            <summary>
            Converts an int to a BsonValue.
            </summary>
            <param name="value">An int.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.Int32})~MongoDB.Bson.BsonValue">
            <summary>
            Converts an int? to a BsonValue.
            </summary>
            <param name="value">An int?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Int64)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a long to a BsonValue.
            </summary>
            <param name="value">A long.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{System.Int64})~MongoDB.Bson.BsonValue">
            <summary>
            Converts a long? to a BsonValue.
            </summary>
            <param name="value">A long?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(MongoDB.Bson.ObjectId)~MongoDB.Bson.BsonValue">
            <summary>
            Converts an ObjectId to a BsonValue.
            </summary>
            <param name="value">An ObjectId.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Nullable{MongoDB.Bson.ObjectId})~MongoDB.Bson.BsonValue">
            <summary>
            Converts an ObjectId? to a BsonValue.
            </summary>
            <param name="value">An ObjectId?.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.Text.RegularExpressions.Regex)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a Regex to a BsonValue.
            </summary>
            <param name="value">A Regex.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Implicit(System.String)~MongoDB.Bson.BsonValue">
            <summary>
            Converts a string to a BsonValue.
            </summary>
            <param name="value">A string.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Byte[]">
            <summary>
            Casts a BsonValue to a byte[].
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A byte[].</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.DateTime">
            <summary>
            Casts a BsonValue to a DateTime.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.DateTime}">
            <summary>
            Casts a BsonValue to a DateTime?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Double">
            <summary>
            Casts a BsonValue to a double.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.Double}">
            <summary>
            Casts a BsonValue to a double?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A double?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Guid">
            <summary>
            Casts a BsonValue to a Guid.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.Guid}">
            <summary>
            Casts a BsonValue to a Guid?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A Guid?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Int32">
            <summary>
            Casts a BsonValue to an int.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>An int.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.Int32}">
            <summary>
            Casts a BsonValue to an int?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>An int?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Int64">
            <summary>
            Casts a BsonValue to a long.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A long.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{System.Int64}">
            <summary>
            Casts a BsonValue to a long?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A long?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~MongoDB.Bson.ObjectId">
            <summary>
            Casts a BsonValue to an ObjectId.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Nullable{MongoDB.Bson.ObjectId}">
            <summary>
            Casts a BsonValue to an ObjectId?.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>An ObjectId?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.Text.RegularExpressions.Regex">
            <summary>
            Casts a BsonValue to a Regex.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A Regex.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Explicit(MongoDB.Bson.BsonValue)~System.String">
            <summary>
            Casts a BsonValue to a string.
            </summary>
            <param name="value">The BsonValue.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_LessThan(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the first BsonValue is less than the other one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_LessThanOrEqual(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the first BsonValue is less than or equal to the other one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Inequality(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the two BsonValues are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_Equality(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the two BsonValues are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_GreaterThan(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the first BsonValue is greater than the other one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.op_GreaterThanOrEqual(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonValue)">
            <summary>
            Compares two BsonValues.
            </summary>
            <param name="lhs">The first BsonValue.</param>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the first BsonValue is greater than or equal to the other one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.Create(System.Object)">
            <summary>
            Creates a new instance of the BsonValue class.
            </summary>
            <param name="value">A value to be mapped to a BsonValue.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ReadFrom(MongoDB.Bson.IO.BsonReader)">
            <summary>
            Reads one BsonValue from a BsonReader.
            </summary>
            <param name="bsonReader">The reader.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.Clone">
            <summary>
            Creates a shallow clone of the BsonValue (see also DeepClone).
            </summary>
            <returns>A shallow clone of the BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares this BsonValue to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonValue is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.CompareTypeTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the type of this BsonValue to the type of another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether the type of this BsonValue is less than, equal to, or greather than the type of the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.DeepClone">
            <summary>
            Creates a deep clone of the BsonValue (see also Clone).
            </summary>
            <returns>A deep clone of the BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.Equals(MongoDB.Bson.BsonValue)">
            <summary>
            Compares this BsonValue to another BsonValue.
            </summary>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the two BsonValue values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.Equals(System.Object)">
            <summary>
            Compares this BsonValue to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonValue and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToDouble">
            <summary>
            Converts this BsonValue to a Double.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToInt32">
            <summary>
            Converts this BsonValue to an Int32.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToInt64">
            <summary>
            Converts this BsonValue to an Int64.
            </summary>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToLocalTime">
            <summary>
            Converts this BsonValue to a DateTime in local time.
            </summary>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToNullableLocalTime">
            <summary>
            Converts this BsonValue to a DateTime? in local time.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToNullableUniversalTime">
            <summary>
            Converts this BsonValue to a DateTime? in UTC.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.ToUniversalTime">
            <summary>
            Converts this BsonValue to a DateTime in UTC.
            </summary>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.WriteTo(MongoDB.Bson.IO.BsonWriter)">
            <summary>
            Writes the BsonValue to a BsonWriter.
            </summary>
            <param name="bsonWriter">The writer.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonValue.OperatorEqualsImplementation(MongoDB.Bson.BsonValue)">
            <summary>
            Implementation of operator ==.
            </summary>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if the two BsonValues are equal according to ==.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBoolean">
            <summary>
            Casts the BsonValue to a Boolean (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonArray">
            <summary>
            Casts the BsonValue to a BsonArray (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonBinaryData">
            <summary>
            Casts the BsonValue to a BsonBinaryData (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonDateTime">
            <summary>
            Casts the BsonValue to a BsonDateTime (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonDocument">
            <summary>
            Casts the BsonValue to a BsonDocument (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonJavaScript">
            <summary>
            Casts the BsonValue to a BsonJavaScript (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonJavaScriptWithScope">
            <summary>
            Casts the BsonValue to a BsonJavaScriptWithScope (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonMaxKey">
            <summary>
            Casts the BsonValue to a BsonMaxKey (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonMinKey">
            <summary>
            Casts the BsonValue to a BsonMinKey (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonNull">
            <summary>
            Casts the BsonValue to a BsonNull (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonRegularExpression">
            <summary>
            Casts the BsonValue to a BsonRegularExpression (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonSymbol">
            <summary>
            Casts the BsonValue to a BsonSymbol (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonTimestamp">
            <summary>
            Casts the BsonValue to a BsonTimestamp (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonUndefined">
            <summary>
            Casts the BsonValue to a BsonUndefined (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsBsonValue">
            <summary>
            Casts the BsonValue to a BsonValue (a way of upcasting subclasses of BsonValue to BsonValue at compile time).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsByteArray">
            <summary>
            Casts the BsonValue to a Byte[] (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsDateTime">
            <summary>
            Casts the BsonValue to a DateTime in UTC (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsDouble">
            <summary>
            Casts the BsonValue to a Double (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsGuid">
            <summary>
            Casts the BsonValue to a Guid (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsInt32">
            <summary>
            Casts the BsonValue to an Int32 (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsLocalTime">
            <summary>
            Casts the BsonValue to a DateTime in the local timezone (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsInt64">
            <summary>
            Casts the BsonValue to a Int64 (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableBoolean">
            <summary>
            Casts the BsonValue to a Nullable{Boolean} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableDateTime">
            <summary>
            Casts the BsonValue to a Nullable{DateTime} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableDouble">
            <summary>
            Casts the BsonValue to a Nullable{Double} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableGuid">
            <summary>
            Casts the BsonValue to a Nullable{Guid} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableInt32">
            <summary>
            Casts the BsonValue to a Nullable{Int32} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableInt64">
            <summary>
            Casts the BsonValue to a Nullable{Int64} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsNullableObjectId">
            <summary>
            Casts the BsonValue to a Nullable{ObjectId} (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsObjectId">
            <summary>
            Casts the BsonValue to an ObjectId (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsRegex">
            <summary>
            Casts the BsonValue to a Regex (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsString">
            <summary>
            Casts the BsonValue to a String (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.AsUniversalTime">
            <summary>
            Casts the BsonValue to a DateTime in UTC (throws an InvalidCastException if the cast is not valid).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.BsonType">
            <summary>
            Gets the BsonType of this BsonValue.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBoolean">
            <summary>
            Tests whether this BsonValue is a Boolean.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonArray">
            <summary>
            Tests whether this BsonValue is a BsonArray.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonBinaryData">
            <summary>
            Tests whether this BsonValue is a BsonBinaryData.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonDateTime">
            <summary>
            Tests whether this BsonValue is a BsonDateTime.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonDocument">
            <summary>
            Tests whether this BsonValue is a BsonDocument.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonJavaScript">
            <summary>
            Tests whether this BsonValue is a BsonJavaScript.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonJavaScriptWithScope">
            <summary>
            Tests whether this BsonValue is a BsonJavaScriptWithScope.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonMaxKey">
            <summary>
            Tests whether this BsonValue is a BsonMaxKey.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonMinKey">
            <summary>
            Tests whether this BsonValue is a BsonMinKey.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonNull">
            <summary>
            Tests whether this BsonValue is a BsonNull.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonRegularExpression">
            <summary>
            Tests whether this BsonValue is a BsonRegularExpression.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonSymbol">
            <summary>
            Tests whether this BsonValue is a BsonSymbol .
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonTimestamp">
            <summary>
            Tests whether this BsonValue is a BsonTimestamp.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsBsonUndefined">
            <summary>
            Tests whether this BsonValue is a BsonUndefined.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsDateTime">
            <summary>
            Tests whether this BsonValue is a DateTime.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsDouble">
            <summary>
            Tests whether this BsonValue is a Double.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsGuid">
            <summary>
            Tests whether this BsonValue is a Guid.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsInt32">
            <summary>
            Tests whether this BsonValue is an Int32.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsInt64">
            <summary>
            Tests whether this BsonValue is an Int64.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsNumeric">
            <summary>
            Tests whether this BsonValue is a numeric value.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsObjectId">
            <summary>
            Tests whether this BsonValue is an ObjectId .
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsString">
            <summary>
            Tests whether this BsonValue is a String.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.IsValidDateTime">
            <summary>
            Tests whether this BsonValue is a valid DateTime.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.RawValue">
            <summary>
            Gets the raw value of this BsonValue (or null if this BsonValue doesn't have a single scalar value).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.Item(System.Int32)">
            <summary>
            Gets or sets a value by position (only applies to BsonDocument and BsonArray).
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonValue.Item(System.String)">
            <summary>
            Gets or sets a value by name (only applies to BsonDocument).
            </summary>
            <param name="name">The name.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.ObjectId})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="values">A list of values to add to the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the BsonArray class.
            </summary>
            <param name="capacity">The initial capacity of the array.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.op_Inequality(MongoDB.Bson.BsonArray,MongoDB.Bson.BsonArray)">
            <summary>
            Compares two BsonArray values.
            </summary>
            <param name="lhs">The first BsonArray.</param>
            <param name="rhs">The other BsonArray.</param>
            <returns>True if the two BsonArray values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.op_Equality(MongoDB.Bson.BsonArray,MongoDB.Bson.BsonArray)">
            <summary>
            Compares two BsonArray values.
            </summary>
            <param name="lhs">The first BsonArray.</param>
            <param name="rhs">The other BsonArray.</param>
            <returns>True if the two BsonArray values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Create(System.Object)">
            <summary>
            Creates a new BsonArray.
            </summary>
            <param name="value">A value to be mapped to a BsonArray.</param>
            <returns>A BsonArray or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.ReadFrom(MongoDB.Bson.IO.BsonReader)">
            <summary>
            Reads a BsonArray from a BsonReader.
            </summary>
            <param name="bsonReader">The reader.</param>
            <returns>A BsonArray.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Add(MongoDB.Bson.BsonValue)">
            <summary>
            Adds an element to the array.
            </summary>
            <param name="value">The value to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.ObjectId})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Clone">
            <summary>
            Creates a shallow clone of the array (see also DeepClone).
            </summary>
            <returns>A shallow clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Clear">
            <summary>
            Clears the array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.CompareTo(MongoDB.Bson.BsonArray)">
            <summary>
            Compares the array to another array.
            </summary>
            <param name="rhs">The other array.</param>
            <returns>A 32-bit signed integer that indicates whether this array is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the array to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this array is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Contains(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the array contains a value.
            </summary>
            <param name="value">The value to test for.</param>
            <returns>True if the array contains the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.CopyTo(MongoDB.Bson.BsonValue[],System.Int32)">
            <summary>
            Copies elements from this array to another array.
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies elements from this array to another array as raw values (see BsonValue.RawValue).
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.DeepClone">
            <summary>
            Creates a deep clone of the array (see also Clone).
            </summary>
            <returns>A deep clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Equals(MongoDB.Bson.BsonArray)">
            <summary>
            Compares this array to another array.
            </summary>
            <param name="obj">The other array.</param>
            <returns>True if the two arrays are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Equals(System.Object)">
            <summary>
            Compares this BsonArray to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonArray and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.GetEnumerator">
            <summary>
            Gets an enumerator that can enumerate the elements of the array.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.IndexOf(MongoDB.Bson.BsonValue)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <param name="count">The number of elements to search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Insert(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Inserts a new value into the array.
            </summary>
            <param name="index">The zero based index at which to insert the new value.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.Remove(MongoDB.Bson.BsonValue)">
            <summary>
            Removes the first occurrence of a value from the array.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>True if the value was removed.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.RemoveAt(System.Int32)">
            <summary>
            Removes an element from the array.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.ToArray">
            <summary>
            Converts the BsonArray to an array of BsonValues.
            </summary>
            <returns>An array of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.ToList">
            <summary>
            Converts the BsonArray to a list of BsonValues.
            </summary>
            <returns>A list of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.ToString">
            <summary>
            Returns a string representation of the array.
            </summary>
            <returns>A string representation of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonArray.WriteTo(MongoDB.Bson.IO.BsonWriter)">
            <summary>
            Writes the array to a BsonWriter.
            </summary>
            <param name="bsonWriter">The writer.</param>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.Count">
            <summary>
            Gets the count of array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.IsReadOnly">
            <summary>
            Gets whether the array is read-only.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.RawValues">
            <summary>
            Gets the array elements as raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.Values">
            <summary>
            Gets the array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonArray.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Bson.BsonBinaryData">
            <summary>
            Represents BSON binary data.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BsonBinaryData class.
            </summary>
            <param name="bytes">The binary data.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.#ctor(System.Byte[],MongoDB.Bson.BsonBinarySubType)">
            <summary>
            Initializes a new instance of the BsonBinaryData class.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.#ctor(System.Byte[],MongoDB.Bson.BsonBinarySubType,MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonBinaryData class.
            </summary>
            <param name="bytes">The binary data.</param>
            <param name="subType">The binary data subtype.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the BsonBinaryData class.
            </summary>
            <param name="guid">A Guid.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.#ctor(System.Guid,MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonBinaryData class.
            </summary>
            <param name="guid">A Guid.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.op_Implicit(System.Byte[])~MongoDB.Bson.BsonBinaryData">
            <summary>
            Converts a byte array to a BsonBinaryData.
            </summary>
            <param name="bytes">A byte array.</param>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.op_Implicit(System.Guid)~MongoDB.Bson.BsonBinaryData">
            <summary>
            Converts a Guid to a BsonBinaryData.
            </summary>
            <param name="value">A Guid.</param>
            <returns>A BsonBinaryData.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.op_Inequality(MongoDB.Bson.BsonBinaryData,MongoDB.Bson.BsonBinaryData)">
            <summary>
            Compares two BsonBinaryData values.
            </summary>
            <param name="lhs">The first BsonBinaryData.</param>
            <param name="rhs">The other BsonBinaryData.</param>
            <returns>True if the two BsonBinaryData values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.op_Equality(MongoDB.Bson.BsonBinaryData,MongoDB.Bson.BsonBinaryData)">
            <summary>
            Compares two BsonBinaryData values.
            </summary>
            <param name="lhs">The first BsonBinaryData.</param>
            <param name="rhs">The other BsonBinaryData.</param>
            <returns>True if the two BsonBinaryData values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.Create(System.Object)">
            <summary>
            Creates a new BsonBinaryData.
            </summary>
            <param name="value">An object to be mapped to a BsonBinaryData.</param>
            <returns>A BsonBinaryData or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.CompareTo(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Compares this BsonBinaryData to another BsonBinaryData.
            </summary>
            <param name="other">The other BsonBinaryData.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonBinaryData is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonBinaryData to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonBinaryData is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.Equals(MongoDB.Bson.BsonBinaryData)">
            <summary>
            Compares this BsonBinaryData to another BsonBinaryData.
            </summary>
            <param name="rhs">The other BsonBinaryData.</param>
            <returns>True if the two BsonBinaryData values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.Equals(System.Object)">
            <summary>
            Compares this BsonBinaryData to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonBinaryData and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.ToGuid">
            <summary>
            Converts this BsonBinaryData to a Guid.
            </summary>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.ToGuid(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Converts this BsonBinaryData to a Guid.
            </summary>
            <param name="guidRepresentation">The representation for Guids.</param>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBinaryData.ToString">
            <summary>
            Returns a string representation of the binary data.
            </summary>
            <returns>A string representation of the binary data.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonBinaryData.Bytes">
            <summary>
            Gets the binary data.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBinaryData.GuidRepresentation">
            <summary>
            Gets the representation to use when representing the Guid as BSON binary data.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBinaryData.RawValue">
            <summary>
            Gets the BsonBinaryData as a Guid if the subtype is UuidStandard or UuidLegacy, otherwise null.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBinaryData.SubType">
            <summary>
            Gets the binary data subtype.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonBinarySubType">
            <summary>
            Represents the binary data subtype of a BsonBinaryData.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.Binary">
            <summary>
            Binary data.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.Function">
            <summary>
            A function.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.OldBinary">
            <summary>
            Obsolete binary data subtype (use Binary instead).
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.UuidLegacy">
            <summary>
            A UUID in a driver dependent legacy byte order.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.UuidStandard">
            <summary>
            A UUID in standard network byte order.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.MD5">
            <summary>
            An MD5 hash.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonBinarySubType.UserDefined">
            <summary>
            User defined binary data.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonBoolean">
            <summary>
            Represents a BSON boolean value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BsonBoolean class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.op_Implicit(System.Boolean)~MongoDB.Bson.BsonBoolean">
            <summary>
            Converts a bool to a BsonBoolean.
            </summary>
            <param name="value">A bool.</param>
            <returns>A BsonBoolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.op_Inequality(MongoDB.Bson.BsonBoolean,MongoDB.Bson.BsonBoolean)">
            <summary>
            Compares two BsonBoolean values.
            </summary>
            <param name="lhs">The first BsonBoolean.</param>
            <param name="rhs">The other BsonBoolean.</param>
            <returns>True if the two BsonBoolean values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.op_Equality(MongoDB.Bson.BsonBoolean,MongoDB.Bson.BsonBoolean)">
            <summary>
            Compares two BsonBoolean values.
            </summary>
            <param name="lhs">The first BsonBoolean.</param>
            <param name="rhs">The other BsonBoolean.</param>
            <returns>True if the two BsonBoolean values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.Create(System.Object)">
            <summary>
            Returns one of the two possible BsonBoolean values.
            </summary>
            <param name="value">An object to be mapped to a BsonBoolean.</param>
            <returns>A BsonBoolean or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.CompareTo(MongoDB.Bson.BsonBoolean)">
            <summary>
            Compares this BsonBoolean to another BsonBoolean.
            </summary>
            <param name="other">The other BsonBoolean.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonBoolean is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonBoolean to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonBoolean is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.Equals(MongoDB.Bson.BsonBoolean)">
            <summary>
            Compares this BsonBoolean to another BsonBoolean.
            </summary>
            <param name="rhs">The other BsonBoolean.</param>
            <returns>True if the two BsonBoolean values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.Equals(System.Object)">
            <summary>
            Compares this BsonBoolean to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonBoolean and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonBoolean.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonBoolean.False">
            <summary>
            Gets the instance of BsonBoolean that represents false.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBoolean.True">
            <summary>
            Gets the instance of BsonBoolean that represents true.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBoolean.RawValue">
            <summary>
            Gets the BsonBoolean as a bool.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonBoolean.Value">
            <summary>
            Gets the value of this BsonBoolean.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonDateTime">
            <summary>
            Represents a BSON DateTime value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the BsonDateTime class.
            </summary>
            <param name="value">A DateTime.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the BsonDateTime class.
            </summary>
            <param name="millisecondsSinceEpoch">Milliseconds since Unix Epoch.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.op_Implicit(System.DateTime)~MongoDB.Bson.BsonDateTime">
            <summary>
            Converts a DateTime to a BsonDateTime.
            </summary>
            <param name="value">A DateTime.</param>
            <returns>A BsonDateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.op_Inequality(MongoDB.Bson.BsonDateTime,MongoDB.Bson.BsonDateTime)">
            <summary>
            Compares two BsonDateTime values.
            </summary>
            <param name="lhs">The first BsonDateTime.</param>
            <param name="rhs">The other BsonDateTime.</param>
            <returns>True if the two BsonDateTime values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.op_Equality(MongoDB.Bson.BsonDateTime,MongoDB.Bson.BsonDateTime)">
            <summary>
            Compares two BsonDateTime values.
            </summary>
            <param name="lhs">The first BsonDateTime.</param>
            <param name="rhs">The other BsonDateTime.</param>
            <returns>True if the two BsonDateTime values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.Create(System.Object)">
            <summary>
            Creates a new BsonDateTime.
            </summary>
            <param name="value">An object to be mapped to a BsonDateTime.</param>
            <returns>A BsonDateTime or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.CompareTo(MongoDB.Bson.BsonDateTime)">
            <summary>
            Compares this BsonDateTime to another BsonDateTime.
            </summary>
            <param name="other">The other BsonDateTime.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDateTime is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonDateTime to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDateTime is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.Equals(MongoDB.Bson.BsonDateTime)">
            <summary>
            Compares this BsonDateTime to another BsonDateTime.
            </summary>
            <param name="rhs">The other BsonDateTime.</param>
            <returns>True if the two BsonDateTime values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.Equals(System.Object)">
            <summary>
            Compares this BsonDateTime to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonDateTime and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.ToLocalTime">
            <summary>
            Converts this BsonValue to a DateTime in local time.
            </summary>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.ToNullableLocalTime">
            <summary>
            Converts this BsonValue to a DateTime? in local time.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.ToNullableUniversalTime">
            <summary>
            Converts this BsonValue to a DateTime? in UTC.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.ToUniversalTime">
            <summary>
            Converts this BsonValue to a DateTime in UTC.
            </summary>
            <returns>A DateTime.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDateTime.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonDateTime.IsValidDateTime">
            <summary>
            Gets whether this BsonDateTime is a valid .NET DateTime.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDateTime.MillisecondsSinceEpoch">
            <summary>
            Gets the number of milliseconds since the Unix Epoch.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDateTime.RawValue">
            <summary>
            Gets the number of milliseconds since the Unix Epoch.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDateTime.Value">
            <summary>
            Gets the DateTime value.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonDocument">
            <summary>
            Represents a BSON document.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.IConvertibleToBsonDocument">
            <summary>
            An interface implemented by objects that convert themselves to a BsonDocument.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.IConvertibleToBsonDocument.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor">
            <summary>
            Initializes a new instance of the BsonDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BsonDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the BsonDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the BsonDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the BsonDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the BsonDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.op_Inequality(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Compares two BsonDocument values.
            </summary>
            <param name="lhs">The first BsonDocument.</param>
            <param name="rhs">The other BsonDocument.</param>
            <returns>True if the two BsonDocument values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.op_Equality(MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonDocument)">
            <summary>
            Compares two BsonDocument values.
            </summary>
            <param name="lhs">The first BsonDocument.</param>
            <param name="rhs">The other BsonDocument.</param>
            <returns>True if the two BsonDocument values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Create(System.Object)">
            <summary>
            Creates a new BsonDocument by mapping an object to a BsonDocument.
            </summary>
            <param name="value">The object to be mapped to a BsonDocument.</param>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Parse(System.String)">
            <summary>
            Parses a JSON string and returns a BsonDocument.
            </summary>
            <param name="json">The JSON string.</param>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(MongoDB.Bson.BsonElement)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="element">The element to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(MongoDB.Bson.BsonElement[])">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates and adds an element to the document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.String,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Creates and adds an element to the document, but only if the condition is true.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <param name="condition">Whether to add the element to the document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Add(System.String,System.Func{MongoDB.Bson.BsonValue},System.Boolean)">
            <summary>
            Creates and adds an element to the document, but only if the condition is true.
            If the condition is false the value factory is not called at all.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="valueFactory">A delegate called to compute the value of the element if condition is true.</param>
            <param name="condition">Whether to add the element to the document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.AddRange(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.AddRange(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Clear">
            <summary>
            Clears the document (removes all elements).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Clone">
            <summary>
            Creates a shallow clone of the document (see also DeepClone).
            </summary>
            <returns>A shallow clone of the document.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.CompareTo(MongoDB.Bson.BsonDocument)">
            <summary>
            Compares this document to another document.
            </summary>
            <param name="rhs">The other document.</param>
            <returns>A 32-bit signed integer that indicates whether this document is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonDocument to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDocument is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Contains(System.String)">
            <summary>
            Tests whether the document contains an element with the specified name.
            </summary>
            <param name="name">The name of the element to look for.</param>
            <returns>True if the document contains an element with the specified name.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.ContainsValue(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the document contains an element with the specified value.
            </summary>
            <param name="value">The value of the element to look for.</param>
            <returns>True if the document contains an element with the specified value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.DeepClone">
            <summary>
            Creates a deep clone of the document (see also Clone).
            </summary>
            <returns>A deep clone of the document.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Equals(MongoDB.Bson.BsonDocument)">
            <summary>
            Compares this document to another document.
            </summary>
            <param name="obj">The other document.</param>
            <returns>True if the two documents are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Equals(System.Object)">
            <summary>
            Compares this BsonDocument to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonDocument and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetElement(System.Int32)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>The element.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetElement(System.String)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>A BsonElement.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetEnumerator">
            <summary>
            Gets an enumerator that can be used to enumerate the elements of this document.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetValue(System.Int32)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>The value of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetValue(System.String)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The value of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.GetValue(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value returned if the element is not found.</param>
            <returns>The value of the element or the default value if the element is not found.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.InsertAt(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Inserts a new element at a specified position.
            </summary>
            <param name="index">The position of the new element.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Merge(MongoDB.Bson.BsonDocument)">
            <summary>
            Merges another document into this one. Existing elements are not overwritten.
            </summary>
            <param name="document">The other document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Merge(MongoDB.Bson.BsonDocument,System.Boolean)">
            <summary>
            Merges another document into this one, specifying whether existing elements are overwritten.
            </summary>
            <param name="document">The other document.</param>
            <param name="overwriteExistingElements">Whether to overwrite existing elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Remove(System.String)">
            <summary>
            Removes an element from this document (if duplicate element names are allowed
            then all elements with this name will be removed).
            </summary>
            <param name="name">The name of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.RemoveAt(System.Int32)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.RemoveElement(MongoDB.Bson.BsonElement)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Set(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element.
            </summary>
            <param name="index">The zero based index of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.Set(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element (an element will be added if no element with this name is found).
            </summary>
            <param name="name">The name of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.SetElement(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replacing the existing element at that position).
            </summary>
            <param name="index">The zero based index of the element to replace.</param>
            <param name="element">The new element.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.SetElement(MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replaces any existing element with the same name or adds a new element if an element with the same name is not found).
            </summary>
            <param name="element">The new element.</param>
            <returns>The document.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.ToDictionary">
            <summary>
            Converts the BsonDocument to a Dictionary&lt;string, object&gt;.
            </summary>
            <returns>A dictionary.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.ToHashtable">
            <summary>
            Converts the BsonDocument to a Hashtable.
            </summary>
            <returns>A hashtable.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.ToString">
            <summary>
            Returns a string representation of the document.
            </summary>
            <returns>A string representation of the document.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.TryGetElement(System.String,MongoDB.Bson.BsonElement@)">
            <summary>
            Tries to get an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The element.</param>
            <returns>True if an element with that name was found.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocument.TryGetValue(System.String,MongoDB.Bson.BsonValue@)">
            <summary>
            Tries to get the value of an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>True if an element with that name was found.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.AllowDuplicateNames">
            <summary>
            Gets or sets whether to allow duplicate names (allowing duplicate names is not recommended).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.ElementCount">
            <summary>
            Gets the number of elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Elements">
            <summary>
            Gets the elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Names">
            <summary>
            Gets the element names.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.RawValues">
            <summary>
            Gets the raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Values">
            <summary>
            Gets the values.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Item(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value to return if the element is not found.</param>
            <returns>Teh value of the element or a default value if the element is not found.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonDocument.Item(System.String)">
            <summary>
            Gets or sets a value by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Bson.BsonDocumentWrapper">
            <summary>
            Represents a BsonDocument wrapper.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.MaterializedOnDemandBsonDocument">
            <summary>
            Represents a BSON document that is not materialized until you start using it.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.MaterializedOnDemandBsonDocument"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(MongoDB.Bson.BsonElement)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="element">The element to add.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(MongoDB.Bson.BsonElement[])">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates and adds an element to the document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.String,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Creates and adds an element to the document, but only if the condition is true.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <param name="condition">Whether to add the element to the document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Add(System.String,System.Func{MongoDB.Bson.BsonValue},System.Boolean)">
            <summary>
            Creates and adds an element to the document, but only if the condition is true.
            If the condition is false the value factory is not called at all.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="valueFactory">A delegate called to compute the value of the element if condition is true.</param>
            <param name="condition">Whether to add the element to the document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.AddRange(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.AddRange(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Clear">
            <summary>
            Clears the document (removes all elements).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Clone">
            <summary>
            Creates a shallow clone of the document (see also DeepClone).
            </summary>
            <returns>
            A shallow clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.CompareTo(MongoDB.Bson.BsonDocument)">
            <summary>
            Compares this document to another document.
            </summary>
            <param name="other">The other document.</param>
            <returns>
            A 32-bit signed integer that indicates whether this document is less than, equal to, or greather than the other.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonDocument to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDocument is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Contains(System.String)">
            <summary>
            Tests whether the document contains an element with the specified name.
            </summary>
            <param name="name">The name of the element to look for.</param>
            <returns>
            True if the document contains an element with the specified name.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.ContainsValue(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the document contains an element with the specified value.
            </summary>
            <param name="value">The value of the element to look for.</param>
            <returns>
            True if the document contains an element with the specified value.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.DeepClone">
            <summary>
            Creates a deep clone of the document (see also Clone).
            </summary>
            <returns>
            A deep clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetElement(System.Int32)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>
            The element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetElement(System.String)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>
            A BsonElement.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetEnumerator">
            <summary>
            Gets an enumerator that can be used to enumerate the elements of this document.
            </summary>
            <returns>
            An enumerator.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetValue(System.Int32)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>
            The value of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetValue(System.String)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>
            The value of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.GetValue(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value returned if the element is not found.</param>
            <returns>
            The value of the element or the default value if the element is not found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.InsertAt(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Inserts a new element at a specified position.
            </summary>
            <param name="index">The position of the new element.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Merge(MongoDB.Bson.BsonDocument)">
            <summary>
            Merges another document into this one. Existing elements are not overwritten.
            </summary>
            <param name="document">The other document.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Merge(MongoDB.Bson.BsonDocument,System.Boolean)">
            <summary>
            Merges another document into this one, specifying whether existing elements are overwritten.
            </summary>
            <param name="document">The other document.</param>
            <param name="overwriteExistingElements">Whether to overwrite existing elements.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Remove(System.String)">
            <summary>
            Removes an element from this document (if duplicate element names are allowed
            then all elements with this name will be removed).
            </summary>
            <param name="name">The name of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.RemoveAt(System.Int32)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.RemoveElement(MongoDB.Bson.BsonElement)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Set(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element.
            </summary>
            <param name="index">The zero based index of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Set(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element (an element will be added if no element with this name is found).
            </summary>
            <param name="name">The name of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.SetElement(MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replaces any existing element with the same name or adds a new element if an element with the same name is not found).
            </summary>
            <param name="element">The new element.</param>
            <returns>
            The document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.SetElement(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replacing the existing element at that position).
            </summary>
            <param name="index">The zero based index of the element to replace.</param>
            <param name="element">The new element.</param>
            <returns>
            The document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.TryGetElement(System.String,MongoDB.Bson.BsonElement@)">
            <summary>
            Tries to get an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The element.</param>
            <returns>
            True if an element with that name was found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.TryGetValue(System.String,MongoDB.Bson.BsonValue@)">
            <summary>
            Tries to get the value of an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>
            True if an element with that name was found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.Materialize">
            <summary>
            Materializes the BsonDocument.
            </summary>
            <returns>The materialized elements.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.MaterializeCompleted">
            <summary>
            Informs subclasses that the Materialize process completed so they can free any resources related to the unmaterialized state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonDocument.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.ElementCount">
            <summary>
            Gets the number of elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Elements">
            <summary>
            Gets the elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.IsMaterialized">
            <summary>
            Gets a value indicating whether this instance is materialized.
            </summary>
            <value>
            <c>true</c> if this instance is materialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Names">
            <summary>
            Gets the element names.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.RawValues">
            <summary>
            Gets the raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Values">
            <summary>
            Gets the values.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Item(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value to return if the element is not found.</param>
            <returns>Teh value of the element or a default value if the element is not found.</returns>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonDocument.Item(System.String)">
            <summary>
            Gets or sets a value by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.BsonDocumentWrapper"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.BsonDocumentWrapper"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.#ctor(System.Object,MongoDB.Bson.Serialization.IBsonSerializer,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.BsonDocumentWrapper"/> class.
            </summary>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
            <param name="isUpdateDocument">if set to <c>true</c> then value is an update document.</param>
            <exception cref="T:System.ArgumentNullException">serializer</exception>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Create``1(``0)">
            <summary>
            Creates a new instance of the BsonDocumentWrapper class.
            </summary>
            <typeparam name="TNominalType">The nominal type of the wrapped object.</typeparam>
            <param name="value">The wrapped object.</param>
            <returns>A BsonDocumentWrapper.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Create``1(``0,System.Boolean)">
            <summary>
            Creates a new instance of the BsonDocumentWrapper class.
            </summary>
            <typeparam name="TNominalType">The nominal type of the wrapped object.</typeparam>
            <param name="value">The wrapped object.</param>
            <param name="isUpdateDocument">Whether the wrapped object is an update document.</param>
            <returns>A BsonDocumentWrapper.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Create(System.Type,System.Object)">
            <summary>
            Creates a new instance of the BsonDocumentWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="value">The wrapped object.</param>
            <returns>A BsonDocumentWrapper.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Create(System.Type,System.Object,System.Boolean)">
            <summary>
            Creates a new instance of the BsonDocumentWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="value">The wrapped object.</param>
            <param name="isUpdateDocument">Whether the wrapped object is an update document.</param>
            <returns>A BsonDocumentWrapper.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.CreateMultiple``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates a list of new instances of the BsonDocumentWrapper class.
            </summary>
            <typeparam name="TNominalType">The nominal type of the wrapped objects.</typeparam>
            <param name="values">A list of wrapped objects.</param>
            <returns>A list of BsonDocumentWrappers.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.CreateMultiple(System.Type,System.Collections.IEnumerable)">
            <summary>
            Creates a list of new instances of the BsonDocumentWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="values">A list of wrapped objects.</param>
            <returns>A list of BsonDocumentWrappers.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Clone">
            <summary>
            Creates a shallow clone of the document (see also DeepClone).
            </summary>
            <returns>
            A shallow clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.Materialize">
            <summary>
            Materializes the BsonDocument.
            </summary>
            <returns>The materialized elements.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDocumentWrapper.MaterializeCompleted">
            <summary>
            Informs subclasses that the Materialize process completed so they can free any resources related to the unmaterialized state.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocumentWrapper.IsUpdateDocument">
            <summary>
            Gets whether the wrapped value is an update document.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDocumentWrapper.Serializer">
            <summary>
            Gets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.BsonDocumentWrapper.Wrapped">
            <summary>
            Gets the wrapped value.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonDouble">
            <summary>
            Represents a BSON double value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the BsonDouble class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.op_Implicit(System.Double)~MongoDB.Bson.BsonDouble">
            <summary>
            Converts a double to a BsonDouble.
            </summary>
            <param name="value">A double.</param>
            <returns>A BsonDouble.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.op_Inequality(MongoDB.Bson.BsonDouble,MongoDB.Bson.BsonDouble)">
            <summary>
            Compares two BsonDouble values.
            </summary>
            <param name="lhs">The first BsonDouble.</param>
            <param name="rhs">The other BsonDouble.</param>
            <returns>True if the two BsonDouble values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.op_Equality(MongoDB.Bson.BsonDouble,MongoDB.Bson.BsonDouble)">
            <summary>
            Compares two BsonDouble values.
            </summary>
            <param name="lhs">The first BsonDouble.</param>
            <param name="rhs">The other BsonDouble.</param>
            <returns>True if the two BsonDouble values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.Create(System.Object)">
            <summary>
            Creates a new instance of the BsonDouble class.
            </summary>
            <param name="value">An object to be mapped to a BsonDouble.</param>
            <returns>A BsonDouble.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.CompareTo(MongoDB.Bson.BsonDouble)">
            <summary>
            Compares this BsonDouble to another BsonDouble.
            </summary>
            <param name="other">The other BsonDouble.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDouble is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonDouble to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonDouble is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.Equals(MongoDB.Bson.BsonDouble)">
            <summary>
            Compares this BsonDouble to another BsonDouble.
            </summary>
            <param name="rhs">The other BsonDouble.</param>
            <returns>True if the two BsonDouble values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.Equals(System.Object)">
            <summary>
            Compares this BsonDouble to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonDouble and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.ToDouble">
            <summary>
            Converts this BsonValue to a Double.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.ToInt32">
            <summary>
            Converts this BsonValue to an Int32.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.ToInt64">
            <summary>
            Converts this BsonValue to an Int64.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonDouble.OperatorEqualsImplementation(MongoDB.Bson.BsonValue)">
            <summary>
            Compares this BsonDouble against another BsonValue.
            </summary>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if this BsonDouble and the other BsonValue are equal according to ==.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonDouble.RawValue">
            <summary>
            Gets the BsonDouble as a double.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonDouble.Value">
            <summary>
            Gets the value of this BsonDouble.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonElement">
            <summary>
            Represents a BSON element.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the BsonElement class.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.op_Equality(MongoDB.Bson.BsonElement,MongoDB.Bson.BsonElement)">
            <summary>
            Compares two BsonElements.
            </summary>
            <param name="lhs">The first BsonElement.</param>
            <param name="rhs">The other BsonElement.</param>
            <returns>True if the two BsonElements are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.op_Inequality(MongoDB.Bson.BsonElement,MongoDB.Bson.BsonElement)">
            <summary>
            Compares two BsonElements.
            </summary>
            <param name="lhs">The first BsonElement.</param>
            <param name="rhs">The other BsonElement.</param>
            <returns>True if the two BsonElements are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.Clone">
            <summary>
            Creates a shallow clone of the element (see also DeepClone).
            </summary>
            <returns>A shallow clone of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.DeepClone">
            <summary>
            Creates a deep clone of the element (see also Clone).
            </summary>
            <returns>A deep clone of the element.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.CompareTo(MongoDB.Bson.BsonElement)">
            <summary>
            Compares this BsonElement to another BsonElement.
            </summary>
            <param name="other">The other BsonElement.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonElement is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.Equals(MongoDB.Bson.BsonElement)">
            <summary>
            Compares this BsonElement to another BsonElement.
            </summary>
            <param name="rhs">The other BsonElement.</param>
            <returns>True if the two BsonElement values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.Equals(System.Object)">
            <summary>
            Compares this BsonElement to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonElement and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonElement.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonElement.Name">
            <summary>
            Gets the name of the element.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonElement.Value">
            <summary>
            Gets or sets the value of the element.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonInt32">
            <summary>
            Represents a BSON int value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the BsonInt32 class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.op_Implicit(System.Int32)~MongoDB.Bson.BsonInt32">
            <summary>
            Converts an int to a BsonInt32.
            </summary>
            <param name="value">An int.</param>
            <returns>A BsonInt32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.op_Inequality(MongoDB.Bson.BsonInt32,MongoDB.Bson.BsonInt32)">
            <summary>
            Compares two BsonInt32 values.
            </summary>
            <param name="lhs">The first BsonInt32.</param>
            <param name="rhs">The other BsonInt32.</param>
            <returns>True if the two BsonInt32 values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.op_Equality(MongoDB.Bson.BsonInt32,MongoDB.Bson.BsonInt32)">
            <summary>
            Compares two BsonInt32 values.
            </summary>
            <param name="lhs">The first BsonInt32.</param>
            <param name="rhs">The other BsonInt32.</param>
            <returns>True if the two BsonInt32 values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.Create(System.Object)">
            <summary>
            Creates a new BsonInt32.
            </summary>
            <param name="value">An object to be mapped to a BsonInt32.</param>
            <returns>A BsonInt32 or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.CompareTo(MongoDB.Bson.BsonInt32)">
            <summary>
            Compares this BsonInt32 to another BsonInt32.
            </summary>
            <param name="other">The other BsonInt32.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonInt32 is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonInt32 to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonInt32 is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.Equals(MongoDB.Bson.BsonInt32)">
            <summary>
            Compares this BsonInt32 to another BsonInt32.
            </summary>
            <param name="rhs">The other BsonInt32.</param>
            <returns>True if the two BsonInt32 values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.Equals(System.Object)">
            <summary>
            Compares this BsonInt32 to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonInt32 and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.ToDouble">
            <summary>
            Converts this BsonValue to a Double.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.ToInt32">
            <summary>
            Converts this BsonValue to an Int32.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.ToInt64">
            <summary>
            Converts this BsonValue to an Int64.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt32.OperatorEqualsImplementation(MongoDB.Bson.BsonValue)">
            <summary>
            Compares this BsonInt32 against another BsonValue.
            </summary>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if this BsonInt32 and the other BsonValue are equal according to ==.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.MinusOne">
            <summary>
            Gets an instance of BsonInt32 that represents -1.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.Zero">
            <summary>
            Gets an instance of BsonInt32 that represents -0.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.One">
            <summary>
            Gets an instance of BsonInt32 that represents 1.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.Two">
            <summary>
            Gets an instance of BsonInt32 that represents 2.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.Three">
            <summary>
            Gets an instance of BsonInt32 that represents 3.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.RawValue">
            <summary>
            Gets the BsonInt32 as an int.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt32.Value">
            <summary>
            Gets the value of this BsonInt32.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonInt64">
            <summary>
            Represents a BSON long value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the BsonInt64 class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.op_Implicit(System.Int64)~MongoDB.Bson.BsonInt64">
            <summary>
            Converts a long to a BsonInt64.
            </summary>
            <param name="value">A long.</param>
            <returns>A BsonInt64.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.op_Inequality(MongoDB.Bson.BsonInt64,MongoDB.Bson.BsonInt64)">
            <summary>
            Compares two BsonInt64 values.
            </summary>
            <param name="lhs">The first BsonInt64.</param>
            <param name="rhs">The other BsonInt64.</param>
            <returns>True if the two BsonInt64 values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.op_Equality(MongoDB.Bson.BsonInt64,MongoDB.Bson.BsonInt64)">
            <summary>
            Compares two BsonInt64 values.
            </summary>
            <param name="lhs">The first BsonInt64.</param>
            <param name="rhs">The other BsonInt64.</param>
            <returns>True if the two BsonInt64 values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.Create(System.Object)">
            <summary>
            Creates a new BsonInt64.
            </summary>
            <param name="value">An object to be mapped to a BsonInt64.</param>
            <returns>A BsonInt64 or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.CompareTo(MongoDB.Bson.BsonInt64)">
            <summary>
            Compares this BsonInt64 to another BsonInt64.
            </summary>
            <param name="other">The other BsonInt64.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonInt64 is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonInt64 to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonInt64 is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.Equals(MongoDB.Bson.BsonInt64)">
            <summary>
            Compares this BsonInt64 to another BsonInt64.
            </summary>
            <param name="rhs">The other BsonInt64.</param>
            <returns>True if the two BsonInt64 values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.Equals(System.Object)">
            <summary>
            Compares this BsonInt64 to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonInt64 and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.ToDouble">
            <summary>
            Converts this BsonValue to a Double.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.ToInt32">
            <summary>
            Converts this BsonValue to an Int32.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.ToInt64">
            <summary>
            Converts this BsonValue to an Int64.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonInt64.OperatorEqualsImplementation(MongoDB.Bson.BsonValue)">
            <summary>
            Compares this BsonInt32 against another BsonValue.
            </summary>
            <param name="rhs">The other BsonValue.</param>
            <returns>True if this BsonInt64 and the other BsonValue are equal according to ==.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonInt64.RawValue">
            <summary>
            Gets the BsonInt64 as a long.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonInt64.Value">
            <summary>
            Gets the value of this BsonInt64.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonJavaScript">
            <summary>
            Represents a BSON JavaScript value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonJavaScript class.
            </summary>
            <param name="code">The JavaScript code.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.#ctor(System.String,MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the BsonJavaScript class (only called by BsonJavaScriptWithScope).
            </summary>
            <param name="code">The JavaScript code.</param>
            <param name="bsonType">The BsonType (must be JavaScriptWithScope).</param>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.op_Inequality(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Compares two BsonJavaScript values.
            </summary>
            <param name="lhs">The first BsonJavaScript.</param>
            <param name="rhs">The other BsonJavaScript.</param>
            <returns>True if the two BsonJavaScript values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.op_Equality(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Compares two BsonJavaScript values.
            </summary>
            <param name="lhs">The first BsonJavaScript.</param>
            <param name="rhs">The other BsonJavaScript.</param>
            <returns>True if the two BsonJavaScript values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.op_Implicit(System.String)~MongoDB.Bson.BsonJavaScript">
            <summary>
            Converts a string to a BsonJavaScript.
            </summary>
            <param name="code">A string.</param>
            <returns>A BsonJavaScript.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.Create(System.Object)">
            <summary>
            Creates a new BsonJavaScript.
            </summary>
            <param name="value">An object to be mapped to a BsonJavaScript.</param>
            <returns>A BsonJavaScript or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.CompareTo(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Compares this BsonJavaScript to another BsonJavaScript.
            </summary>
            <param name="other">The other BsonJavaScript.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonJavaScript is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonJavaScript to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonJavaScript is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.Equals(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Compares this BsonJavaScript to another BsonJavaScript.
            </summary>
            <param name="rhs">The other BsonJavaScript.</param>
            <returns>True if the two BsonJavaScript values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.Equals(System.Object)">
            <summary>
            Compares this BsonJavaScript to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonJavaScript and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScript.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonJavaScript.Code">
            <summary>
            Gets the JavaScript code.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonJavaScriptWithScope">
            <summary>
            Represents a BSON JavaScript value with a scope.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.#ctor(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the BsonJavaScriptWithScope class.
            </summary>
            <param name="code">The JavaScript code.</param>
            <param name="scope">A scope (a set of variables with values).</param>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.op_Inequality(MongoDB.Bson.BsonJavaScriptWithScope,MongoDB.Bson.BsonJavaScriptWithScope)">
            <summary>
            Compares two BsonJavaScriptWithScope values.
            </summary>
            <param name="lhs">The first BsonJavaScriptWithScope.</param>
            <param name="rhs">The other BsonJavaScriptWithScope.</param>
            <returns>True if the two BsonJavaScriptWithScope values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.op_Equality(MongoDB.Bson.BsonJavaScriptWithScope,MongoDB.Bson.BsonJavaScriptWithScope)">
            <summary>
            Compares two BsonJavaScriptWithScope values.
            </summary>
            <param name="lhs">The first BsonJavaScriptWithScope.</param>
            <param name="rhs">The other BsonJavaScriptWithScope.</param>
            <returns>True if the two BsonJavaScriptWithScope values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.Create(System.Object)">
            <summary>
            Creates a new BsonJavaScriptWithScope.
            </summary>
            <param name="value">An object to be mapped to a BsonJavaScriptWithScope.</param>
            <returns>A BsonJavaScriptWithScope or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.Clone">
            <summary>
            Creates a shallow clone of the BsonJavaScriptWithScope (see also DeepClone).
            </summary>
            <returns>A shallow clone of the BsonJavaScriptWithScope.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.DeepClone">
            <summary>
            Creates a deep clone of the BsonJavaScriptWithScope (see also Clone).
            </summary>
            <returns>A deep clone of the BsonJavaScriptWithScope.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.CompareTo(MongoDB.Bson.BsonJavaScriptWithScope)">
            <summary>
            Compares this BsonJavaScriptWithScope to another BsonJavaScriptWithScope.
            </summary>
            <param name="other">The other BsonJavaScriptWithScope.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonJavaScriptWithScope is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonJavaScriptWithScope to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonJavaScriptWithScope is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.Equals(MongoDB.Bson.BsonJavaScriptWithScope)">
            <summary>
            Compares this BsonJavaScriptWithScope to another BsonJavaScriptWithScope.
            </summary>
            <param name="rhs">The other BsonJavaScriptWithScope.</param>
            <returns>True if the two BsonJavaScriptWithScope values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.Equals(System.Object)">
            <summary>
            Compares this BsonJavaScriptWithScope to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonJavaScriptWithScope and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonJavaScriptWithScope.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonJavaScriptWithScope.Scope">
            <summary>
            Gets the scope (a set of variables with values).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonMaxKey">
            <summary>
            Represents the BSON MaxKey value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.op_Inequality(MongoDB.Bson.BsonMaxKey,MongoDB.Bson.BsonMaxKey)">
            <summary>
            Compares two BsonMaxKey values.
            </summary>
            <param name="lhs">The first BsonMaxKey.</param>
            <param name="rhs">The other BsonMaxKey.</param>
            <returns>True if the two BsonMaxKey values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.op_Equality(MongoDB.Bson.BsonMaxKey,MongoDB.Bson.BsonMaxKey)">
            <summary>
            Compares two BsonMaxKey values.
            </summary>
            <param name="lhs">The first BsonMaxKey.</param>
            <param name="rhs">The other BsonMaxKey.</param>
            <returns>True if the two BsonMaxKey values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.CompareTo(MongoDB.Bson.BsonMaxKey)">
            <summary>
            Compares this BsonMaxKey to another BsonMaxKey.
            </summary>
            <param name="other">The other BsonMaxKey.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonMaxKey is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonMaxKey to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonMaxKey is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.Equals(MongoDB.Bson.BsonMaxKey)">
            <summary>
            Compares this BsonMaxKey to another BsonMaxKey.
            </summary>
            <param name="rhs">The other BsonMaxKey.</param>
            <returns>True if the two BsonMaxKey values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.Equals(System.Object)">
            <summary>
            Compares this BsonMaxKey to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonMaxKey and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMaxKey.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonMaxKey.Value">
            <summary>
            Gets the singleton instance of BsonMaxKey.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonMinKey">
            <summary>
            Represents the BSON MinKey value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.op_Inequality(MongoDB.Bson.BsonMinKey,MongoDB.Bson.BsonMinKey)">
            <summary>
            Compares two BsonMinKey values.
            </summary>
            <param name="lhs">The first BsonMinKey.</param>
            <param name="rhs">The other BsonMinKey.</param>
            <returns>True if the two BsonMinKey values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.op_Equality(MongoDB.Bson.BsonMinKey,MongoDB.Bson.BsonMinKey)">
            <summary>
            Compares two BsonMinKey values.
            </summary>
            <param name="lhs">The first BsonMinKey.</param>
            <param name="rhs">The other BsonMinKey.</param>
            <returns>True if the two BsonMinKey values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.CompareTo(MongoDB.Bson.BsonMinKey)">
            <summary>
            Compares this BsonMinKey to another BsonMinKey.
            </summary>
            <param name="other">The other BsonMinKey.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonMinKey is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonMinKey to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonMinKey is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.Equals(MongoDB.Bson.BsonMinKey)">
            <summary>
            Compares this BsonMinKey to another BsonMinKey.
            </summary>
            <param name="rhs">The other BsonMinKey.</param>
            <returns>True if the two BsonMinKey values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.Equals(System.Object)">
            <summary>
            Compares this BsonMinKey to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonMinKey and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonMinKey.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonMinKey.Value">
            <summary>
            Gets the singleton instance of BsonMinKey.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonNull">
            <summary>
            Represents the BSON Null value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.op_Inequality(MongoDB.Bson.BsonNull,MongoDB.Bson.BsonNull)">
            <summary>
            Compares two BsonNull values.
            </summary>
            <param name="lhs">The first BsonNull.</param>
            <param name="rhs">The other BsonNull.</param>
            <returns>True if the two BsonNull values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.op_Equality(MongoDB.Bson.BsonNull,MongoDB.Bson.BsonNull)">
            <summary>
            Compares two BsonNull values.
            </summary>
            <param name="lhs">The first BsonNull.</param>
            <param name="rhs">The other BsonNull.</param>
            <returns>True if the two BsonNull values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.CompareTo(MongoDB.Bson.BsonNull)">
            <summary>
            Compares this BsonNull to another BsonNull.
            </summary>
            <param name="other">The other BsonNull.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonNull is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonNull to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonNull is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.Equals(MongoDB.Bson.BsonNull)">
            <summary>
            Compares this BsonNull to another BsonNull.
            </summary>
            <param name="rhs">The other BsonNull.</param>
            <returns>True if the two BsonNull values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.Equals(System.Object)">
            <summary>
            Compares this BsonNull to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonNull and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.ToNullableLocalTime">
            <summary>
            Converts this BsonValue to a DateTime? in local time.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.ToNullableUniversalTime">
            <summary>
            Converts this BsonValue to a DateTime? in UTC.
            </summary>
            <returns>A DateTime?.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonNull.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonNull.Value">
            <summary>
            Gets the singleton instance of BsonNull.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonObjectId">
            <summary>
            Represents a BSON ObjectId value (see also ObjectId).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.#ctor(MongoDB.Bson.ObjectId)">
            <summary>
            Initializes a new instance of the BsonObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the BsonObjectId class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.#ctor(System.DateTime,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the BsonObjectId class.
            </summary>
            <param name="timestamp">The timestamp (expressed as a DateTime).</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.#ctor(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the BsonObjectId class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.op_Implicit(MongoDB.Bson.ObjectId)~MongoDB.Bson.BsonObjectId">
            <summary>
            Converts an ObjectId to a BsonObjectId.
            </summary>
            <param name="value">An ObjectId.</param>
            <returns>A BsonObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.op_Inequality(MongoDB.Bson.BsonObjectId,MongoDB.Bson.BsonObjectId)">
            <summary>
            Compares two BsonObjectId values.
            </summary>
            <param name="lhs">The first BsonObjectId.</param>
            <param name="rhs">The other BsonObjectId.</param>
            <returns>True if the two BsonObjectId values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.op_Equality(MongoDB.Bson.BsonObjectId,MongoDB.Bson.BsonObjectId)">
            <summary>
            Compares two BsonObjectId values.
            </summary>
            <param name="lhs">The first BsonObjectId.</param>
            <param name="rhs">The other BsonObjectId.</param>
            <returns>True if the two BsonObjectId values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.Create(System.Object)">
            <summary>
            Creates a new BsonObjectId.
            </summary>
            <param name="value">An object to be mapped to a BsonObjectId.</param>
            <returns>A BsonObjectId or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.GenerateNewId">
            <summary>
            Generates a new BsonObjectId with a unique value.
            </summary>
            <returns>A BsonObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.GenerateNewId(System.DateTime)">
            <summary>
            Generates a new BsonObjectId with a unique value (with the timestamp component based on a given DateTime).
            </summary>
            <param name="timestamp">The timestamp component (expressed as a DateTime).</param>
            <returns>A BsonObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.GenerateNewId(System.Int32)">
            <summary>
            Generates a new BsonObjectId with a unique value (with the given timestamp).
            </summary>
            <param name="timestamp">The timestamp component.</param>
            <returns>A BsonObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.Parse(System.String)">
            <summary>
            Parses a string and creates a new BsonObjectId.
            </summary>
            <param name="s">The string value.</param>
            <returns>A BsonObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.TryParse(System.String,MongoDB.Bson.BsonObjectId@)">
            <summary>
            Tries to parse a string and create a new BsonObjectId.
            </summary>
            <param name="s">The string value.</param>
            <param name="value">The new BsonObjectId.</param>
            <returns>True if the string was parsed successfully.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.CompareTo(MongoDB.Bson.BsonObjectId)">
            <summary>
            Compares this BsonObjectId to another BsonObjectId.
            </summary>
            <param name="other">The other BsonObjectId.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonObjectId is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonObjectId to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonObjectId is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.Equals(MongoDB.Bson.BsonObjectId)">
            <summary>
            Compares this BsonObjectId to another BsonObjectId.
            </summary>
            <param name="rhs">The other BsonObjectId.</param>
            <returns>True if the two BsonObjectId values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.Equals(System.Object)">
            <summary>
            Compares this BsonObjectId to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonObjectId and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.ToByteArray">
            <summary>
            Converts the BsonObjectId to a byte array.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonObjectId.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Empty">
            <summary>
            Gets an instance of BsonObjectId where the value is empty.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Machine">
            <summary>
            Gets the machine.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Pid">
            <summary>
            Gets the PID.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.CreationTime">
            <summary>
            Gets the creation time (derived from the timestamp).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.RawValue">
            <summary>
            Gets the BsonObjectId as an ObjectId.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonObjectId.Value">
            <summary>
            Gets the value of this BsonObjectId.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonRegularExpression">
            <summary>
            Represents a BSON regular expression value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonRegularExpression class.
            </summary>
            <param name="pattern">A regular expression pattern.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the BsonRegularExpression class.
            </summary>
            <param name="pattern">A regular expression pattern.</param>
            <param name="options">Regular expression options.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.#ctor(System.Text.RegularExpressions.Regex)">
            <summary>
            Initializes a new instance of the BsonRegularExpression class.
            </summary>
            <param name="regex">A Regex.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.op_Implicit(System.Text.RegularExpressions.Regex)~MongoDB.Bson.BsonRegularExpression">
            <summary>
            Converts a Regex to a BsonRegularExpression.
            </summary>
            <param name="value">A Regex.</param>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.op_Implicit(System.String)~MongoDB.Bson.BsonRegularExpression">
            <summary>
            Converts a string to a BsonRegularExpression.
            </summary>
            <param name="value">A string.</param>
            <returns>A BsonRegularExpression.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.op_Inequality(MongoDB.Bson.BsonRegularExpression,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Compares two BsonRegularExpression values.
            </summary>
            <param name="lhs">The first BsonRegularExpression.</param>
            <param name="rhs">The other BsonRegularExpression.</param>
            <returns>True if the two BsonRegularExpression values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.op_Equality(MongoDB.Bson.BsonRegularExpression,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Compares two BsonRegularExpression values.
            </summary>
            <param name="lhs">The first BsonRegularExpression.</param>
            <param name="rhs">The other BsonRegularExpression.</param>
            <returns>True if the two BsonRegularExpression values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.Create(System.Object)">
            <summary>
            Creates a new BsonRegularExpression.
            </summary>
            <param name="value">An object to be mapped to a BsonRegularExpression.</param>
            <returns>A BsonRegularExpression or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.CompareTo(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Compares this BsonRegularExpression to another BsonRegularExpression.
            </summary>
            <param name="other">The other BsonRegularExpression.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonRegularExpression is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonRegularExpression to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonRegularExpression is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.Equals(MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Compares this BsonRegularExpression to another BsonRegularExpression.
            </summary>
            <param name="rhs">The other BsonRegularExpression.</param>
            <returns>True if the two BsonRegularExpression values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.Equals(System.Object)">
            <summary>
            Compares this BsonRegularExpression to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonRegularExpression and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.ToRegex">
            <summary>
            Converts the BsonRegularExpression to a Regex.
            </summary>
            <returns>A Regex.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonRegularExpression.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonRegularExpression.Pattern">
            <summary>
            Gets the regular expression pattern.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonRegularExpression.Options">
            <summary>
            Gets the regular expression options.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonString">
            <summary>
            Represents a BSON string value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonString.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonString class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonString.op_Implicit(System.String)~MongoDB.Bson.BsonString">
            <summary>
            Converts a string to a BsonString.
            </summary>
            <param name="value">A string.</param>
            <returns>A BsonString.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.op_Inequality(MongoDB.Bson.BsonString,MongoDB.Bson.BsonString)">
            <summary>
            Compares two BsonString values.
            </summary>
            <param name="lhs">The first BsonString.</param>
            <param name="rhs">The other BsonString.</param>
            <returns>True if the two BsonString values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.op_Equality(MongoDB.Bson.BsonString,MongoDB.Bson.BsonString)">
            <summary>
            Compares two BsonString values.
            </summary>
            <param name="lhs">The first BsonString.</param>
            <param name="rhs">The other BsonString.</param>
            <returns>True if the two BsonString values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.Create(System.Object)">
            <summary>
            Creates a new BsonString.
            </summary>
            <param name="value">An object to be mapped to a BsonString.</param>
            <returns>A BsonString or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.CompareTo(MongoDB.Bson.BsonString)">
            <summary>
            Compares this BsonString to another BsonString.
            </summary>
            <param name="other">The other BsonString.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonString is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonString to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonString is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.Equals(MongoDB.Bson.BsonString)">
            <summary>
            Compares this BsonString to another BsonString.
            </summary>
            <param name="rhs">The other BsonString.</param>
            <returns>True if the two BsonString values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.Equals(System.Object)">
            <summary>
            Compares this BsonString to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonString and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.ToDouble">
            <summary>
            Converts this BsonValue to a Double.
            </summary>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.ToInt32">
            <summary>
            Converts this BsonValue to an Int32.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.ToInt64">
            <summary>
            Converts this BsonValue to an Int64.
            </summary>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonString.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonString.Empty">
            <summary>
            Gets an instance of BsonString that represents an empty string.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonString.RawValue">
            <summary>
            Gets the BsonString as a string.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonString.Value">
            <summary>
            Gets the value of this BsonString.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonSymbol">
            <summary>
            Represents a BSON symbol value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.op_Implicit(System.String)~MongoDB.Bson.BsonSymbol">
            <summary>
            Converts a string to a BsonSymbol.
            </summary>
            <param name="name">A string.</param>
            <returns>A BsonSymbol.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.op_Inequality(MongoDB.Bson.BsonSymbol,MongoDB.Bson.BsonSymbol)">
            <summary>
            Compares two BsonSymbol values.
            </summary>
            <param name="lhs">The first BsonSymbol.</param>
            <param name="rhs">The other BsonSymbol.</param>
            <returns>True if the two BsonSymbol values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.op_Equality(MongoDB.Bson.BsonSymbol,MongoDB.Bson.BsonSymbol)">
            <summary>
            Compares two BsonSymbol values.
            </summary>
            <param name="lhs">The first BsonSymbol.</param>
            <param name="rhs">The other BsonSymbol.</param>
            <returns>True if the two BsonSymbol values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.Create(System.Object)">
            <summary>
            Creates a new BsonSymbol.
            </summary>
            <param name="value">An object to be mapped to a BsonSymbol.</param>
            <returns>A BsonSymbol or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.CompareTo(MongoDB.Bson.BsonSymbol)">
            <summary>
            Compares this BsonSymbol to another BsonSymbol.
            </summary>
            <param name="other">The other BsonSymbol.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonSymbol is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonSymbol to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonSymbol is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.Equals(MongoDB.Bson.BsonSymbol)">
            <summary>
            Compares this BsonSymbol to another BsonSymbol.
            </summary>
            <param name="rhs">The other BsonSymbol.</param>
            <returns>True if the two BsonSymbol values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.Equals(System.Object)">
            <summary>
            Compares this BsonSymbol to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonSymbol and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbol.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonSymbol.Name">
            <summary>
            Gets the name of the symbol.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonSymbolTable">
            <summary>
            Represents the symbol table of BsonSymbols.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonSymbolTable.Lookup(System.String)">
            <summary>
            Looks up a symbol (and creates a new one if necessary).
            </summary>
            <param name="name">The name of the symbol.</param>
            <returns>The symbol.</returns>
        </member>
        <member name="T:MongoDB.Bson.BsonTimestamp">
            <summary>
            Represents a BSON timestamp value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the BsonTimestamp class.
            </summary>
            <param name="value">The combined timestamp/increment value.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BsonTimestamp class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.op_Inequality(MongoDB.Bson.BsonTimestamp,MongoDB.Bson.BsonTimestamp)">
            <summary>
            Compares two BsonTimestamp values.
            </summary>
            <param name="lhs">The first BsonTimestamp.</param>
            <param name="rhs">The other BsonTimestamp.</param>
            <returns>True if the two BsonTimestamp values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.op_Equality(MongoDB.Bson.BsonTimestamp,MongoDB.Bson.BsonTimestamp)">
            <summary>
            Compares two BsonTimestamp values.
            </summary>
            <param name="lhs">The first BsonTimestamp.</param>
            <param name="rhs">The other BsonTimestamp.</param>
            <returns>True if the two BsonTimestamp values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.Create(System.Object)">
            <summary>
            Creates a new BsonTimestamp.
            </summary>
            <param name="value">An object to be mapped to a BsonTimestamp.</param>
            <returns>A BsonTimestamp or null.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.CompareTo(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Compares this BsonTimestamp to another BsonTimestamp.
            </summary>
            <param name="other">The other BsonTimestamp.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonTimestamp is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonTimestamp to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonTimestamp is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.Equals(MongoDB.Bson.BsonTimestamp)">
            <summary>
            Compares this BsonTimestamp to another BsonTimestamp.
            </summary>
            <param name="rhs">The other BsonTimestamp.</param>
            <returns>True if the two BsonTimestamp values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.Equals(System.Object)">
            <summary>
            Compares this BsonTimestamp to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonTimestamp and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTimestamp.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonTimestamp.Value">
            <summary>
            Gets the value of this BsonTimestamp.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTimestamp.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTimestamp.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonType">
            <summary>
            Represents the type of a BSON element.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.EndOfDocument">
            <summary>
            Not a real BSON type. Used to signal the end of a document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Double">
            <summary>
            A BSON double.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.String">
            <summary>
            A BSON string.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Document">
            <summary>
            A BSON document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Array">
            <summary>
            A BSON array.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Binary">
            <summary>
            BSON binary data.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Undefined">
            <summary>
            A BSON undefined value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.ObjectId">
            <summary>
            A BSON ObjectId.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Boolean">
            <summary>
            A BSON bool.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.DateTime">
            <summary>
            A BSON DateTime.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Null">
            <summary>
            A BSON null value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.RegularExpression">
            <summary>
            A BSON regular expression.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.JavaScript">
            <summary>
            BSON JavaScript code.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Symbol">
            <summary>
            A BSON symbol.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.JavaScriptWithScope">
            <summary>
            BSON JavaScript code with a scope (a set of variables with values).
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Int32">
            <summary>
            A BSON 32-bit integer.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Timestamp">
            <summary>
            A BSON timestamp.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.Int64">
            <summary>
            A BSON 64-bit integer.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.MinKey">
            <summary>
            A BSON MinKey value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.BsonType.MaxKey">
            <summary>
            A BSON MaxKey value.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonTypeMapper">
            <summary>
            A static class that maps between .NET objects and BsonValues.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.MapToBsonValue(System.Object)">
            <summary>
            Maps an object to an instance of the closest BsonValue class.
            </summary>
            <param name="value">An object.</param>
            <returns>A BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.MapToBsonValue(System.Object,MongoDB.Bson.BsonType)">
            <summary>
            Maps an object to a specific BsonValue type.
            </summary>
            <param name="value">An object.</param>
            <param name="bsonType">The BsonType to map to.</param>
            <returns>A BsonValue of the desired type (or BsonNull.Value if value is null and bsonType is Null).</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.MapToDotNetValue(MongoDB.Bson.BsonValue)">
            <summary>
            Maps a BsonValue to a .NET value using the default BsonTypeMapperOptions.
            </summary>
            <param name="bsonValue">The BsonValue.</param>
            <returns>The mapped .NET value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.MapToDotNetValue(MongoDB.Bson.BsonValue,MongoDB.Bson.BsonTypeMapperOptions)">
            <summary>
            Maps a BsonValue to a .NET value.
            </summary>
            <param name="bsonValue">The BsonValue.</param>
            <param name="options">The BsonTypeMapperOptions.</param>
            <returns>The mapped .NET value.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.RegisterCustomTypeMapper(System.Type,MongoDB.Bson.ICustomBsonTypeMapper)">
            <summary>
            Registers a custom type mapper.
            </summary>
            <param name="type">The type.</param>
            <param name="customTypeMapper">A custom type mapper.</param>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.TryMapToBsonValue(System.Object,MongoDB.Bson.BsonValue@)">
            <summary>
            Tries to map an object to an instance of the closest BsonValue class.
            </summary>
            <param name="value">An object.</param>
            <param name="bsonValue">The BsonValue.</param>
            <returns>True if the mapping was successfull.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.Mapping.Equals(System.Object)">
            <summary>
            Compares this Mapping to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a Mapping and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapper.Mapping.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="T:MongoDB.Bson.DuplicateNameHandling">
            <summary>
            Represents how duplicate names should be handled.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.DuplicateNameHandling.Overwrite">
            <summary>
            Overwrite original value with new value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.DuplicateNameHandling.Ignore">
            <summary>
            Ignore duplicate name and keep original value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.DuplicateNameHandling.ThrowException">
            <summary>
            Throw an exception.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonTypeMapperOptions">
            <summary>
            Represents options used by the BsonTypeMapper.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapperOptions.#ctor">
            <summary>
            Initializes a new instance of the BsonTypeMapperOptions class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapperOptions.Clone">
            <summary>
            Clones the BsonTypeMapperOptions.
            </summary>
            <returns>The cloned BsonTypeMapperOptions.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonTypeMapperOptions.Freeze">
            <summary>
            Freezes the BsonTypeMapperOptions.
            </summary>
            <returns>The frozen BsonTypeMapperOptions.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.Defaults">
            <summary>
            Gets or sets the default BsonTypeMapperOptions.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.DuplicateNameHandling">
            <summary>
            Gets or sets how duplicate names should be handled.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.IsFrozen">
            <summary>
            Gets whether the BsonTypeMapperOptions is frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.MapBsonArrayTo">
            <summary>
            Gets or sets the type that a BsonArray should be mapped to.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.MapBsonDocumentTo">
            <summary>
            Gets or sets the type that a BsonDocument should be mapped to.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.BsonTypeMapperOptions.MapOldBinaryToByteArray">
            <summary>
            Gets or sets whether binary sub type OldBinary should be mapped to byte[] the way sub type Binary is.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.BsonUndefined">
            <summary>
            Represents the BSON undefined value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.op_Inequality(MongoDB.Bson.BsonUndefined,MongoDB.Bson.BsonUndefined)">
            <summary>
            Compares two BsonUndefined values.
            </summary>
            <param name="lhs">The first BsonUndefined.</param>
            <param name="rhs">The other BsonUndefined.</param>
            <returns>True if the two BsonUndefined values are not equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.op_Equality(MongoDB.Bson.BsonUndefined,MongoDB.Bson.BsonUndefined)">
            <summary>
            Compares two BsonUndefined values.
            </summary>
            <param name="lhs">The first BsonUndefined.</param>
            <param name="rhs">The other BsonUndefined.</param>
            <returns>True if the two BsonUndefined values are equal according to ==.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.CompareTo(MongoDB.Bson.BsonUndefined)">
            <summary>
            Compares this BsonUndefined to another BsonUndefined.
            </summary>
            <param name="other">The other BsonUndefined.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonUndefined is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the BsonUndefined to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this BsonUndefined is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.Equals(MongoDB.Bson.BsonUndefined)">
            <summary>
            Compares this BsonUndefined to another BsonUndefined.
            </summary>
            <param name="rhs">The other BsonUndefined.</param>
            <returns>True if the two BsonUndefined values are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.Equals(System.Object)">
            <summary>
            Compares this BsonUndefined to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is a BsonUndefined and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.ToBoolean">
            <summary>
            Converts this BsonValue to a Boolean (using the JavaScript definition of truthiness).
            </summary>
            <returns>A Boolean.</returns>
        </member>
        <member name="M:MongoDB.Bson.BsonUndefined.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.BsonUndefined.Value">
            <summary>
            Gets the singleton instance of BsonUndefined.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.GuidConverter">
            <summary>
            A static class containing methods to convert to and from Guids and byte arrays in various byte orders.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.GuidConverter.FromBytes(System.Byte[],MongoDB.Bson.GuidRepresentation)">
            <summary>
            Converts a byte array to a Guid.
            </summary>
            <param name="bytes">The byte array.</param>
            <param name="representation">The representation of the Guid in the byte array.</param>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.GuidConverter.ToBytes(System.Guid,MongoDB.Bson.GuidRepresentation)">
            <summary>
            Converts a Guid to a byte array.
            </summary>
            <param name="guid">The Guid.</param>
            <param name="representation">The representation of the Guid in the byte array.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="T:MongoDB.Bson.GuidRepresentation">
            <summary>
            Represents the representation to use when converting a Guid to a BSON binary value.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.GuidRepresentation.Unspecified">
            <summary>
            The representation for Guids is unspecified, so conversion between Guids and Bson binary data is not possible.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.GuidRepresentation.Standard">
            <summary>
            Use the new standard representation for Guids (binary subtype 4 with bytes in network byte order).
            </summary>
        </member>
        <member name="F:MongoDB.Bson.GuidRepresentation.CSharpLegacy">
            <summary>
            Use the representation used by older versions of the C# driver (including most community provided C# drivers).
            </summary>
        </member>
        <member name="F:MongoDB.Bson.GuidRepresentation.JavaLegacy">
            <summary>
            Use the representation used by older versions of the Java driver.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.GuidRepresentation.PythonLegacy">
            <summary>
            Use the representation used by older versions of the Python driver.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.ICustomBsonTypeMapper">
            <summary>
            An interface for custom mappers that map an object to a BsonValue.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.ICustomBsonTypeMapper.TryMapToBsonValue(System.Object,MongoDB.Bson.BsonValue@)">
            <summary>
            Tries to map an object to a BsonValue.
            </summary>
            <param name="value">An object.</param>
            <param name="bsonValue">The BsonValue.</param>
            <returns>True if the mapping was successfull.</returns>
        </member>
        <member name="T:MongoDB.Bson.LazyBsonArray">
            <summary>
            Represents a BSON array that is deserialized lazily.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.MaterializedOnDemandBsonArray">
            <summary>
            Represents a BSON array that is not materialized until you start using it.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.MaterializedOnDemandBsonArray"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Add(MongoDB.Bson.BsonValue)">
            <summary>
            Adds an element to the array.
            </summary>
            <param name="value">The value to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.ObjectId})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Clear">
            <summary>
            Clears the array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Clone">
            <summary>
            Creates a shallow clone of the array (see also DeepClone).
            </summary>
            <returns>
            A shallow clone of the array.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.CompareTo(MongoDB.Bson.BsonArray)">
            <summary>
            Compares the array to another array.
            </summary>
            <param name="other">The other array.</param>
            <returns>A 32-bit signed integer that indicates whether this array is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.CompareTo(MongoDB.Bson.BsonValue)">
            <summary>
            Compares the array to another BsonValue.
            </summary>
            <param name="other">The other BsonValue.</param>
            <returns>A 32-bit signed integer that indicates whether this array is less than, equal to, or greather than the other BsonValue.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Contains(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the array contains a value.
            </summary>
            <param name="value">The value to test for.</param>
            <returns>True if the array contains the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.CopyTo(MongoDB.Bson.BsonValue[],System.Int32)">
            <summary>
            Copies elements from this array to another array.
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies elements from this array to another array as raw values (see BsonValue.RawValue).
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.DeepClone">
            <summary>
            Creates a deep clone of the array (see also Clone).
            </summary>
            <returns>
            A deep clone of the array.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.GetEnumerator">
            <summary>
            Gets an enumerator that can enumerate the elements of the array.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.IndexOf(MongoDB.Bson.BsonValue)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <param name="count">The number of elements to search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Insert(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Inserts a new value into the array.
            </summary>
            <param name="index">The zero based index at which to insert the new value.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Remove(MongoDB.Bson.BsonValue)">
            <summary>
            Removes the first occurrence of a value from the array.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>True if the value was removed.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.RemoveAt(System.Int32)">
            <summary>
            Removes an element from the array.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.ToArray">
            <summary>
            Converts the BsonArray to an array of BsonValues.
            </summary>
            <returns>An array of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.ToList">
            <summary>
            Converts the BsonArray to a list of BsonValues.
            </summary>
            <returns>A list of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.ToString">
            <summary>
            Returns a string representation of the array.
            </summary>
            <returns>A string representation of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.Materialize">
            <summary>
            Materializes the BsonArray.
            </summary>
            <returns>The materialized elements.</returns>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.MaterializeCompleted">
            <summary>
            Informs subclasses that the Materialize process completed so they can free any resources related to the unmaterialized state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.MaterializedOnDemandBsonArray.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.Count">
            <summary>
            Gets the count of array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.IsDisposed">
            <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
            <value>
            <c>true</c> if this instance is disposed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.IsMaterialized">
            <summary>
            Gets a value indicating whether this instance is materialized.
            </summary>
            <value>
            <c>true</c> if this instance is materialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.RawValues">
            <summary>
            Gets the array elements as raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.Values">
            <summary>
            Gets the array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.MaterializedOnDemandBsonArray.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.AbstractClassSerializer`1">
            <summary>
            Represents a serializer for an abstract class.
            </summary>
            <typeparam name="TClass">The type of the class.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1">
            <summary>
            Represents an abstract base class for class serializers.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SerializerBase`1">
            <summary>
            Represents an abstract base class for serializers.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonSerializer`1">
            <summary>
            An interface implemented by a serializer for values of type TValue.
            </summary>
            <typeparam name="TValue">The type that this serializer knows how to serialize.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonSerializer">
            <summary>
            An interface implemented by a serializer.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Object)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IBsonSerializer.ValueType">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type of the value.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeDeserializedException">
            <summary>
            Creates an exception to throw when a type cannot be deserialized.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotBeSerializedException">
            <summary>
            Creates an exception to throw when a type cannot be deserialized.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.CreateCannotDeserializeFromBsonTypeException(MongoDB.Bson.BsonType)">
            <summary>
            Creates an exception to throw when a type cannot be deserialized from a BsonType.
            </summary>
            <param name="bsonType">The BSON type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.EnsureBsonTypeEquals(MongoDB.Bson.IO.BsonReader,MongoDB.Bson.BsonType)">
            <summary>
            Ensures that the BsonType equals the expected type.
            </summary>
            <param name="reader">The reader.</param>
            <param name="bsonType">The expected type.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SerializerBase`1.ValueType">
            <summary>
            Gets the type of the values.
            </summary>
            <value>
            The type of the values.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ClassSerializerBase`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value of type {TValue}.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.#ctor(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.LazyBsonArray"/> class.
            </summary>
            <param name="slice">The slice.</param>
            <exception cref="T:System.ArgumentNullException">slice</exception>
            <exception cref="T:System.ArgumentException">LazyBsonArray cannot be used with an IByteBuffer that needs disposing.</exception>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.Clone">
            <summary>
            Creates a shallow clone of the array (see also DeepClone).
            </summary>
            <returns>A shallow clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.DeepClone">
            <summary>
            Creates a deep clone of the array (see also Clone).
            </summary>
            <returns>A deep clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.Materialize">
            <summary>
            Materializes the BsonArray.
            </summary>
            <returns>
            The materialized values.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonArray.MaterializeCompleted">
            <summary>
            Informs subclasses that the Materialize process completed so they can free any resources related to the unmaterialized state.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.LazyBsonArray.Slice">
            <summary>
            Gets the slice.
            </summary>
            <value>
            The slice.
            </value>
        </member>
        <member name="T:MongoDB.Bson.LazyBsonDocument">
            <summary>
            Represents a BSON document that is deserialized lazily.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.#ctor(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.LazyBsonDocument"/> class.
            </summary>
            <param name="slice">The slice.</param>
            <exception cref="T:System.ArgumentNullException">slice</exception>
            <exception cref="T:System.ArgumentException">LazyBsonDocument cannot be used with an IByteBuffer that needs disposing.</exception>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.LazyBsonDocument"/> class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.Clone">
            <summary>
            Creates a shallow clone of the document (see also DeepClone).
            </summary>
            <returns>
            A shallow clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.DeepClone">
            <summary>
            Creates a deep clone of the document (see also Clone).
            </summary>
            <returns>
            A deep clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.Materialize">
            <summary>
            Materializes the BsonDocument.
            </summary>
            <returns>The materialized elements.</returns>
        </member>
        <member name="M:MongoDB.Bson.LazyBsonDocument.MaterializeCompleted">
            <summary>
            Informs subclasses that the Materialize process completed so they can free any resources related to the unmaterialized state.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.LazyBsonDocument.Slice">
            <summary>
            Gets the slice.
            </summary>
            <value>
            The slice.
            </value>
        </member>
        <member name="T:MongoDB.Bson.ObjectId">
            <summary>
            Represents an ObjectId (see also BsonObjectId).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.#ctor(System.Byte[],System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="index">The index into the byte array where the ObjectId starts.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.#ctor(System.DateTime,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp (expressed as a DateTime).</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.#ctor(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ObjectId class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_LessThan(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than the second ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_LessThanOrEqual(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is less than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_Equality(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_Inequality(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are not equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_GreaterThanOrEqual(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than or equal to the second ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.op_GreaterThan(MongoDB.Bson.ObjectId,MongoDB.Bson.ObjectId)">
            <summary>
            Compares two ObjectIds.
            </summary>
            <param name="lhs">The first ObjectId.</param>
            <param name="rhs">The other ObjectId</param>
            <returns>True if the first ObjectId is greather than the second ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.GenerateNewId">
            <summary>
            Generates a new ObjectId with a unique value.
            </summary>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.GenerateNewId(System.DateTime)">
            <summary>
            Generates a new ObjectId with a unique value (with the timestamp component based on a given DateTime).
            </summary>
            <param name="timestamp">The timestamp component (expressed as a DateTime).</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.GenerateNewId(System.Int32)">
            <summary>
            Generates a new ObjectId with a unique value (with the given timestamp).
            </summary>
            <param name="timestamp">The timestamp component.</param>
            <returns>An ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.Pack(System.Int32,System.Int32,System.Int16,System.Int32)">
            <summary>
            Packs the components of an ObjectId into a byte array.
            </summary>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.Parse(System.String)">
            <summary>
            Parses a string and creates a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <returns>A ObjectId.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.TryParse(System.String,MongoDB.Bson.ObjectId@)">
            <summary>
            Tries to parse a string and create a new ObjectId.
            </summary>
            <param name="s">The string value.</param>
            <param name="objectId">The new ObjectId.</param>
            <returns>True if the string was parsed successfully.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.Unpack(System.Byte[],System.Int32@,System.Int32@,System.Int16@,System.Int32@)">
            <summary>
            Unpacks a byte array into the components of an ObjectId.
            </summary>
            <param name="bytes">A byte array.</param>
            <param name="timestamp">The timestamp.</param>
            <param name="machine">The machine hash.</param>
            <param name="pid">The PID.</param>
            <param name="increment">The increment.</param>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.GetCurrentProcessId">
            <summary>
            Gets the current process id.  This method exists because of how CAS operates on the call stack, checking
            for permissions before executing the method.  Hence, if we inlined this call, the calling method would not execute
            before throwing an exception requiring the try/catch at an even higher level that we don't necessarily control.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.CompareTo(MongoDB.Bson.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="other">The other ObjectId.</param>
            <returns>A 32-bit signed integer that indicates whether this ObjectId is less than, equal to, or greather than the other.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.Equals(MongoDB.Bson.ObjectId)">
            <summary>
            Compares this ObjectId to another ObjectId.
            </summary>
            <param name="rhs">The other ObjectId.</param>
            <returns>True if the two ObjectIds are equal.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.Equals(System.Object)">
            <summary>
            Compares this ObjectId to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other object is an ObjectId and equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.ToByteArray">
            <summary>
            Converts the ObjectId to a byte array.
            </summary>
            <returns>A byte array.</returns>
        </member>
        <member name="M:MongoDB.Bson.ObjectId.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.Empty">
            <summary>
            Gets an instance of ObjectId where the value is empty.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.Timestamp">
            <summary>
            Gets the timestamp.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.Machine">
            <summary>
            Gets the machine.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.Pid">
            <summary>
            Gets the PID.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.Increment">
            <summary>
            Gets the increment.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.ObjectId.CreationTime">
            <summary>
            Gets the creation time (derived from the timestamp).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.RawBsonArray">
            <summary>
            Represents an immutable BSON array that is represented using only the raw bytes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.#ctor(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.RawBsonArray"/> class.
            </summary>
            <param name="slice">The slice.</param>
            <exception cref="T:System.ArgumentNullException">slice</exception>
            <exception cref="T:System.ArgumentException">RawBsonArray cannot be used with an IByteBuffer that needs disposing.</exception>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Add(MongoDB.Bson.BsonValue)">
            <summary>
            Adds an element to the array.
            </summary>
            <param name="value">The value to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.ObjectId})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.AddRange(System.Collections.IEnumerable)">
            <summary>
            Adds multiple elements to the array.
            </summary>
            <param name="values">A list of values to add to the array.</param>
            <returns>The array (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Clone">
            <summary>
            Creates a shallow clone of the array (see also DeepClone).
            </summary>
            <returns>A shallow clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Clear">
            <summary>
            Clears the array.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Contains(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the array contains a value.
            </summary>
            <param name="value">The value to test for.</param>
            <returns>True if the array contains the value.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.CopyTo(MongoDB.Bson.BsonValue[],System.Int32)">
            <summary>
            Copies elements from this array to another array.
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies elements from this array to another array as raw values (see BsonValue.RawValue).
            </summary>
            <param name="array">The other array.</param>
            <param name="arrayIndex">The zero based index of the other array at which to start copying.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.DeepClone">
            <summary>
            Creates a deep clone of the array (see also Clone).
            </summary>
            <returns>A deep clone of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.GetEnumerator">
            <summary>
            Gets an enumerator that can enumerate the elements of the array.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.IndexOf(MongoDB.Bson.BsonValue)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.IndexOf(MongoDB.Bson.BsonValue,System.Int32,System.Int32)">
            <summary>
            Gets the index of a value in the array.
            </summary>
            <param name="value">The value to search for.</param>
            <param name="index">The zero based index at which to start the search.</param>
            <param name="count">The number of elements to search.</param>
            <returns>The zero based index of the value (or -1 if not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Insert(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Inserts a new value into the array.
            </summary>
            <param name="index">The zero based index at which to insert the new value.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Remove(MongoDB.Bson.BsonValue)">
            <summary>
            Removes the first occurrence of a value from the array.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>True if the value was removed.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.RemoveAt(System.Int32)">
            <summary>
            Removes an element from the array.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.ToArray">
            <summary>
            Converts the BsonArray to an array of BsonValues.
            </summary>
            <returns>An array of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.ToList">
            <summary>
            Converts the BsonArray to a list of BsonValues.
            </summary>
            <returns>A list of BsonValues.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.ToString">
            <summary>
            Returns a string representation of the array.
            </summary>
            <returns>A string representation of the array.</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonArray.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.Capacity">
            <summary>
            Gets or sets the total number of elements the internal data structure can hold without resizing.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.Count">
            <summary>
            Gets the count of array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.IsReadOnly">
            <summary>
            Gets whether the array is read-only.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.RawValues">
            <summary>
            Gets the array elements as raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.Slice">
            <summary>
            Gets the slice.
            </summary>
            <value>
            The slice.
            </value>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.Values">
            <summary>
            Gets the array elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonArray.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Bson.RawBsonDocument">
            <summary>
            Represents an immutable BSON document that is represented using only the raw bytes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.#ctor(MongoDB.Bson.IO.IByteBuffer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.RawBsonDocument"/> class.
            </summary>
            <param name="slice">The slice.</param>
            <exception cref="T:System.ArgumentNullException">slice</exception>
            <exception cref="T:System.ArgumentException">RawBsonDocument cannot be used with an IByteBuffer that needs disposing.</exception>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.RawBsonDocument"/> class.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(MongoDB.Bson.BsonElement)">
            <summary>
            Adds an element to the document.
            </summary>
            <param name="element">The element to add.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="keys">Which keys of the hash table to add.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(MongoDB.Bson.BsonElement[])">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates and adds an element to the document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Add(System.String,MongoDB.Bson.BsonValue,System.Boolean)">
            <summary>
            Creates and adds an element to the document, but only if the condition is true.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <param name="condition">Whether to add the element to the document.</param>
            <returns>The document (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.AddRange(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.AddRange(System.Collections.IDictionary)">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Adds a list of elements to the document.
            </summary>
            <param name="elements">The list of elements.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds elements to the document from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Clear">
            <summary>
            Clears the document (removes all elements).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Clone">
            <summary>
            Creates a shallow clone of the document (see also DeepClone).
            </summary>
            <returns>
            A shallow clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Contains(System.String)">
            <summary>
            Tests whether the document contains an element with the specified name.
            </summary>
            <param name="name">The name of the element to look for.</param>
            <returns>
            True if the document contains an element with the specified name.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.ContainsValue(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether the document contains an element with the specified value.
            </summary>
            <param name="value">The value of the element to look for.</param>
            <returns>
            True if the document contains an element with the specified value.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.DeepClone">
            <summary>
            Creates a deep clone of the document (see also Clone).
            </summary>
            <returns>
            A deep clone of the document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetElement(System.Int32)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>
            The element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetElement(System.String)">
            <summary>
            Gets an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>
            A BsonElement.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetEnumerator">
            <summary>
            Gets an enumerator that can be used to enumerate the elements of this document.
            </summary>
            <returns>
            An enumerator.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetValue(System.Int32)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="index">The zero based index of the element.</param>
            <returns>
            The value of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetValue(System.String)">
            <summary>
            Gets the value of an element.
            </summary>
            <param name="name">The name of the element.</param>
            <returns>
            The value of the element.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.GetValue(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value returned if the element is not found.</param>
            <returns>
            The value of the element or the default value if the element is not found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.InsertAt(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Inserts a new element at a specified position.
            </summary>
            <param name="index">The position of the new element.</param>
            <param name="element">The element.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Merge(MongoDB.Bson.BsonDocument)">
            <summary>
            Merges another document into this one. Existing elements are not overwritten.
            </summary>
            <param name="document">The other document.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Merge(MongoDB.Bson.BsonDocument,System.Boolean)">
            <summary>
            Merges another document into this one, specifying whether existing elements are overwritten.
            </summary>
            <param name="document">The other document.</param>
            <param name="overwriteExistingElements">Whether to overwrite existing elements.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Remove(System.String)">
            <summary>
            Removes an element from this document (if duplicate element names are allowed
            then all elements with this name will be removed).
            </summary>
            <param name="name">The name of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.RemoveAt(System.Int32)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="index">The zero based index of the element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.RemoveElement(MongoDB.Bson.BsonElement)">
            <summary>
            Removes an element from this document.
            </summary>
            <param name="element">The element to remove.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Set(System.Int32,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element.
            </summary>
            <param name="index">The zero based index of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Set(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of an element (an element will be added if no element with this name is found).
            </summary>
            <param name="name">The name of the element whose value is to be set.</param>
            <param name="value">The new value.</param>
            <returns>
            The document (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.SetElement(MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replaces any existing element with the same name or adds a new element if an element with the same name is not found).
            </summary>
            <param name="element">The new element.</param>
            <returns>
            The document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.SetElement(System.Int32,MongoDB.Bson.BsonElement)">
            <summary>
            Sets an element of the document (replacing the existing element at that position).
            </summary>
            <param name="index">The zero based index of the element to replace.</param>
            <param name="element">The new element.</param>
            <returns>
            The document.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.TryGetElement(System.String,MongoDB.Bson.BsonElement@)">
            <summary>
            Tries to get an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="element">The element.</param>
            <returns>
            True if an element with that name was found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.TryGetValue(System.String,MongoDB.Bson.BsonValue@)">
            <summary>
            Tries to get the value of an element of this document.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="value">The value of the element.</param>
            <returns>
            True if an element with that name was found.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:MongoDB.Bson.RawBsonDocument.ThrowIfDisposed">
            <summary>
            Throws if disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">RawBsonDocument</exception>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.ElementCount">
            <summary>
            Gets the number of elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Elements">
            <summary>
            Gets the elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Names">
            <summary>
            Gets the element names.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.RawValues">
            <summary>
            Gets the raw values (see BsonValue.RawValue).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Slice">
            <summary>
            Gets the slice.
            </summary>
            <value>
            The slice.
            </value>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Values">
            <summary>
            Gets the values.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Item(System.Int32)">
            <summary>
            Gets or sets a value by position.
            </summary>
            <param name="index">The position.</param>
            <returns>The value.</returns>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Item(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Gets the value of an element or a default value if the element is not found.
            </summary>
            <param name="name">The name of the element.</param>
            <param name="defaultValue">The default value to return if the element is not found.</param>
            <returns>Teh value of the element or a default value if the element is not found.</returns>
        </member>
        <member name="P:MongoDB.Bson.RawBsonDocument.Item(System.String)">
            <summary>
            Gets or sets a value by name.
            </summary>
            <param name="name">The name.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute">
            <summary>
            Specifies that this constructor should be used for creator-based deserialization.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonCreatorMapAttribute">
            <summary>
            Represents an attribute used to modify a creator map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonCreatorMapAttribute.Apply(MongoDB.Bson.Serialization.BsonCreatorMap)">
            <summary>
            Applies the attribute to the creator map.
            </summary>
            <param name="creatorMap">The creator map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonConstructorAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the BsonConstructorAttribute class.
            </summary>
            <param name="argumentNames">The names of the members that the creator argument values come from.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute.Apply(MongoDB.Bson.Serialization.BsonCreatorMap)">
            <summary>
            Applies a modification to the creator map.
            </summary>
            <param name="creatorMap">The creator map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonConstructorAttribute.ArgumentNames">
            <summary>
            Gets the names of the members that the creator arguments values come from.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute">
            <summary>
            Specifies serialization options for a DateTime field or property.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute">
            <summary>
            Abstract base class for serialization options attributes.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonMemberMapAttribute">
            <summary>
            Represents an attribute used to modify a member map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonMemberMapAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies the attribute to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonSerializationOptionsAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializationOptionsAttribute.Apply(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Reconfigures the specified serializer by applying this attribute to it.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A reconfigured serializer.</returns>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonDateTimeOptionsAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute.Apply(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Reconfigures the specified serializer by applying this attribute to it.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute.DateOnly">
            <summary>
            Gets or sets whether the DateTime consists of a Date only.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute.Kind">
            <summary>
            Gets or sets the DateTimeKind (Local, Unspecified or Utc).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDateTimeOptionsAttribute.Representation">
            <summary>
            Gets or sets the external representation.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute">
            <summary>
            Specifies the default value for a field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the BsonDefaultValueAttribute class.
            </summary>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute.SerializeDefaultValue">
            <summary>
            Gets or sets whether to serialize the default value.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute">
            <summary>
            Specifies serialization options for a Dictionary field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonDictionaryOptionsAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Initializes a new instance of the BsonDictionaryOptionsAttribute class.
            </summary>
            <param name="representation">The representation to use for the Dictionary.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute.Apply(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Reconfigures the specified serializer by applying this attribute to it.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDictionaryOptionsAttribute.Representation">
            <summary>
            Gets or sets the external representation.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute">
            <summary>
            Specifies the discriminator and related options for a class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonClassMapAttribute">
            <summary>
            Represents an attribute used to modify a class map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonClassMapAttribute.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies the attribute to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonDiscriminatorAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonDiscriminatorAttribute class.
            </summary>
            <param name="discriminator">The discriminator.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.Discriminator">
            <summary>
            Gets the discriminator.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.Required">
            <summary>
            Gets or sets whether the discriminator is required.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonDiscriminatorAttribute.RootClass">
            <summary>
            Gets or sets whether this is a root class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute">
            <summary>
            Specifies the element name and related options for a field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonElementAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the BsonElementAttribute class.
            </summary>
            <param name="elementName">The name of the element.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.ElementName">
            <summary>
            Gets the element name.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.Order">
            <summary>
            Gets the element serialization order.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute">
            <summary>
            Indicates that this property or field will be used to hold any extra elements found during deserialization.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonExtraElementsAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute">
            <summary>
            Specifies that this factory method should be used for creator-based deserialization.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonFactoryMethodAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the BsonFactoryMethodAttribute class.
            </summary>
            <param name="argumentNames">The names of the members that the creator argument values come from.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute.Apply(MongoDB.Bson.Serialization.BsonCreatorMap)">
            <summary>
            Applies a modification to the creator map.
            </summary>
            <param name="creatorMap">The creator map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonFactoryMethodAttribute.ArgumentNames">
            <summary>
            Gets the names of the members that the creator arguments values come from.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonIdAttribute">
            <summary>
            Specifies that this is the Id field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonIdAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.IdGenerator">
            <summary>
            Gets or sets the Id generator for the Id.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.Order">
            <summary>
            Gets or sets the Id element serialization order.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute">
            <summary>
            Indicates that this field or property should be ignored when this class is serialized.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute">
            <summary>
            Specifies whether extra elements should be ignored when this class is deserialized.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonIgnoreExtraElementsAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BsonIgnoreExtraElementsAttribute class.
            </summary>
            <param name="ignoreExtraElements">Whether extra elements should be ignored when this class is deserialized.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.IgnoreExtraElements">
            <summary>
            Gets whether extra elements should be ignored when this class is deserialized.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIgnoreExtraElementsAttribute.Inherited">
            <summary>
            Gets whether extra elements should also be ignored when any class derived from this one is deserialized.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute">
            <summary>
            Indicates whether a field or property equal to the default value should be ignored when serializing this class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonIgnoreIfDefaultAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BsonIgnoreIfDefaultAttribute class.
            </summary>
            <param name="value">Whether a field or property equal to the default value should be ignored when serializing this class.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute.Value">
            <summary>
            Gets whether a field or property equal to the default value should be ignored when serializing this class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute">
            <summary>
            Indicates whether a field or property equal to null should be ignored when serializing this class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonIgnoreIfNullAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the BsonIgnoreIfNullAttribute class.
            </summary>
            <param name="value">Whether a field or property equal to null should be ignored when serializing this class.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfNullAttribute.Value">
            <summary>
            Gets whether a field or property equal to null should be ignored when serializing this class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute">
            <summary>
            Specifies the known types for this class (the derived classes).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute.#ctor(System.Type[])">
            <summary>
            Initializes a new instance of the BsonKnownTypesAttribute class.
            </summary>
            <param name="knownTypes">One or more known types.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the BsonKnownTypesAttribute class.
            </summary>
            <param name="knownType">A known types.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonKnownTypesAttribute.KnownTypes">
            <summary>
            Gets a list of the known types.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute">
            <summary>
            Indicates the usage restrictions for the attribute.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMapAttributeUsageAttribute.AllowMultipleMembers">
            <summary>
            Gets or sets a value indicating whether the attribute this attribute applies to is allowed to be applied
            to more than one member.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute">
            <summary>
            Specifies that the class's IdMember should be null.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonPostProcessingAttribute">
            <summary>
            Represents an attribute used to post process a class map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonPostProcessingAttribute.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies the post processing attribute to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonNoIdAttribute.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies the post processing attribute to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute">
            <summary>
            Specifies the external representation and related options for this field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the BsonRepresentationAttribute class.
            </summary>
            <param name="representation">The external representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.Apply(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Reconfigures the specified serializer by applying this attribute to it.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.Representation">
            <summary>
            Gets the external representation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.AllowOverflow">
            <summary>
            Gets or sets whether to allow overflow.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonRepresentationAttribute.AllowTruncation">
            <summary>
            Gets or sets whether to allow truncation.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute">
            <summary>
            Indicates that a field or property is required.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonRequiredAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute">
            <summary>
            Specifies the type of the serializer to use for a class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute.#ctor">
            <summary>
            Initializes a new instance of the BsonSerializerAttribute class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the BsonSerializerAttribute class.
            </summary>
            <param name="serializerType">The type of the serializer to use for a class.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute.CreateSerializer(System.Type)">
            <summary>
            Creates a serializer for a type based on the serializer type specified by the attribute.
            </summary>
            <param name="type">The type that a serializer should be created for.</param>
            <returns>A serializer for the type.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonSerializerAttribute.SerializerType">
            <summary>
            Gets or sets the type of the serializer to use for a class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute">
            <summary>
            Specifies the external representation and related options for this field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the BsonTimeSpanOptionsAttribute class.
            </summary>
            <param name="representation">The external representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.TimeSpanUnits)">
            <summary>
            Initializes a new instance of the BsonTimeSpanOptionsAttribute class.
            </summary>
            <param name="representation">The external representation.</param>
            <param name="units">The TimeSpanUnits.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute.Apply(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Reconfigures the specified serializer by applying this attribute to it.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>A reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute.Representation">
            <summary>
            Gets the external representation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Attributes.BsonTimeSpanOptionsAttribute.Units">
            <summary>
            Gets or sets the TimeSpanUnits.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonClassMap">
            <summary>
            Represents a mapping between a class and a BSON document.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the BsonClassMap class.
            </summary>
            <param name="classType">The class type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.GetMemberInfoType(System.Reflection.MemberInfo)">
            <summary>
            Gets the type of a member.
            </summary>
            <param name="memberInfo">The member info.</param>
            <returns>The type of the member.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.GetRegisteredClassMaps">
            <summary>
            Gets all registered class maps.
            </summary>
            <returns>All registered class maps.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.IsClassMapRegistered(System.Type)">
            <summary>
            Checks whether a class map is registered for a type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if there is a class map registered for the type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.LookupClassMap(System.Type)">
            <summary>
            Looks up a class map (will AutoMap the class if no class map is registered).
            </summary>
            <param name="classType">The class type.</param>
            <returns>The class map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.RegisterClassMap``1">
            <summary>
            Creates and registers a class map.
            </summary>
            <typeparam name="TClass">The class.</typeparam>
            <returns>The class map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.RegisterClassMap``1(System.Action{MongoDB.Bson.Serialization.BsonClassMap{``0}})">
            <summary>
            Creates and registers a class map.
            </summary>
            <typeparam name="TClass">The class.</typeparam>
            <param name="classMapInitializer">The class map initializer.</param>
            <returns>The class map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.RegisterClassMap(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Registers a class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.AutoMap">
            <summary>
            Automaps the class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.CreateInstance">
            <summary>
            Creates an instance of the class.
            </summary>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.Freeze">
            <summary>
            Freezes the class map.
            </summary>
            <returns>The frozen class map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.GetMemberMap(System.String)">
            <summary>
            Gets a member map (only considers members declared in this class).
            </summary>
            <param name="memberName">The member name.</param>
            <returns>The member map (or null if the member was not found).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.GetMemberMapForElement(System.String)">
            <summary>
            Gets the member map for a BSON element.
            </summary>
            <param name="elementName">The name of the element.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapConstructor(System.Reflection.ConstructorInfo)">
            <summary>
            Creates a creator map for a constructor and adds it to the class map.
            </summary>
            <param name="constructorInfo">The constructor info.</param>
            <returns>The creator map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapConstructor(System.Reflection.ConstructorInfo,System.String[])">
            <summary>
            Creates a creator map for a constructor and adds it to the class map.
            </summary>
            <param name="constructorInfo">The constructor info.</param>
            <param name="argumentNames">The argument names.</param>
            <returns>The creator map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapCreator(System.Delegate)">
            <summary>
            Creates a creator map and adds it to the class.
            </summary>
            <param name="delegate">The delegate.</param>
            <returns>The factory method map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapCreator(System.Delegate,System.String[])">
            <summary>
            Creates a creator map and adds it to the class.
            </summary>
            <param name="delegate">The delegate.</param>
            <param name="argumentNames">The argument names.</param>
            <returns>The factory method map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapExtraElementsField(System.String)">
            <summary>
            Creates a member map for the extra elements field and adds it to the class map.
            </summary>
            <param name="fieldName">The name of the extra elements field.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapExtraElementsMember(System.Reflection.MemberInfo)">
            <summary>
            Creates a member map for the extra elements member and adds it to the class map.
            </summary>
            <param name="memberInfo">The member info for the extra elements member.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapExtraElementsProperty(System.String)">
            <summary>
            Creates a member map for the extra elements property and adds it to the class map.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapFactoryMethod(System.Reflection.MethodInfo)">
            <summary>
            Creates a creator map for a factory method and adds it to the class.
            </summary>
            <param name="methodInfo">The method info.</param>
            <returns>The creator map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapFactoryMethod(System.Reflection.MethodInfo,System.String[])">
            <summary>
            Creates a creator map for a factory method and adds it to the class.
            </summary>
            <param name="methodInfo">The method info.</param>
            <param name="argumentNames">The argument names.</param>
            <returns>The creator map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapField(System.String)">
            <summary>
            Creates a member map for a field and adds it to the class map.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapIdField(System.String)">
            <summary>
            Creates a member map for the Id field and adds it to the class map.
            </summary>
            <param name="fieldName">The name of the Id field.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapIdMember(System.Reflection.MemberInfo)">
            <summary>
            Creates a member map for the Id member and adds it to the class map.
            </summary>
            <param name="memberInfo">The member info for the Id member.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapIdProperty(System.String)">
            <summary>
            Creates a member map for the Id property and adds it to the class map.
            </summary>
            <param name="propertyName">The name of the Id property.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapMember(System.Reflection.MemberInfo)">
            <summary>
            Creates a member map for a member and adds it to the class map.
            </summary>
            <param name="memberInfo">The member info.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.MapProperty(System.String)">
            <summary>
            Creates a member map for a property and adds it to the class map.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <returns>The member map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.Reset">
            <summary>
            Resets the class map back to its initial state.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetCreator(System.Func{System.Object})">
            <summary>
            Sets the creator for the object.
            </summary>
            <param name="creator">The creator.</param>
            <returns>The class map (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetDiscriminator(System.String)">
            <summary>
            Sets the discriminator.
            </summary>
            <param name="discriminator">The discriminator.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetDiscriminatorIsRequired(System.Boolean)">
            <summary>
            Sets whether a discriminator is required when serializing this class.
            </summary>
            <param name="discriminatorIsRequired">Whether a discriminator is required.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetExtraElementsMember(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Sets the member map of the member used to hold extra elements.
            </summary>
            <param name="memberMap">The extra elements member map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.AddKnownType(System.Type)">
            <summary>
            Adds a known type to the class map.
            </summary>
            <param name="type">The known type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetIdMember(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Sets the Id member.
            </summary>
            <param name="memberMap">The Id member (null if none).</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetIgnoreExtraElements(System.Boolean)">
            <summary>
            Sets whether extra elements should be ignored when deserializing.
            </summary>
            <param name="ignoreExtraElements">Whether extra elements should be ignored when deserializing.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetIgnoreExtraElementsIsInherited(System.Boolean)">
            <summary>
            Sets whether the IgnoreExtraElements value should be inherited by derived classes.
            </summary>
            <param name="ignoreExtraElementsIsInherited">Whether the IgnoreExtraElements value should be inherited by derived classes.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.SetIsRootClass(System.Boolean)">
            <summary>
            Sets whether this class is a root class.
            </summary>
            <param name="isRootClass">Whether this class is a root class.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.UnmapConstructor(System.Reflection.ConstructorInfo)">
            <summary>
            Removes a creator map for a constructor from the class map.
            </summary>
            <param name="constructorInfo">The constructor info.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.UnmapFactoryMethod(System.Reflection.MethodInfo)">
            <summary>
            Removes a creator map for a factory method from the class map.
            </summary>
            <param name="methodInfo">The method info.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.UnmapField(System.String)">
            <summary>
            Removes the member map for a field from the class map.
            </summary>
            <param name="fieldName">The name of the field.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.UnmapMember(System.Reflection.MemberInfo)">
            <summary>
            Removes a member map from the class map.
            </summary>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.UnmapProperty(System.String)">
            <summary>
            Removes the member map for a property from the class map.
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap.GetDiscriminatorConvention">
            <summary>
            Gets the discriminator convention for the class.
            </summary>
            <returns>The discriminator convention for the class.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.AllMemberMaps">
            <summary>
            Gets all the member maps (including maps for inherited members).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.BaseClassMap">
            <summary>
            Gets the base class map.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.ClassType">
            <summary>
            Gets the class type.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.CreatorMaps">
            <summary>
            Gets the constructor maps.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.ConventionPack">
            <summary>
            Gets the conventions used for auto mapping.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.DeclaredMemberMaps">
            <summary>
            Gets the declared member maps (only for members declared in this class).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.Discriminator">
            <summary>
            Gets the discriminator.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.DiscriminatorIsRequired">
            <summary>
            Gets whether a discriminator is required when serializing this class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.ExtraElementsMemberMap">
            <summary>
            Gets the member map of the member used to hold extra elements.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.HasCreatorMaps">
            <summary>
            Gets whether this class map has any creator maps.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.HasRootClass">
            <summary>
            Gets whether this class has a root class ancestor.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IdMemberMap">
            <summary>
            Gets the Id member map (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IgnoreExtraElements">
            <summary>
            Gets whether extra elements should be ignored when deserializing.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IgnoreExtraElementsIsInherited">
            <summary>
            Gets whether the IgnoreExtraElements value should be inherited by derived classes.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IsAnonymous">
            <summary>
            Gets whether this class is anonymous.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IsFrozen">
            <summary>
            Gets whether the class map is frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.IsRootClass">
            <summary>
            Gets whether this class is a root class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.KnownTypes">
            <summary>
            Gets the known types of this class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.ElementTrie">
            <summary>
            Gets the element name to member index trie.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMap.ExtraElementsMemberMapIndex">
            <summary>
            Gets the member index of the member used to hold extra elements.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonClassMap`1">
            <summary>
            Represents a mapping between a class and a BSON document.
            </summary>
            <typeparam name="TClass">The class.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.#ctor">
            <summary>
            Initializes a new instance of the BsonClassMap class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.#ctor(System.Action{MongoDB.Bson.Serialization.BsonClassMap{`0}})">
            <summary>
            Initializes a new instance of the BsonClassMap class.
            </summary>
            <param name="classMapInitializer">The class map initializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.CreateInstance">
            <summary>
            Creates an instance.
            </summary>
            <returns>An instance.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.GetMemberMap``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Gets a member map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberLambda">A lambda expression specifying the member.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapCreator(System.Linq.Expressions.Expression{System.Func{`0,`0}})">
            <summary>
            Creates a creator map and adds it to the class map.
            </summary>
            <param name="creatorLambda">Lambda expression specifying the creator code and parameters to use.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapExtraElementsField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the extra elements field and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="fieldLambda">A lambda expression specifying the extra elements field.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapExtraElementsMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the extra elements member and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberLambda">A lambda expression specifying the extra elements member.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapExtraElementsProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the extra elements property and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="propertyLambda">A lambda expression specifying the extra elements property.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for a field and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="fieldLambda">A lambda expression specifying the field.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapIdField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the Id field and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="fieldLambda">A lambda expression specifying the Id field.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapIdMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the Id member and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberLambda">A lambda expression specifying the Id member.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapIdProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the Id property and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="propertyLambda">A lambda expression specifying the Id property.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberLambda">A lambda expression specifying the member.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.MapProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Creates a member map for the Id property and adds it to the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="propertyLambda">A lambda expression specifying the Id property.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.UnmapField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Removes the member map for a field from the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="fieldLambda">A lambda expression specifying the field.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.UnmapMember``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Removes a member map from the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberLambda">A lambda expression specifying the member.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMap`1.UnmapProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Removes a member map for a property from the class map.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="propertyLambda">A lambda expression specifying the property.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonClassMapSerializationProvider">
            <summary>
            Represents the class map serialization provider.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonSerializationProvider">
            <summary>
            An interface implemented by serialization providers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonSerializationProvider.GetSerializer(System.Type)">
            <summary>
            Gets a serializer for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>A serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializationProvider.GetSerializer(System.Type)">
            <summary>
            Gets the serializer for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonCreatorMap">
            <summary>
            Represents a mapping to a delegate and its arguments.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonCreatorMap.#ctor(MongoDB.Bson.Serialization.BsonClassMap,System.Reflection.MemberInfo,System.Delegate)">
            <summary>
            Initializes a new instance of the BsonCreatorMap class.
            </summary>
            <param name="classMap">The class map.</param>
            <param name="memberInfo">The member info (null if none).</param>
            <param name="delegate">The delegate.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonCreatorMap.Freeze">
            <summary>
            Freezes the creator map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonCreatorMap.HasDefaultValue(System.String)">
            <summary>
            Gets whether there is a default value for a missing element.
            </summary>
            <param name="elementName">The element name.</param>
            <returns>True if there is a default value for element name; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonCreatorMap.SetArguments(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo})">
            <summary>
            Sets the arguments for the creator map.
            </summary>
            <param name="arguments">The arguments.</param>
            <returns>The creator map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonCreatorMap.SetArguments(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the arguments for the creator map.
            </summary>
            <param name="argumentNames">The argument names.</param>
            <returns>The creator map.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonCreatorMap.Arguments">
            <summary>
            Gets the arguments.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonCreatorMap.ClassMap">
            <summary>
            Gets the class map that this creator map belongs to.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonCreatorMap.Delegate">
            <summary>
            Gets the delegeate
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonCreatorMap.ElementNames">
            <summary>
            Gets the element names.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonCreatorMap.MemberInfo">
            <summary>
            Gets the member info (null if none).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonDefaultSerializationProvider">
            <summary>
            Represents the default serialization provider.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDefaultSerializationProvider.#ctor">
            <summary>
            Initializes a new instance of the BsonDefaultSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDefaultSerializationProvider.GetSerializer(System.Type)">
            <summary>
            Gets the serializer for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>The serializer.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonDeserializationContext">
            <summary>
            Represents all the contextual information needed by a serializer to deserialize a value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.CreateRoot``1(MongoDB.Bson.IO.BsonReader,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a root context.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="reader">The reader.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A root context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.CreateRoot(MongoDB.Bson.IO.BsonReader,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a root context.
            </summary>
            <param name="reader">The reader.</param>
            <param name="nominalType">The nominal type.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A root context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.CreateChild``1(System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a child context.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="configurator">The configurator.</param>
            <returns>
            A child context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.CreateChild(System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a child context.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A child context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.DeserializeWithChildContext``1(MongoDB.Bson.Serialization.IBsonSerializer{``0},System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a child context and calls the Deserialize method of the serializer with it.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            The deserialized value.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.DeserializeWithChildContext(MongoDB.Bson.Serialization.IBsonSerializer,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Creates a child context and calls the Deserialize method of the serializer with it.
            </summary>
            <param name="serializer">The serializer.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            The deserialized value.
            </returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.AllowDuplicateElementNames">
            <summary>
            Gets a value indicating whether to allow duplicate element names.
            </summary>
            <value>
            <c>true</c> if duplicate element names shoud be allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.DynamicArraySerializer">
            <summary>
            Gets the dynamic array serializer.
            </summary>
            <value>
            The dynamic array serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.DynamicDocumentSerializer">
            <summary>
            Gets the dynamic document serializer.
            </summary>
            <value>
            The dynamic document serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.NominalType">
            <summary>
            Gets the nominal type.
            </summary>
            <value>
            The nominal type.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Parent">
            <summary>
            Gets the parent context.
            </summary>
            <value>
            The parent context. The parent of the root context is null.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Reader">
            <summary>
            Gets the reader.
            </summary>
            <value>
            The reader.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder">
            <summary>
            Represents a builder for a BsonDeserializationContext.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.Build">
            <summary>
            Builds the BsonDeserializationContext instance.
            </summary>
            <returns>A BsonDeserializationContext.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.AllowDuplicateElementNames">
            <summary>
            Gets or sets a value indicating whether to allow duplicate element names.
            </summary>
            <value>
            <c>true</c> if duplicate element names should be allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.DynamicArraySerializer">
            <summary>
            Gets or sets the dynamic array serializer.
            </summary>
            <value>
            The dynamic array serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.DynamicDocumentSerializer">
            <summary>
            Gets or sets the dynamic document serializer.
            </summary>
            <value>
            The dynamic document serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.NominalType">
            <summary>
            Gets the nominal type.
            </summary>
            <value>
            The nominal type.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDeserializationContext.Builder.Reader">
            <summary>
            Gets the reader.
            </summary>
            <value>
            The reader.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonDocumentBackedClass">
            <summary>
            A class backed by a BsonDocument.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClass.#ctor(MongoDB.Bson.Serialization.IBsonDocumentSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.BsonDocumentBackedClass"/> class.
            </summary>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClass.#ctor(MongoDB.Bson.BsonDocument,MongoDB.Bson.Serialization.IBsonDocumentSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.BsonDocumentBackedClass"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClass.GetValue``1(System.String,``0)">
            <summary>
            Gets the value from the backing document.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="memberName">The member name.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClass.SetValue(System.String,System.Object)">
            <summary>
            Sets the value in the backing document.
            </summary>
            <param name="memberName">The member name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonDocumentBackedClass.BackingDocument">
            <summary>
            Gets the backing document.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonMemberMap">
            <summary>
            Represents the mapping between a field or property and a BSON element.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.#ctor(MongoDB.Bson.Serialization.BsonClassMap,System.Reflection.MemberInfo)">
            <summary>
            Initializes a new instance of the BsonMemberMap class.
            </summary>
            <param name="classMap">The class map this member map belongs to.</param>
            <param name="memberInfo">The member info.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.ApplyDefaultValue(System.Object)">
            <summary>
            Applies the default value to the member of an object.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.Freeze">
            <summary>
            Freezes this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.GetSerializer">
            <summary>
            Gets the serializer.
            </summary>
            <returns>The serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.Reset">
            <summary>
            Resets the member map back to its initial state.
            </summary>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetDefaultValue(System.Func{System.Object})">
            <summary>
            Sets the default value creator.
            </summary>
            <param name="defaultValueCreator">The default value creator (note: the supplied delegate must be thread safe).</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetDefaultValue(System.Object)">
            <summary>
            Sets the default value.
            </summary>
            <param name="defaultValue">The default value.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetElementName(System.String)">
            <summary>
            Sets the name of the element.
            </summary>
            <param name="elementName">The name of the element.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetIdGenerator(MongoDB.Bson.Serialization.IIdGenerator)">
            <summary>
            Sets the Id generator.
            </summary>
            <param name="idGenerator">The Id generator.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetIgnoreIfDefault(System.Boolean)">
            <summary>
            Sets whether default values should be ignored when serialized.
            </summary>
            <param name="ignoreIfDefault">Whether default values should be ignored when serialized.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetIgnoreIfNull(System.Boolean)">
            <summary>
            Sets whether null values should be ignored when serialized.
            </summary>
            <param name="ignoreIfNull">Wether null values should be ignored when serialized.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetIsRequired(System.Boolean)">
            <summary>
            Sets whether an element is required for this member when deserialized
            </summary>
            <param name="isRequired">Whether an element is required for this member when deserialized</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetOrder(System.Int32)">
            <summary>
            Sets the serialization order.
            </summary>
            <param name="order">The serialization order.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Sets the serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            The member map.
            </returns>
            <exception cref="T:System.ArgumentNullException">serializer</exception>
            <exception cref="T:System.ArgumentException">serializer</exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.SetShouldSerializeMethod(System.Func{System.Object,System.Boolean})">
            <summary>
            Sets the method that will be called to determine whether the member should be serialized.
            </summary>
            <param name="shouldSerializeMethod">The method.</param>
            <returns>The member map.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonMemberMap.ShouldSerialize(System.Object,System.Object)">
            <summary>
            Determines whether a value should be serialized
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
            <returns>True if the value should be serialized.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.ClassMap">
            <summary>
            Gets the class map that this member map belongs to.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.MemberName">
            <summary>
            Gets the name of the member.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.MemberType">
            <summary>
            Gets the type of the member.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.MemberTypeIsBsonValue">
            <summary>
            Gets whether the member type is a BsonValue.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.Order">
            <summary>
            Gets the serialization order.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.MemberInfo">
            <summary>
            Gets the member info.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.Getter">
            <summary>
            Gets the getter function.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.Setter">
            <summary>
            Gets the setter function.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IdGenerator">
            <summary>
            Gets the Id generator.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IsDefaultValueSpecified">
            <summary>
            Gets whether a default value was specified.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IsRequired">
            <summary>
            Gets whether an element is required for this member when deserialized.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.ShouldSerializeMethod">
            <summary>
            Gets the method that will be called to determine whether the member should be serialized.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IgnoreIfDefault">
            <summary>
            Gets whether default values should be ignored when serialized.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IgnoreIfNull">
            <summary>
            Gets whether null values should be ignored when serialized.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.DefaultValue">
            <summary>
            Gets the default value.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonMemberMap.IsReadOnly">
            <summary>
            Gets whether the member is readonly.
            </summary>
            <remarks>
            Readonly indicates that the member is written to the database, but not read from the database.
            </remarks>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonSerializationContext">
            <summary>
            Represents all the contextual information needed by a serializer to serialize a value.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.CreateRoot``1(MongoDB.Bson.IO.BsonWriter,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a root context.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="writer">The writer.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A root context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.CreateRoot(MongoDB.Bson.IO.BsonWriter,System.Type,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a root context.
            </summary>
            <param name="writer">The writer.</param>
            <param name="nominalType">The nominal type.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A root context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.CreateChild``1(System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a child context.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="configurator">The configurator.</param>
            <returns>
            A child context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.CreateChild(System.Type,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a child context.
            </summary>
            <param name="nominalType">The nominal typel.</param>
            <param name="configurator">The configurator.</param>
            <returns>
            A child context.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.SerializeWithChildContext``1(MongoDB.Bson.Serialization.IBsonSerializer{``0},``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a child context and calls the Serializer method of the serializer with it.
            </summary>
            <typeparam name="TNominalType">The nominal type.</typeparam>
            <param name="serializer">The serializer.</param>
            <param name="value">The value to serialize.</param>
            <param name="configurator">The configurator.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.SerializeWithChildContext(MongoDB.Bson.Serialization.IBsonSerializer,System.Object,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Creates a child context and calls the Serializer method of the serializer with it.
            </summary>
            <param name="serializer">The serializer.</param>
            <param name="value">The value to serialize.</param>
            <param name="configurator">The configurator.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.IsDynamicType">
            <summary>
            Gets a function that, when executed, will indicate whether the type 
            is a dynamic type.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.NominalType">
            <summary>
            Gets the nominal type.
            </summary>
            <value>
            The nominal type.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Parent">
            <summary>
            Gets the parent context.
            </summary>
            <value>
            The parent context. The parent of the root context is null.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.SerializeAsNominalType">
            <summary>
            Gets a value indicating whether to serialize the value as if it were an instance of the nominal type.
            </summary>
            <value>
              <c>true</c> if the value should be serialized as if it were an instance of the nominal type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.SerializeIdFirst">
            <summary>
            Gets a value indicating whether to serialize the id first.
            </summary>
            <value>
              <c>true</c> if the id should be serialized first; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Writer">
            <summary>
            Gets the writer.
            </summary>
            <value>
            The writer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonSerializationContext.Builder">
            <summary>
            Represents a builder for a BsonSerializationContext.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.Build">
            <summary>
            Builds the BsonSerializationContext instance.
            </summary>
            <returns>A BsonSerializationContext.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.IsDynamicType">
            <summary>
            Gets or sets the function used to determine if a type is a dynamic type.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.NominalType">
            <summary>
            Gets the nominal type.
            </summary>
            <value>
            The nominal type.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.Parent">
            <summary>
            Gets the parent.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.SerializeAsNominalType">
            <summary>
            Gets or sets a value indicating whether to serialize the value as if it were an instance of the nominal type.
            </summary>
            <value>
              <c>true</c> if the value should be serialized as if it were an instance of the nominal type; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.SerializeIdFirst">
            <summary>
            Gets or sets a value indicating whether to serialize the id first.
            </summary>
            <value>
              <c>true</c> if the id should be serialized first]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationContext.Builder.Writer">
            <summary>
            Gets the writer.
            </summary>
            <value>
            The writer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonSerializationInfo">
            <summary>
            Represents the information needed to serialize a member.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationInfo.#ctor(System.String,MongoDB.Bson.Serialization.IBsonSerializer,System.Type)">
            <summary>
            Initializes a new instance of the BsonSerializationInfo class.
            </summary>
            <param name="elementName">The element name.</param>
            <param name="serializer">The serializer.</param>
            <param name="nominalType">The nominal type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationInfo.DeserializeValue(MongoDB.Bson.BsonValue)">
            <summary>
            Deserializes the value.
            </summary>
            <param name="value">The value.</param>
            <returns>The deserialized value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationInfo.SerializeValue(System.Object)">
            <summary>
            Serializes the value.
            </summary>
            <param name="value">The value.</param>
            <returns>The serialized value.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializationInfo.SerializeValues(System.Collections.IEnumerable)">
            <summary>
            Serializes the values.
            </summary>
            <param name="values">The values.</param>
            <returns>The serialized values.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationInfo.ElementName">
            <summary>
            Gets or sets the dotted element name.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationInfo.Serializer">
            <summary>
            Gets or sets the serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializationInfo.NominalType">
            <summary>
            Gets or sets the nominal type.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonSerializer">
            <summary>
            A static class that represents the BSON serialization functionality.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(MongoDB.Bson.BsonDocument,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BsonDocument.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="document">The BsonDocument.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(MongoDB.Bson.IO.BsonReader,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes a value.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="bsonReader">The BsonReader.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(System.Byte[],System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BSON byte array.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="bytes">The BSON byte array.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(System.IO.Stream,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BSON Stream.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="stream">The BSON Stream.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(System.String,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a JSON string.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="json">The JSON string.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize``1(System.IO.TextReader,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a JSON TextReader.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="textReader">The JSON TextReader.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(MongoDB.Bson.BsonDocument,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BsonDocument.
            </summary>
            <param name="document">The BsonDocument.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>A TNominalType.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(MongoDB.Bson.IO.BsonReader,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes a value.
            </summary>
            <param name="bsonReader">The BsonReader.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(System.Byte[],System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BSON byte array.
            </summary>
            <param name="bytes">The BSON byte array.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(System.IO.Stream,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a BSON Stream.
            </summary>
            <param name="stream">The BSON Stream.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(System.String,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a JSON string.
            </summary>
            <param name="json">The JSON string.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Deserialize(System.IO.TextReader,System.Type,System.Action{MongoDB.Bson.Serialization.BsonDeserializationContext.Builder})">
            <summary>
            Deserializes an object from a JSON TextReader.
            </summary>
            <param name="textReader">The JSON TextReader.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="configurator">The configurator.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.IsTypeDiscriminated(System.Type)">
            <summary>
            Returns whether the given type has any discriminators registered for any of its subclasses.
            </summary>
            <param name="type">A Type.</param>
            <returns>True if the type is discriminated.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupActualType(System.Type,MongoDB.Bson.BsonValue)">
            <summary>
            Looks up the actual type of an object to be deserialized.
            </summary>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="discriminator">The discriminator.</param>
            <returns>The actual type of the object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupDiscriminatorConvention(System.Type)">
            <summary>
            Looks up the discriminator convention for a type.
            </summary>
            <param name="type">The type.</param>
            <returns>A discriminator convention.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupGenericSerializerDefinition(System.Type)">
            <summary>
            Looks up a generic serializer definition.
            </summary>
            <param name="genericTypeDefinition">The generic type.</param>
            <returns>A generic serializer definition.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupIdGenerator(System.Type)">
            <summary>
            Looks up an IdGenerator.
            </summary>
            <param name="type">The Id type.</param>
            <returns>An IdGenerator for the Id type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupSerializer``1">
            <summary>
            Looks up a serializer for a Type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <returns>A serializer for type T.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.LookupSerializer(System.Type)">
            <summary>
            Looks up a serializer for a Type.
            </summary>
            <param name="type">The Type.</param>
            <returns>A serializer for the Type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterDiscriminator(System.Type,MongoDB.Bson.BsonValue)">
            <summary>
            Registers the discriminator for a type.
            </summary>
            <param name="type">The type.</param>
            <param name="discriminator">The discriminator.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterDiscriminatorConvention(System.Type,MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention)">
            <summary>
            Registers the discriminator convention for a type.
            </summary>
            <param name="type">Type type.</param>
            <param name="convention">The discriminator convention.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterGenericSerializerDefinition(System.Type,System.Type)">
            <summary>
            Registers a generic serializer definition for a generic type.
            </summary>
            <param name="genericTypeDefinition">The generic type.</param>
            <param name="genericSerializerDefinition">The generic serializer definition.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterIdGenerator(System.Type,MongoDB.Bson.Serialization.IIdGenerator)">
            <summary>
            Registers an IdGenerator for an Id Type.
            </summary>
            <param name="type">The Id Type.</param>
            <param name="idGenerator">The IdGenerator for the Id Type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterSerializationProvider(MongoDB.Bson.Serialization.IBsonSerializationProvider)">
            <summary>
            Registers a serialization provider.
            </summary>
            <param name="provider">The serialization provider.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterSerializer``1(MongoDB.Bson.Serialization.IBsonSerializer{``0})">
            <summary>
            Registers a serializer for a type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.RegisterSerializer(System.Type,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Registers a serializer for a type.
            </summary>
            <param name="type">The type.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Serialize``1(MongoDB.Bson.IO.BsonWriter,``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes a value.
            </summary>
            <typeparam name="TNominalType">The nominal type of the object.</typeparam>
            <param name="bsonWriter">The BsonWriter.</param>
            <param name="value">The object.</param>
            <param name="configurator">The serialization context configurator.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonSerializer.Serialize(MongoDB.Bson.IO.BsonWriter,System.Type,System.Object,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext.Builder})">
            <summary>
            Serializes a value.
            </summary>
            <param name="bsonWriter">The BsonWriter.</param>
            <param name="nominalType">The nominal type of the object.</param>
            <param name="value">The object.</param>
            <param name="configurator">The serialization context configurator.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializer.UseNullIdChecker">
            <summary>
            Gets or sets whether to use the NullIdChecker on reference Id types that don't have an IdGenerator registered.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonSerializer.UseZeroIdChecker">
            <summary>
            Gets or sets whether to use the ZeroIdChecker on value Id types that don't have an IdGenerator registered.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.AttributeConventionPack">
            <summary>
            Convention pack for applying attributes.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IConventionPack">
            <summary>
            Represents a grouping of conventions.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.IConventionPack.Conventions">
            <summary>
            Gets the conventions.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.AttributeConventionPack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.AttributeConventionPack"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.AttributeConventionPack.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.AttributeConventionPack.Conventions">
            <summary>
            Gets the conventions.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ConventionBase">
            <summary>
            Base class for a convention.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IConvention">
            <summary>
            Represents a convention.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.IConvention.Name">
            <summary>
            Gets the name of the convention.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionBase.#ctor">
            <summary>
            Initializes a new instance of the ConventionBase class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionBase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ConventionBase class.
            </summary>
            <param name="name">The name of the convention.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.ConventionBase.Name">
            <summary>
            Gets the name of the convention.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IClassMapConvention">
            <summary>
            Represents a convention that applies to a BsonClassMap.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IClassMapConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention">
            <summary>
            Represents a convention that applies to a BsonCreatorMap.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ICreatorMapConvention.Apply(MongoDB.Bson.Serialization.BsonCreatorMap)">
            <summary>
            Applies a modification to the creator map.
            </summary>
            <param name="creatorMap">The creator map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IMemberMapConvention">
            <summary>
            Represents a convention that applies to a BsonMemberMap.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IMemberMapConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention">
            <summary>
            Represents a post processing convention that applies to a BsonClassMap.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IPostProcessingConvention.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a post processing modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention">
            <summary>
            A convention that sets the element name the same as the member name with the first character lower cased.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.CamelCaseElementNameConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ConventionPack">
            <summary>
            A mutable pack of conventions.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ConventionPack"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.Add(MongoDB.Bson.Serialization.Conventions.IConvention)">
            <summary>
            Adds the specified convention.
            </summary>
            <param name="convention">The convention.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.AddClassMapConvention(System.String,System.Action{MongoDB.Bson.Serialization.BsonClassMap})">
            <summary>
            Adds a class map convention created using the specified action upon a class map.
            </summary>
            <param name="name">The name of the convention.</param>
            <param name="action">The action the convention should take upon the class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.AddMemberMapConvention(System.String,System.Action{MongoDB.Bson.Serialization.BsonMemberMap})">
            <summary>
            Adds a member map convention created using the specified action upon a member map.
            </summary>
            <param name="name">The name of the convention.</param>
            <param name="action">The action the convention should take upon the member map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.AddPostProcessingConvention(System.String,System.Action{MongoDB.Bson.Serialization.BsonClassMap})">
            <summary>
            Adds a post processing convention created using the specified action upon a class map.
            </summary>
            <param name="name">The name of the convention.</param>
            <param name="action">The action the convention should take upon the class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.AddRange(System.Collections.Generic.IEnumerable{MongoDB.Bson.Serialization.Conventions.IConvention})">
            <summary>
            Adds a range of conventions.
            </summary>
            <param name="conventions">The conventions.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.Append(MongoDB.Bson.Serialization.Conventions.IConventionPack)">
            <summary>
            Appends the conventions in another pack to the end of this pack.
            </summary>
            <param name="other">The other pack.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.GetEnumerator">
            <summary>
            Gets an enumerator for the conventions.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.InsertAfter(System.String,MongoDB.Bson.Serialization.Conventions.IConvention)">
            <summary>
            Inserts the convention after another convention specified by the name.
            </summary>
            <param name="name">The name.</param>
            <param name="convention">The convention.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.InsertBefore(System.String,MongoDB.Bson.Serialization.Conventions.IConvention)">
            <summary>
            Inserts the convention before another convention specified by the name.
            </summary>
            <param name="name">The name.</param>
            <param name="convention">The convention.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionPack.Remove(System.String)">
            <summary>
            Removes the named convention.
            </summary>
            <param name="name">The name of the convention.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.ConventionPack.Conventions">
            <summary>
            Gets the conventions.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ConventionRegistry">
            <summary>
            Represents a registry of conventions.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionRegistry.Lookup(System.Type)">
            <summary>
            Looks up the effective set of conventions that apply to a type.
            </summary>
            <param name="type">The type.</param>
            <returns>The conventions for that type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionRegistry.Register(System.String,MongoDB.Bson.Serialization.Conventions.IConventionPack,System.Func{System.Type,System.Boolean})">
            <summary>
            Registers the conventions.
            </summary>
            <param name="name">The name.</param>
            <param name="conventions">The conventions.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionRegistry.Remove(System.String)">
            <summary>
            Removes the conventions specified by the given name.
            </summary>
            <param name="name">The name.</param>
            <remarks>Removing a convention allows the removal of the special __defaults__ conventions 
            and the __attributes__ conventions for those who want to completely customize the 
            experience.</remarks>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ConventionRunner">
            <summary>
            Runs the conventions against a BsonClassMap and its BsonMemberMaps.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionRunner.#ctor(MongoDB.Bson.Serialization.Conventions.IConventionPack)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ConventionRunner"/> class.
            </summary>
            <param name="conventions">The conventions.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ConventionRunner.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.DefaultConventionPack">
            <summary>
            Convention pack of defaults.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DefaultConventionPack.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.DefaultConventionPack"/> class.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.DefaultConventionPack.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.DefaultConventionPack.Conventions">
            <summary>
            Gets the conventions.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention">
            <summary>
            A class map convention that wraps a delegate.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention.#ctor(System.String,System.Action{MongoDB.Bson.Serialization.BsonClassMap})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="action">The delegate.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegateClassMapConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention">
            <summary>
            A member map convention that wraps a delegate.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention.#ctor(System.String,System.Action{MongoDB.Bson.Serialization.BsonMemberMap})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="action">The delegate.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegateMemberMapConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention">
            <summary>
            A post processing convention that wraps a delegate.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention.#ctor(System.String,System.Action{MongoDB.Bson.Serialization.BsonClassMap})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="action">The delegate.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.DelegatePostProcessingConvention.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a post processing modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention">
            <summary>
            A convention that allows you to set the Enum serialization representation
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention"/> class.
            </summary>  
            <param name="representation">The serialization representation. 0 is used to detect representation
            from the enum itself.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.EnumRepresentationConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention">
            <summary>
            Represents a discriminator convention where the discriminator is an array of all the discriminators provided by the class maps of the root class down to the actual type.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention">
            <summary>
            Represents the standard discriminator conventions (see ScalarDiscriminatorConvention and HierarchicalDiscriminatorConvention).
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention">
            <summary>
            Represents a discriminator convention.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention.GetActualType(MongoDB.Bson.IO.BsonReader,System.Type)">
            <summary>
            Gets the actual type of an object by reading the discriminator from a BsonReader.
            </summary>
            <param name="bsonReader">The reader.</param>
            <param name="nominalType">The nominal type.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention.GetDiscriminator(System.Type,System.Type)">
            <summary>
            Gets the discriminator value for an actual type.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="actualType">The actual type.</param>
            <returns>The discriminator value.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention.ElementName">
            <summary>
            Gets the discriminator element name.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.#ctor(System.String)">
            <summary>
            Initializes a new instance of the StandardDiscriminatorConvention class.
            </summary>
            <param name="elementName">The element name.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.GetActualType(MongoDB.Bson.IO.BsonReader,System.Type)">
            <summary>
            Gets the actual type of an object by reading the discriminator from a BsonReader.
            </summary>
            <param name="bsonReader">The reader.</param>
            <param name="nominalType">The nominal type.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.GetDiscriminator(System.Type,System.Type)">
            <summary>
            Gets the discriminator value for an actual type.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="actualType">The actual type.</param>
            <returns>The discriminator value.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.Scalar">
            <summary>
            Gets an instance of the ScalarDiscriminatorConvention.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.Hierarchical">
            <summary>
            Gets an instance of the HierarchicalDiscriminatorConvention.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.StandardDiscriminatorConvention.ElementName">
            <summary>
            Gets the discriminator element name.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention.#ctor(System.String)">
            <summary>
            Initializes a new instance of the HierarchicalDiscriminatorConvention class.
            </summary>
            <param name="elementName">The element name.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.HierarchicalDiscriminatorConvention.GetDiscriminator(System.Type,System.Type)">
            <summary>
            Gets the discriminator value for an actual type.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="actualType">The actual type.</param>
            <returns>The discriminator value.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention">
            <summary>
            A convention that sets whether to ignore extra elements encountered during deserialization.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention"/> class.
            </summary>
            <param name="ignoreExtraElements">Whether to ignore extra elements encountered during deserialization.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreExtraElementsConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention">
            <summary>
            A convention that sets whether to ignore default values during serialization.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention"/> class.
            </summary>
            <param name="ignoreIfDefault">Whether to ignore default values during serialization.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreIfDefaultConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention">
            <summary>
            A convention that sets whether to ignore nulls during serialization.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention"/> class.
            </summary>
            <param name="ignoreIfNull">Whether to ignore nulls during serialization.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.IgnoreIfNullConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention">
            <summary>
            A convention that looks up an id generator for the id member.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.LookupIdGeneratorConvention.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a post processing modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention">
            <summary>
            A convention that sets the default value for members of a given type.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention"/> class.
            </summary>
            <param name="type">The type of the member.</param>
            <param name="defaultValue">The default value for members of this type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.MemberDefaultValueConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention">
            <summary>
            A convention that sets the element name the same as the member name.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.MemberNameElementNameConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention">
            <summary>
            A convention that finds the extra elements member by name (and that is also of type <see cref="T:MongoDB.Bson.BsonDocument"/> or <see cref="T:System.Collections.Generic.IDictionary`2"/>).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.#ctor(System.String)">
            <summary>
            Initializes a new instance of the NamedExtraElementsMemberConvention class.
            </summary>
            <param name="name">The name of the extra elements member.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.MemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="memberTypes">The member types.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="bindingFlags">The binding flags.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="memberTypes">The member types.</param>
            <param name="bindingFlags">The binding flags.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedExtraElementsMemberConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention">
            <summary>
            A convention that finds the id member by name.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.MemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="memberTypes">The member types.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="bindingFlags">The binding flags.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention"/> class.
            </summary>
            <param name="names">The names.</param>
            <param name="memberTypes">The member types.</param>
            <param name="bindingFlags">The binding flags.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedIdMemberConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention">
            <summary>
            A convention that uses the names of the creator parameters to find the matching members.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NamedParameterCreatorMapConvention.Apply(MongoDB.Bson.Serialization.BsonCreatorMap)">
            <summary>
            Applies a modification to the creator map.
            </summary>
            <param name="creatorMap">The creator map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention">
            <summary>
            A convention that sets a class's IdMember to null.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.NoIdMemberConvention.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a post processing modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention">
            <summary>
            Represents the object discriminator convention.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ObjectDiscriminatorConvention class.
            </summary>
            <param name="elementName">The element name.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention.GetActualType(MongoDB.Bson.IO.BsonReader,System.Type)">
            <summary>
            Gets the actual type of an object by reading the discriminator from a BsonReader.
            </summary>
            <param name="bsonReader">The reader.</param>
            <param name="nominalType">The nominal type.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention.GetDiscriminator(System.Type,System.Type)">
            <summary>
            Gets the discriminator value for an actual type.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="actualType">The actual type.</param>
            <returns>The discriminator value.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention.Instance">
            <summary>
            Gets an instance of the ObjectDiscriminatorConvention.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Conventions.ObjectDiscriminatorConvention.ElementName">
            <summary>
            Gets the discriminator element name.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention">
            <summary>
            A convention that finds readable and writeable members and adds them to the class map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention.#ctor(System.Reflection.MemberTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention"/> class.
            </summary>
            <param name="memberTypes">The member types.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention.#ctor(System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention"/> class.
            </summary>
            <param name="bindingFlags">The binding flags.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention.#ctor(System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention"/> class.
            </summary>
            <param name="memberTypes">The member types.</param>
            <param name="bindingFlags">The binding flags.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ReadWriteMemberFinderConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention">
            <summary>
            A convention that resets a class map (resetting any changes that earlier conventions may have applied).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ResetClassMapConvention.Apply(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention">
            <summary>
            A convention that resets class members (resetting any changes that earlier conventions may have applied).
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ResetMemberMapsConvention.Apply(MongoDB.Bson.Serialization.BsonMemberMap)">
            <summary>
            Applies a modification to the member map.
            </summary>
            <param name="memberMap">The member map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention">
            <summary>
            Represents a discriminator convention where the discriminator is provided by the class map of the actual type.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ScalarDiscriminatorConvention class.
            </summary>
            <param name="elementName">The element name.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.ScalarDiscriminatorConvention.GetDiscriminator(System.Type,System.Type)">
            <summary>
            Gets the discriminator value for an actual type.
            </summary>
            <param name="nominalType">The nominal type.</param>
            <param name="actualType">The actual type.</param>
            <returns>The discriminator value.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention">
            <summary>
            A convention that sets the id generator for a string member with a BSON representation of ObjectId.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Conventions.StringObjectIdIdGeneratorConvention.PostProcess(MongoDB.Bson.Serialization.BsonClassMap)">
            <summary>
            Applies a post processing modification to the class map.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler">
            <summary>
            A helper class used to create and compile delegates for creator maps.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.ExpressionVisitor">
            <summary>
            An abstract base class for an Expression visitor.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.#ctor">
            <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits an Expression.
            </summary>
            <param name="node">The Expression.</param>
            <returns>The Expression (posibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Visits an Expression list.
            </summary>
            <param name="nodes">The Expression list.</param>
            <returns>The Expression list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The BinaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits a ConditionalExpression.
            </summary>
            <param name="node">The ConditionalExpression.</param>
            <returns>The ConditionalExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits a ConstantExpression.
            </summary>
            <param name="node">The ConstantExpression.</param>
            <returns>The ConstantExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits an ElementInit.
            </summary>
            <param name="node">The ElementInit.</param>
            <returns>The ElementInit (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            Visits an ElementInit list.
            </summary>
            <param name="nodes">The ElementInit list.</param>
            <returns>The ElementInit list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits an InvocationExpression.
            </summary>
            <param name="node">The InvocationExpression.</param>
            <returns>The InvocationExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>The LambdaExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits a ListInitExpression.
            </summary>
            <param name="node">The ListInitExpression.</param>
            <returns>The ListInitExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The MemberExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits a MemberAssignment.
            </summary>
            <param name="node">The MemberAssignment.</param>
            <returns>The MemberAssignment (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            Visits a MemberBinding.
            </summary>
            <param name="node">The MemberBinding.</param>
            <returns>The MemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Visits a MemberBinding list.
            </summary>
            <param name="nodes">The MemberBinding list.</param>
            <returns>The MemberBinding list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits a MemberInitExpression.
            </summary>
            <param name="node">The MemberInitExpression.</param>
            <returns>The MemberInitExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits a MemberListBinding.
            </summary>
            <param name="node">The MemberListBinding.</param>
            <returns>The MemberListBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits a MemberMemberBinding.
            </summary>
            <param name="node">The MemberMemberBinding.</param>
            <returns>The MemberMemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>The MethodCallExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits a NewExpression.
            </summary>
            <param name="node">The NewExpression.</param>
            <returns>The NewExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits a NewArrayExpression.
            </summary>
            <param name="node">The NewArrayExpression.</param>
            <returns>The NewArrayExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The ParameterExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits a TypeBinaryExpression.
            </summary>
            <param name="node">The TypeBinaryExpression.</param>
            <returns>The TypeBinaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The UnaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler.CompileConstructorDelegate(System.Reflection.ConstructorInfo)">
            <summary>
            Creates and compiles a delegate that calls a constructor.
            </summary>
            <param name="constructorInfo">The constructor.</param>
            <returns>A delegate that calls the constructor.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler.CompileCreatorDelegate``1(System.Linq.Expressions.Expression{System.Func{``0,``0}},System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo}@)">
            <summary>
            Creates and compiles a delegate from a lambda expression.
            </summary>
            <typeparam name="TClass">The type of the class.</typeparam>
            <param name="creatorLambda">The lambda expression.</param>
            <param name="arguments">The arguments for the delegate's parameters.</param>
            <returns>A delegate.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler.CompileFactoryMethodDelegate(System.Reflection.MethodInfo)">
            <summary>
            Creates and compiles a delegate that calls a factory method.
            </summary>
            <param name="methodInfo">the method.</param>
            <returns>A delegate that calls the factory method.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The MemberExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.CreatorMapDelegateCompiler.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The ParameterExpression (possibly modified).</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonArraySerializer">
            <summary>
            Contract for serializers to implement if they serialize an array of items.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonArraySerializer.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>The serialization info for the items.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonDictionarySerializer">
            <summary>
            Represents a dictionary serializer that can be used in LINQ queries.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IBsonDictionarySerializer.DictionaryRepresentation">
            <summary>
            Gets the dictionary representation.
            </summary>
            <value>
            The dictionary representation.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IBsonDictionarySerializer.KeySerializer">
            <summary>
            Gets the key serializer.
            </summary>
            <value>
            The key serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IBsonDictionarySerializer.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonDocumentSerializer">
            <summary>
            Contract for composite serializers that contain a number of named serializers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonDocumentSerializer.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>The serialization info for the member.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonIdProvider">
            <summary>
            Contract for serializers that can get and set Id values.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonIdProvider.GetDocumentId(System.Object,System.Object@,System.Type@,MongoDB.Bson.Serialization.IIdGenerator@)">
            <summary>
            Gets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
            <param name="idNominalType">The nominal type of the Id.</param>
            <param name="idGenerator">The IdGenerator for the Id type.</param>
            <returns>True if the document has an Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IBsonIdProvider.SetDocumentId(System.Object,System.Object)">
            <summary>
            Sets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IBsonPolymorphicSerializer">
            <summary>
            An interface implemented by a polymorphic serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IBsonPolymorphicSerializer.IsDiscriminatorCompatibleWithObjectSerializer">
            <summary>
            Gets a value indicating whether this serializer's discriminator is compatible with the object serializer.
            </summary>
            <value>
            <c>true</c> if this serializer's discriminator is compatible with the object serializer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IChildSerializerConfigurable">
            <summary>
            Represents a serializer that has a child serializer that configuration attributes can be forwarded to.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IChildSerializerConfigurable.WithChildSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified child serializer.
            </summary>
            <param name="childSerializer">The child serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IChildSerializerConfigurable.ChildSerializer">
            <summary>
            Gets the child serializer.
            </summary>
            <value>
            The child serializer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator">
            <summary>
            A GUID generator that generates GUIDs in ascending order. To enable 
            an index to make use of the ascending nature make sure to use
            <see cref="F:MongoDB.Bson.GuidRepresentation.Standard">GuidRepresentation.Standard</see>
            as the storage representation.
            Internally the GUID is of the form
            8 bytes: Ticks from DateTime.UtcNow.Ticks
            3 bytes: hash of machine name
            2 bytes: low order bytes of process Id
            3 bytes: increment
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IIdGenerator">
            <summary>
            An interface implemented by Id generators.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IIdGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IIdGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an ascending Guid for a document. Consecutive invocations
            should generate Guids that are ascending from a MongoDB perspective
            </summary>
            <param name="container">The container of the document (will be a 
            MongoCollection when called from the driver). </param>
            <param name="document">The document it was generated for.</param>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator.GenerateId(System.Int64,System.Byte[],System.Int32)">
            <summary>
            Generates a Guid for a document. Note - this is purely used for
            unit testing
            </summary>
            <param name="tickCount">The time portion of the Guid</param>
            <param name="machineProcessId">A 5 byte array with the first 3 bytes
            representing a machine id and the next 2 representing a process
            id</param>
            <param name="increment">The increment portion of the Guid. Used
            to distinguish between 2 Guids that have the timestamp. Note
            only the least significant 3 bytes are used.</param>
            <returns>A Guid.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an id is empty.
            </summary>
            <param name="id">The id to test.</param>
            <returns>True if the Id is empty. False otherwise</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator.GetCurrentProcessId">
            <summary>
            Gets the current process id.  This method exists because of how
            CAS operates on the call stack, checking for permissions before
            executing the method.  Hence, if we inlined this call, the calling
            method would not execute before throwing an exception requiring the
            try/catch at an even higher level that we don't necessarily control.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.AscendingGuidGenerator.Instance">
            <summary>
            Gets an instance of AscendingGuidGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator">
            <summary>
            Represents an Id generator for Guids stored in BsonBinaryData values.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.#ctor(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Initializes a new instance of the BsonBinaryDataGuidGenerator class.
            </summary>
            <param name="guidRepresentation">The GuidRepresentation to use when generating new Id values.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.GetInstance(MongoDB.Bson.GuidRepresentation)">
            <summary>
            Gets the instance of BsonBinaryDataGuidGenerator for a GuidRepresentation.
            </summary>
            <param name="guidRepresentation">The GuidRepresentation.</param>
            <returns>The instance of BsonBinaryDataGuidGenerator for a GuidRepresentation.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.CSharpLegacyInstance">
            <summary>
            Gets an instance of BsonBinaryDataGuidGenerator for CSharpLegacy GuidRepresentation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.JavaLegacyInstance">
            <summary>
            Gets an instance of BsonBinaryDataGuidGenerator for JavaLegacy GuidRepresentation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.PythonLegacyInstance">
            <summary>
            Gets an instance of BsonBinaryDataGuidGenerator for PythonLegacy GuidRepresentation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.StandardInstance">
            <summary>
            Gets an instance of BsonBinaryDataGuidGenerator for Standard GuidRepresentation.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonBinaryDataGuidGenerator.UnspecifedInstance">
            <summary>
            Gets an instance of BsonBinaryDataGuidGenerator for Unspecifed GuidRepresentation.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator">
            <summary>
            Represents an Id generator for BsonObjectIds.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator.#ctor">
            <summary>
            Initializes a new instance of the BsonObjectIdGenerator class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.BsonObjectIdGenerator.Instance">
            <summary>
            Gets an instance of ObjectIdGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator">
            <summary>
            Represents an Id generator for Guids using the COMB algorithm.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator.#ctor">
            <summary>
            Initializes a new instance of the CombGuidGenerator class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator.NewCombGuid(System.Guid,System.DateTime)">
            <summary>
            Create a new CombGuid from a given Guid and timestamp.
            </summary>
            <param name="guid">The base Guid.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A new CombGuid created by combining the base Guid with the timestamp.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.CombGuidGenerator.Instance">
            <summary>
            Gets an instance of CombGuidGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.GuidGenerator">
            <summary>
            Represents an Id generator for Guids.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.GuidGenerator.#ctor">
            <summary>
            Initializes a new instance of the GuidGenerator class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.GuidGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.GuidGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.GuidGenerator.Instance">
            <summary>
            Gets an instance of GuidGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.NullIdChecker">
            <summary>
            Represents an Id generator that only checks that the Id is not null.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.NullIdChecker.#ctor">
            <summary>
            Initializes a new instance of the NullIdChecker class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.NullIdChecker.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.NullIdChecker.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.NullIdChecker.Instance">
            <summary>
            Gets an instance of NullIdChecker.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator">
            <summary>
            Represents an Id generator for ObjectIds.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator.#ctor">
            <summary>
            Initializes a new instance of the ObjectIdGenerator class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.ObjectIdGenerator.Instance">
            <summary>
            Gets an instance of ObjectIdGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator">
            <summary>
            Represents an Id generator for ObjectIds represented internally as strings.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator.#ctor">
            <summary>
            Initializes a new instance of the StringObjectIdGenerator class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IdGenerators.StringObjectIdGenerator.Instance">
            <summary>
            Gets an instance of StringObjectIdGenerator.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1">
            <summary>
            Represents an Id generator that only checks that the Id is not all zeros.
            </summary>
            <typeparam name="T">The type of the Id.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1.#ctor">
            <summary>
            Initializes a new instance of the ZeroIdChecker class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1.GenerateId(System.Object,System.Object)">
            <summary>
            Generates an Id for a document.
            </summary>
            <param name="container">The container of the document (will be a MongoCollection when called from the C# driver). </param>
            <param name="document">The document.</param>
            <returns>An Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IdGenerators.ZeroIdChecker`1.IsEmpty(System.Object)">
            <summary>
            Tests whether an Id is empty.
            </summary>
            <param name="id">The Id.</param>
            <returns>True if the Id is empty.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable">
            <summary>
            Represents a serializer that has a DictionaryRepresentation property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable.DictionaryRepresentation">
            <summary>
            Gets the dictionary representation.
            </summary>
            <value>
            The dictionary representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1">
            <summary>
            Represents a serializer that has a DictionaryRepresentation property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IDictionaryRepresentationConfigurable`1.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IRepresentationConfigurable">
            <summary>
            Represents a serializer that has a Representation property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IRepresentationConfigurable.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IRepresentationConfigurable.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IRepresentationConfigurable`1">
            <summary>
            Represents a serializer that has a Representation property.
            </summary>
            <typeparam name="TSerializer">The type of the serializer.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IRepresentationConfigurable`1.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IRepresentationConverterConfigurable">
            <summary>
            Represents a serializer that has a representation converter.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IRepresentationConverterConfigurable.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.IRepresentationConverterConfigurable.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1">
            <summary>
            Represents a serializer that has a representation converter.
            </summary>
            <typeparam name="TSerializer">The type of the serializer.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.IRepresentationConverterConfigurable`1.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Options.DictionaryRepresentation">
            <summary>
            Represents the representation to use for dictionaries.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.DictionaryRepresentation.Document">
            <summary>
            Represent the dictionary as a Document.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.DictionaryRepresentation.ArrayOfArrays">
            <summary>
            Represent the dictionary as an array of arrays.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.DictionaryRepresentation.ArrayOfDocuments">
            <summary>
            Represent the dictionary as an array of documents.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Options.RepresentationConverter">
            <summary>
            Represents the external representation of a field or property.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RepresentationConverter class.
            </summary>
            <param name="allowOverflow">Whether to allow overflow.</param>
            <param name="allowTruncation">Whether to allow truncation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDecimal(System.Double)">
            <summary>
            Converts a Double to a Decimal.
            </summary>
            <param name="value">A Double.</param>
            <returns>A Decimal.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDecimal(System.Int32)">
            <summary>
            Converts an Int32 to a Decimal.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A Decimal.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDecimal(System.Int64)">
            <summary>
            Converts an Int64 to a Decimal.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A Decimal.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Decimal)">
            <summary>
            Converts a Decimal to a Double.
            </summary>
            <param name="value">A Decimal.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Double)">
            <summary>
            Converts a Double to a Double.
            </summary>
            <param name="value">A Double.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Single)">
            <summary>
            Converts a Single to a Double.
            </summary>
            <param name="value">A Single.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Int32)">
            <summary>
            Converts an Int32 to a Double.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Int64)">
            <summary>
            Converts an Int64 to a Double.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.Int16)">
            <summary>
            Converts an Int16 to a Double.
            </summary>
            <param name="value">An Int16.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.UInt32)">
            <summary>
            Converts a UInt32 to a Double.
            </summary>
            <param name="value">A UInt32.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.UInt64)">
            <summary>
            Converts a UInt64 to a Double.
            </summary>
            <param name="value">A UInt64.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToDouble(System.UInt16)">
            <summary>
            Converts a UInt16 to a Double.
            </summary>
            <param name="value">A UInt16.</param>
            <returns>A Double.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt16(System.Double)">
            <summary>
            Converts a Double to an Int16.
            </summary>
            <param name="value">A Double.</param>
            <returns>An Int16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt16(System.Int32)">
            <summary>
            Converts an Int32 to an Int16.
            </summary>
            <param name="value">An Int32.</param>
            <returns>An Int16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt16(System.Int64)">
            <summary>
            Converts an Int64 to an Int16.
            </summary>
            <param name="value">An Int64.</param>
            <returns>An Int16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Decimal)">
            <summary>
            Converts a Decimal to an Int32.
            </summary>
            <param name="value">A Decimal.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Double)">
            <summary>
            Converts a Double to an Int32.
            </summary>
            <param name="value">A Double.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Single)">
            <summary>
            Converts a Single to an Int32.
            </summary>
            <param name="value">A Single.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Int32)">
            <summary>
            Converts an Int32 to an Int32.
            </summary>
            <param name="value">An Int32.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Int64)">
            <summary>
            Converts an Int64 to an Int32.
            </summary>
            <param name="value">An Int64.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.Int16)">
            <summary>
            Converts an Int16 to an Int32.
            </summary>
            <param name="value">An Int16.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.UInt32)">
            <summary>
            Converts a UInt32 to an Int32.
            </summary>
            <param name="value">A UInt32.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.UInt64)">
            <summary>
            Converts a UInt64 to an Int32.
            </summary>
            <param name="value">A UInt64.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt32(System.UInt16)">
            <summary>
            Converts a UInt16 to an Int32.
            </summary>
            <param name="value">A UInt16.</param>
            <returns>An Int32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Decimal)">
            <summary>
            Converts a Decimal to an Int64.
            </summary>
            <param name="value">A Decimal.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Double)">
            <summary>
            Converts a Double to an Int64.
            </summary>
            <param name="value">A Double.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Single)">
            <summary>
            Converts a Single to an Int64.
            </summary>
            <param name="value">A Single.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Int32)">
            <summary>
            Converts an Int32 to an Int64.
            </summary>
            <param name="value">An Int32.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Int64)">
            <summary>
            Converts an Int64 to an Int64.
            </summary>
            <param name="value">An Int64.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.Int16)">
            <summary>
            Converts an Int16 to an Int64.
            </summary>
            <param name="value">An Int16.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.UInt32)">
            <summary>
            Converts a UInt32 to an Int64.
            </summary>
            <param name="value">A UInt32.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.UInt64)">
            <summary>
            Converts a UInt64 to an Int64.
            </summary>
            <param name="value">A UInt64.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToInt64(System.UInt16)">
            <summary>
            Converts a UInt16 to an Int64.
            </summary>
            <param name="value">A UInt16.</param>
            <returns>An Int64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToSingle(System.Double)">
            <summary>
            Converts a Double to a Single.
            </summary>
            <param name="value">A Double.</param>
            <returns>A Single.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToSingle(System.Int32)">
            <summary>
            Converts an Int32 to a Single.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A Single.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToSingle(System.Int64)">
            <summary>
            Converts an Int64 to a Single.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A Single.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt16(System.Double)">
            <summary>
            Converts a Double to a UInt16.
            </summary>
            <param name="value">A Double.</param>
            <returns>A UInt16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt16(System.Int32)">
            <summary>
            Converts an Int32 to a UInt16.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A UInt16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt16(System.Int64)">
            <summary>
            Converts an Int64 to a UInt16.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A UInt16.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt32(System.Double)">
            <summary>
            Converts a Double to a UInt32.
            </summary>
            <param name="value">A Double.</param>
            <returns>A UInt32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt32(System.Int32)">
            <summary>
            Converts an Int32 to a UInt32.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A UInt32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt32(System.Int64)">
            <summary>
            Converts an Int64 to a UInt32.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A UInt32.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt64(System.Double)">
            <summary>
            Converts a Double to a UInt64.
            </summary>
            <param name="value">A Double.</param>
            <returns>A UInt64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt64(System.Int32)">
            <summary>
            Converts an Int32 to a UInt64.
            </summary>
            <param name="value">An Int32.</param>
            <returns>A UInt64.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Options.RepresentationConverter.ToUInt64(System.Int64)">
            <summary>
            Converts an Int64 to a UInt64.
            </summary>
            <param name="value">An Int64.</param>
            <returns>A UInt64.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Options.RepresentationConverter.AllowOverflow">
            <summary>
            Gets whether to allow overflow.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Options.RepresentationConverter.AllowTruncation">
            <summary>
            Gets whether to allow truncation.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Options.TimeSpanUnits">
            <summary>
            Represents the units a TimeSpan is serialized in.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Ticks">
            <summary>
            Use ticks as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Days">
            <summary>
            Use days as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Hours">
            <summary>
            Use hours as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Minutes">
            <summary>
            Use minutes as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Seconds">
            <summary>
            Use seconds as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Milliseconds">
            <summary>
            Use milliseconds as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Microseconds">
            <summary>
            Use microseconds as the units.
            </summary>
        </member>
        <member name="F:MongoDB.Bson.Serialization.Options.TimeSpanUnits.Nanoseconds">
            <summary>
            Use nanoseconds as the units.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1">
            <summary>
            Represents a serializer for one-dimensional arrays.
            </summary>
            <typeparam name="TItem">The type of the elements.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2">
            <summary>
            Represents a serializer for enumerable values.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TItem">The type of the items.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of an enumerable type.
            </summary>
            <returns>The serialization info for the items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.AddItem(System.Object,`1)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.EnumerateItemsInSerializationOrder(`0)">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`2.ItemSerializer">
            <summary>
            Gets the item serializer.
            </summary>
            <value>
            The item serializer.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.AddItem(System.Object,`0)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.EnumerateItemsInSerializationOrder(`0[])">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ArraySerializer`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BitArraySerializer">
            <summary>
            Represents a serializer for BitArrays.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1">
            <summary>
            Represents an abstract base class for sealed class serializers.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SealedClassSerializerBase`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value of type {TValue}.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BitArraySerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BitArraySerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Collections.BitArray)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BitArraySerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BooleanSerializer">
            <summary>
            Represents a serializer for Booleans.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.StructSerializerBase`1">
            <summary>
            Represents an abstract base class for struct serializers.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BooleanSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BooleanSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Boolean)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BooleanSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer">
            <summary>
            Represents a serializer for BsonArrays.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1">
            <summary>
            Represents a base class for BsonValue serializers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1.#ctor(System.Nullable{MongoDB.Bson.BsonType})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1"/> class.
            </summary>
            <param name="bsonType">The Bson type.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializerBase`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonArraySerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>
            The serialization info for the items.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonArray)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonArraySerializer.Instance">
            <summary>
            Gets an instance of the BsonArraySerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer">
            <summary>
            Represents a serializer for BsonBinaryDatas.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonBinaryDataSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonBinaryData)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonBinaryDataSerializer.Instance">
            <summary>
            Gets an instance of the BsonBinaryDataSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer">
            <summary>
            Represents a serializer for BsonBooleans.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonBooleanSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonBoolean)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonBooleanSerializer.Instance">
            <summary>
            Gets an instance of the BsonBooleanSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonClassMapSerializer`1">
            <summary>
            Represents a serializer for a class map.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.#ctor(MongoDB.Bson.Serialization.BsonClassMap{`0})">
            <summary>
            Initializes a new instance of the BsonClassMapSerializer class.
            </summary>
            <param name="classMap">The class map.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.DeserializeClass(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.GetDocumentId(System.Object,System.Object@,System.Type@,MongoDB.Bson.Serialization.IIdGenerator@)">
            <summary>
            Gets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
            <param name="idNominalType">The nominal type of the Id.</param>
            <param name="idGenerator">The IdGenerator for the Id type.</param>
            <returns>True if the document has an Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>The serialization info for the member.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.SetDocumentId(System.Object,System.Object)">
            <summary>
            Sets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.BsonClassMapSerializer`1.IsDiscriminatorCompatibleWithObjectSerializer">
            <summary>
            Gets a value indicating whether this serializer's discriminator is compatible with the object serializer.
            </summary>
            <value>
            <c>true</c> if this serializer's discriminator is compatible with the object serializer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer">
            <summary>
            Represents a serializer for BsonDateTimes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonDateTimeSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonDateTime)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonDateTimeSerializer.Instance">
            <summary>
            Gets an instance of the BsonDateTimeSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1">
            <summary>
            Represents a serializer for TClass (a subclass of BsonDocumentBackedClass).
            </summary>
            <typeparam name="TClass">The subclass of BsonDocumentBackedClass.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.RegisterMember(System.String,System.String,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Registers a member.
            </summary>
            <param name="memberName">The member name.</param>
            <param name="elementName">The element name.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.BsonDocumentBackedClassSerializer`1.CreateInstance(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates the instance.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <returns>An instance of TClass.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer">
            <summary>
            Represents a serializer for BsonDocuments.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonDocumentSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.GetDocumentId(System.Object,System.Object@,System.Type@,MongoDB.Bson.Serialization.IIdGenerator@)">
            <summary>
            Gets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
            <param name="idNominalType">The nominal type of the Id.</param>
            <param name="idGenerator">The IdGenerator for the Id type.</param>
            <returns>True if the document has an Id.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonDocument)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.SetDocumentId(System.Object,System.Object)">
            <summary>
            Sets the document Id.
            </summary>
            <param name="document">The document.</param>
            <param name="id">The Id.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonDocumentSerializer.Instance">
            <summary>
            Gets an instance of the BsonDocumentSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer">
            <summary>
            Represents a serializer for BsonDocumentWrappers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonDocumentWrapperSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonDocumentWrapper)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonDocumentWrapperSerializer.Instance">
            <summary>
            Gets an instance of the BsonDocumentWrapperSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer">
            <summary>
            Represents a serializer for BsonDoubles.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonDoubleSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonDouble)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonDoubleSerializer.Instance">
            <summary>
            Gets an instance of the BsonDoubleSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer">
            <summary>
            Represents a serializer for BsonInt32s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer.#ctor">
            <summary>
            Initializes a new instance of the BsonInt32Serializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonInt32)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonInt32Serializer.Instance">
            <summary>
            Gets an instance of the BsonInt32Serializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer">
            <summary>
            Represents a serializer for BsonInt64s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer.#ctor">
            <summary>
            Initializes a new instance of the BsonInt64Serializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonInt64)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonInt64Serializer.Instance">
            <summary>
            Gets an instance of the BsonInt64Serializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer">
            <summary>
            Represents a serializer for BsonJavaScripts.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonJavaScriptSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptSerializer.Instance">
            <summary>
            Gets an instance of the BsonJavaScriptSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer">
            <summary>
            Represents a serializer for BsonJavaScriptWithScopes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonJavaScriptWithScopeSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonJavaScriptWithScope)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonJavaScriptWithScopeSerializer.Instance">
            <summary>
            Gets an instance of the BsonJavaScriptWithScopeSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer">
            <summary>
            Represents a serializer for BsonMaxKeys.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonMaxKeySerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonMaxKey)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonMaxKeySerializer.Instance">
            <summary>
            Gets an instance of the BsonMaxKeySerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer">
            <summary>
            Represents a serializer for BsonMinKeys.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonMinKeySerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonMinKey)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonMinKeySerializer.Instance">
            <summary>
            Gets an instance of the BsonMinKeySerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonNullSerializer">
            <summary>
            Represents a serializer for BsonNulls.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonNullSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonNullSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonNullSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonNullSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonNull)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonNullSerializer.Instance">
            <summary>
            Gets an instance of the BsonNullSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer">
            <summary>
            Represents a serializer for BsonObjectIds.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonObjectIdSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonObjectId)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonObjectIdSerializer.Instance">
            <summary>
            Gets an instance of the BsonObjectIdSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer">
            <summary>
            Represents a serializer for BsonRegularExpressions.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonRegularExpressionSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonRegularExpressionSerializer.Instance">
            <summary>
            Gets an instance of the BsonRegularExpressionSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonStringSerializer">
            <summary>
            Represents a serializer for BsonStrings.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonStringSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonStringSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonStringSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonStringSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonString)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonStringSerializer.Instance">
            <summary>
            Gets an instance of the BsonStringSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer">
            <summary>
            Represents a serializer for BsonSymbols.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonSymbolSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonSymbol)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonSymbolSerializer.Instance">
            <summary>
            Gets an instance of the BsonSymbolSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer">
            <summary>
            Represents a serializer for BsonTimestamps.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonTimestampSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonTimestamp)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonTimestampSerializer.Instance">
            <summary>
            Gets an instance of the BsonTimestampSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer">
            <summary>
            Represents a serializer for BsonUndefineds.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonUndefinedSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonUndefined)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonUndefinedSerializer.Instance">
            <summary>
            Gets an instance of the BsonUndefinedSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1">
            <summary>
            Represents a serializer for a BsonValue that can round trip C# null.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1"/> class.
            </summary>
            <param name="wrappedSerializer">The wrapped serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1">
            <summary>
            Represents a serializer for a BsonValue that can round trip C# null and implements IBsonArraySerializer and IBsonDocumentSerializer.
            </summary>
            <typeparam name="TBsonValue">The type of the bson value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1"/> class.
            </summary>
            <param name="wrappedSerializer">The wrapped serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>
            The serialization info for the items.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArrayAndDocumentSerializer`1.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1">
            <summary>
            Represents a serializer for a BsonValue that can round trip C# null and implements IBsonArraySerializer.
            </summary>
            <typeparam name="TBsonValue">The type of the bson value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1"/> class.
            </summary>
            <param name="wrappedSerializer">The wrapped serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullArraySerializer`1.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>
            The serialization info for the items.
            </returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1">
            <summary>
            Represents a serializer for a BsonValue that can round trip C# null and implements IBsonDocumentSerializer.
            </summary>
            <typeparam name="TBsonValue">The type of the bson value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1"/> class.
            </summary>
            <param name="wrappedSerializer">The wrapped serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueCSharpNullDocumentSerializer`1.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer">
            <summary>
            Represents a serializer for BsonValues.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.#ctor">
            <summary>
            Initializes a new instance of the BsonValueSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>
            The serialization info for the items.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.BsonValue)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.BsonValueSerializer.Instance">
            <summary>
            Gets an instance of the BsonValueSerializer class.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer">
            <summary>
            Represents a serializer for ByteArrays.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Byte[])">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ByteArraySerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ByteSerializer">
            <summary>
            Represents a serializer for Bytes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ByteSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ByteSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Byte)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ByteSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ByteSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.CharSerializer">
            <summary>
            Represents a serializer for Chars.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CharSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.CharSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CharSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.CharSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CharSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CharSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Char)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CharSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.CharSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer">
            <summary>
            Represents a serializer for CultureInfos.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer.#ctor">
            <summary>
            Initializes a new instance of the CultureInfoSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.CultureInfoSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Globalization.CultureInfo)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer">
            <summary>
            Represents a serializer for DateTimeOffsets.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.DateTimeOffset)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeOffsetSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer">
            <summary>
            Represents a serializer for DateTimes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
            <param name="dateOnly">if set to <c>true</c> [date only].</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor(System.Boolean,MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
            <param name="dateOnly">if set to <c>true</c> [date only].</param>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor(System.DateTimeKind)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
            <param name="kind">The kind.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.#ctor(System.DateTimeKind,MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer"/> class.
            </summary>
            <param name="kind">The kind.</param>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.DateTime)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.WithDateOnly(System.Boolean)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dateOnly value.
            </summary>
            <param name="dateOnly">if set to <c>true</c> the values will be required to be Date's only (zero time component).</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.WithDateOnly(System.Boolean,MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dateOnly value and representation.
            </summary>
            <param name="dateOnly">if set to <c>true</c> the values will be required to be Date's only (zero time component).</param>
            <param name="representation">The representation.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.WithKind(System.DateTimeKind)">
            <summary>
            Returns a serializer that has been reconfigured with the specified DateTimeKind value.
            </summary>
            <param name="kind">The DateTimeKind.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.WithKind(System.DateTimeKind,MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified DateTimeKind value and representation.
            </summary>
            <param name="kind">The DateTimeKind.</param>
            <param name="representation">The representation.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.DateOnlyInstance">
            <summary>
            Gets an instance of DateTimeSerializer with DateOnly=true.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.LocalInstance">
            <summary>
            Gets an instance of DateTimeSerializer with Kind=Local.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.UtcInstance">
            <summary>
            Gets an instance of DateTimeSerializer with Kind=Utc.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.DateOnly">
            <summary>
            Gets whether this DateTime consists of a Date only.
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.Kind">
            <summary>
            Gets the DateTimeKind (Local, Unspecified or Utc).
            </summary>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DateTimeSerializer.Representation">
            <summary>
            Gets the external representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DecimalSerializer">
            <summary>
            Represents a serializer for Decimals.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DecimalSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DecimalSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DecimalSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Decimal)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DecimalSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1">
            <summary>
            Represents a serializer for a class that implements IDictionary.
            </summary>
            <typeparam name="TDictionary">The type of the dictionary.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1">
            <summary>
            Represents a serializer for dictionaries.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.DictionaryRepresentation">
            <summary>
            Gets the dictionary representation.
            </summary>
            <value>
            The dictionary representation.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.KeySerializer">
            <summary>
            Gets the key serializer.
            </summary>
            <value>
            The key serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`1.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation and key value serializers.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.WithKeySerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified key serializer.
            </summary>
            <param name="keySerializer">The key serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.WithValueSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified value serializer.
            </summary>
            <param name="valueSerializer">The value serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`1.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3">
            <summary>
            Represents a serializer for a class that implements <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <typeparam name="TDictionary">The type of the dictionary.</typeparam>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3">
            <summary>
            Represents a serializer for dictionaries.
            </summary>
            <typeparam name="TDictionary">The type of the dictionary.</typeparam>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer{`1},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.DictionaryRepresentation">
            <summary>
            Gets the dictionary representation.
            </summary>
            <value>
            The dictionary representation.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.KeySerializer">
            <summary>
            Gets the key serializer.
            </summary>
            <value>
            The key serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DictionarySerializerBase`3.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.#ctor(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer{`1},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3"/> class.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation)">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.WithDictionaryRepresentation(MongoDB.Bson.Serialization.Options.DictionaryRepresentation,MongoDB.Bson.Serialization.IBsonSerializer{`1},MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Returns a serializer that has been reconfigured with the specified dictionary representation and key value serializers.
            </summary>
            <param name="dictionaryRepresentation">The dictionary representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.WithKeySerializer(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Returns a serializer that has been reconfigured with the specified key serializer.
            </summary>
            <param name="keySerializer">The key serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.WithValueSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`2})">
            <summary>
            Returns a serializer that has been reconfigured with the specified value serializer.
            </summary>
            <param name="valueSerializer">The value serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DictionaryInterfaceImplementerSerializer`3.CreateInstance">
            <summary>
            Creates the instance.
            </summary>
            <returns>The instance.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1">
            <summary>
            Represents a serializer for Interfaces.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1.#ctor(MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1"/> class.
            </summary>
            <param name="discriminatorConvention">The discriminator convention.</param>
            <exception cref="T:System.ArgumentException">interfaceType</exception>
            <exception cref="T:System.ArgumentNullException">interfaceType</exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>
            A document.
            </returns>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedInterfaceSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The document.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1">
            <summary>
            Represents a serializer that serializes values as a discriminator/value pair.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1.#ctor(MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention,MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1"/> class.
            </summary>
            <param name="discriminatorConvention">The discriminator convention.</param>
            <param name="wrappedSerializer">The wrapped serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1.IsPositionedAtDiscriminatedWrapper(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Determines whether the reader is positioned at a discriminated wrapper.
            </summary>
            <param name="context">The context.</param>
            <returns>True if the reader is positioned at a discriminated wrapper.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DiscriminatedWrapperSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DoubleSerializer">
            <summary>
            Represents a serializer for Doubles.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DoubleSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DoubleSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DoubleSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Double)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.DoubleSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DrawingSizeSerializer">
            <summary>
            Represents a serializer for System.Drawing.Size.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DrawingSizeSerializer.#ctor">
            <summary>
            Initializes a new instance of the DrawingSizeSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DrawingSizeSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DrawingSizeSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Drawing.Size)">
            <summary>
            Serializes an object of type System.Drawing.Size  to a BsonWriter.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1">
            <summary>
            Base serializer for dynamic types.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.ConfigureDeserializationContext(MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)">
            <summary>
            Configures the deserialization context.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.ConfigureSerializationContext(MongoDB.Bson.Serialization.BsonSerializationContext.Builder)">
            <summary>
            Configures the serialization context.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.CreateDocument">
            <summary>
            Creates the document.
            </summary>
            <returns>A <typeparamref name="T"/></returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.SetValueForMember(`0,System.String,System.Object)">
            <summary>
            Sets the value for the member.
            </summary>
            <param name="document">The document.</param>
            <param name="memberName">Name of the member.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.DynamicDocumentBaseSerializer`1.TryGetValueForMember(`0,System.String,System.Object@)">
            <summary>
            Tries to get the value for a member.  Returns true if the member should be serialized.
            </summary>
            <param name="document">The document.</param>
            <param name="memberName">Name of the member.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if the member should be serialized; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1">
            <summary>
            Represents a serializer for a class that implements IEnumerable.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1">
            <summary>
            Represents a serializer for enumerable values.
            </summary>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1">
            <summary>
            Represents a base serializer for enumerable values.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of an enumerable type.
            </summary>
            <returns>The serialization info for the items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.AddItem(System.Object,System.Object)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.EnumerateItemsInSerializationOrder(`0)">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The final result.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.EnumerableSerializerBase`1.ItemSerializer">
            <summary>
            Gets the item serializer.
            </summary>
            <value>
            The item serializer.
            </value>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1.AddItem(System.Object,System.Object)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1.EnumerateItemsInSerializationOrder(`0)">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2">
            <summary>
            Represents a serializer for a class that implementes <see cref="T:System.Collections.Generic.IEnumerable`1"/>.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2">
            <summary>
            Represents a serializer for enumerable values.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TItem">The type of the items.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2.AddItem(System.Object,`1)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2.EnumerateItemsInSerializationOrder(`0)">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializerBase`2.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumerableInterfaceImplementerSerializer`2.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The final result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1">
            <summary>
            Represents a serializer for enums.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.EnumSerializer`1.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer">
            <summary>
            Serializer for <see cref="T:System.Dynamic.ExpandoObject"/>.
            </summary>
            <remarks>
            The use of <see cref="T:System.Dynamic.ExpandoObject"/> will serialize any <see cref="T:System.Collections.Generic.List`1"/> without type information. 
            To get the best experience out of using an <see cref="T:System.Dynamic.ExpandoObject"/>, any member wanting to be used
            as an array should use <see cref="T:System.Collections.Generic.List`1"/>.
            </remarks>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.ConfigureDeserializationContext(MongoDB.Bson.Serialization.BsonDeserializationContext.Builder)">
            <summary>
            Configures the deserialization context.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.ConfigureSerializationContext(MongoDB.Bson.Serialization.BsonSerializationContext.Builder)">
            <summary>
            Configures the serialization context.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.CreateDocument">
            <summary>
            Creates the document.
            </summary>
            <returns>
            A <see cref="T:System.Dynamic.ExpandoObject"/>.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.SetValueForMember(System.Dynamic.ExpandoObject,System.String,System.Object)">
            <summary>
            Sets the value for the member.
            </summary>
            <param name="document">The document.</param>
            <param name="memberName">Name of the member.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ExpandoObjectSerializer.TryGetValueForMember(System.Dynamic.ExpandoObject,System.String,System.Object@)">
            <summary>
            Tries to get the value for a member.  Returns true if the member should be serialized.
            </summary>
            <param name="value">The value.</param>
            <param name="memberName">Name of the member.</param>
            <param name="memberValue">The member value.</param>
            <returns><c>true</c> if the member should be serialized; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.GuidSerializer">
            <summary>
            Represents a serializer for Guids.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.GuidSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.GuidSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.GuidSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.GuidSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.GuidSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.GuidSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Guid)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.GuidSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.GuidSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2">
            <summary>
            Represents a serializer for Interfaces.
            </summary>
            <typeparam name="TInterface">The type of the interface.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2"/> class.
            </summary>
            <param name="implementationSerializer">The implementation serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>
            A document.
            </returns>
            <exception cref="T:System.FormatException"></exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.GetItemSerializationInfo">
            <summary>
            Gets the serialization info for individual items of the array.
            </summary>
            <returns>
            The serialization info for the items.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>
            The serialization info for the member.
            </returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The document.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.WithImplementationSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Returns a serializer that has been reconfigured with the specified implementation serializer.
            </summary>
            <param name="implementationSerializer">The implementation serializer.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.DictionaryRepresentation">
            <summary>
            Gets the dictionary representation.
            </summary>
            <value>
            The dictionary representation.
            </value>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.KeySerializer">
            <summary>
            Gets the key serializer.
            </summary>
            <value>
            The key serializer.
            </value>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.ImplementationSerializer">
            <summary>
            Gets the implementation serializer.
            </summary>
            <value>
            The implementation serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ImpliedImplementationInterfaceSerializer`2.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.Int16Serializer">
            <summary>
            Represents a serializer for Int16s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int16Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int16Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int16Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Int16)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int16Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int16Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int16Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.Int32Serializer">
            <summary>
            Represents a serializer for Int32.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int32Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int32Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int32Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Int32)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int32Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int32Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int32Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.Int64Serializer">
            <summary>
            Represents a serializer for Int64s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int64Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int64Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.Int64Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Int64)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.Int64Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int64Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.Int64Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.IPAddressSerializer">
            <summary>
            Represents a serializer for IPAddresses.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPAddressSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.IPAddressSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPAddressSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPAddressSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Net.IPAddress)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer">
            <summary>
            Represents a serializer for IPEndPoints.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer.#ctor">
            <summary>
            Initializes a new instance of the IPEndPointSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.IPEndPointSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Net.IPEndPoint)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2">
            <summary>
            Represents a serializer for KeyValuePairs.
            </summary>
            <typeparam name="TKey">The type of the keys.</typeparam>
            <typeparam name="TValue">The type of the values.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.IBsonSerializer{`0},MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="keySerializer">The key serializer.</param>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.KeySerializer">
            <summary>
            Gets the key serializer.
            </summary>
            <value>
            The key serializer.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.KeyValuePairSerializer`2.ValueSerializer">
            <summary>
            Gets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer">
            <summary>
            Represents a serializer for LazyBsonArrays.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonArraySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.LazyBsonArray)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer">
            <summary>
            Represents a serializer for LazyBsonDocuments.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.LazyBsonDocumentSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.LazyBsonDocument)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1">
            <summary>
            Represents a serializer for nullable values.
            </summary>
            <typeparam name="T">The underlying type.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1"/> class.
            </summary>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Nullable{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.NullableSerializer`1.WithSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer">
            <summary>
            Represents a serializer for ObjectIds.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.ObjectId)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ObjectIdSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ObjectSerializer">
            <summary>
            Represents a serializer for objects.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ObjectSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectSerializer.#ctor(MongoDB.Bson.Serialization.Conventions.IDiscriminatorConvention)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ObjectSerializer"/> class.
            </summary>
            <param name="discriminatorConvention">The discriminator convention.</param>
            <exception cref="T:System.ArgumentNullException">discriminatorConvention</exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ObjectSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Object)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ObjectSerializer.Instance">
            <summary>
            Gets the standard instance.
            </summary>
            <value>
            The standard instance.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer">
            <summary>
            Represents a serializer for Queues.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.#ctor(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.AddItem(System.Object,System.Object)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.EnumerateItemsInSerializationOrder(System.Collections.Queue)">
            <summary>
            Enumerates the items.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The instance.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1">
            <summary>
            Represents a serializer for Queues.
            </summary>
            <typeparam name="TItem">The type of the elements.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.AddItem(System.Object,`0)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.EnumerateItemsInSerializationOrder(System.Collections.Generic.Queue{`0})">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.QueueSerializer`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer">
            <summary>
            Represents a serializer for RawBsonArrays.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonArraySerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.RawBsonArray)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer">
            <summary>
            Represents a serializer for RawBsonDocuments.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.RawBsonDocumentSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Bson.RawBsonDocument)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1">
            <summary>
            Represents a serializer for readonly collection.
            </summary>
            <typeparam name="TItem">The type of the item.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSerializer`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The final result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2">
            <summary>
            Represents a serializer for a subclass of ReadOnlyCollection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <typeparam name="TItem">The type of the item.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ReadOnlyCollectionSubclassSerializer`2.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The final result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SByteSerializer">
            <summary>
            Represents a serializer for SBytes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SByteSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SByteSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SByteSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SByteSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SByteSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SByteSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.SByte)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SByteSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SByteSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2">
            <summary>
            Represents a serializer for a class that will be serialized as if it were one of its base classes.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`1})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2"/> class.
            </summary>
            <param name="nominalTypeSerializer">The base class serializer.</param>
            <exception cref="T:System.ArgumentNullException">baseClassSerializer</exception>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializeAsNominalTypeSerializer`2.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SerializerHelper">
            <summary>
            Represents a helper for serializers.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerHelper.#ctor(MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SerializerHelper"/> class.
            </summary>
            <param name="members">The members.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerHelper.DeserializeMembers(MongoDB.Bson.Serialization.BsonDeserializationContext,System.Action{System.String,System.Int64})">
            <summary>
            Deserializes the members.
            </summary>
            <param name="context">The deserialization context.</param>
            <param name="memberHandler">The member handler.</param>
            <returns>The found member flags.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member">
            <summary>
            Represents information about a member.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member.#ctor(System.String,System.Int64,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member"/> class.
            </summary>
            <param name="elementName">The name of the element.</param>
            <param name="flag">The flag.</param>
            <param name="isOptional">Whether the member is optional.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member.Flag">
            <summary>
            Gets the flag.
            </summary>
            <value>
            The flag.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member.ElementName">
            <summary>
            Gets the name of the element.
            </summary>
            <value>
            The name of the element.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member.IsOptional">
            <summary>
            Gets a value indicating whether this member is optional.
            </summary>
            <value>Whether this member is optional.</value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.SingleSerializer">
            <summary>
            Represents a serializer for Singles.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SingleSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SingleSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.SingleSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.Single)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.SingleSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SingleSerializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.SingleSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.StackSerializer">
            <summary>
            Represents a serializer for Stacks.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StackSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.#ctor(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StackSerializer"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.AddItem(System.Object,System.Object)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.EnumerateItemsInSerializationOrder(System.Collections.Stack)">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.StackSerializer`1">
            <summary>
            Represents a serializer for Stacks.
            </summary>
            <typeparam name="TItem">The type of the elements.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StackSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StackSerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.AddItem(System.Object,`0)">
            <summary>
            Adds the item.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.CreateAccumulator">
            <summary>
            Creates the accumulator.
            </summary>
            <returns>The accumulator.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.EnumerateItemsInSerializationOrder(System.Collections.Generic.Stack{`0})">
            <summary>
            Enumerates the items in serialization order.
            </summary>
            <param name="value">The value.</param>
            <returns>The items.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StackSerializer`1.FinalizeResult(System.Object)">
            <summary>
            Finalizes the result.
            </summary>
            <param name="accumulator">The accumulator.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.StringSerializer">
            <summary>
            Represents a serializer for Strings.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StringSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StringSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StringSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.StringSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StringSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StringSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.String)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.StringSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.StringSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1">
            <summary>
            Represents a serializer for three-dimensional arrays.
            </summary>
            <typeparam name="TItem">The type of the elements.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0[0:,0:,0:])">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.ThreeDimensionalArraySerializer`1.ItemSerializer">
            <summary>
            Gets the item serializer.
            </summary>
            <value>
            The item serializer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer">
            <summary>
            Represents a serializer for Timespans.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.TimeSpanUnits)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="units">The units.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.TimeSpan)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.WithRepresentation(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.TimeSpanUnits)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation and units.
            </summary>
            <param name="representation">The representation.</param>
            <param name="units">The units.</param>
            <returns>
            The reconfigured serializer.
            </returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.TimeSpanSerializer.Units">
            <summary>
            Gets the units.
            </summary>
            <value>
            The units.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1">
            <summary>
            Represents a serializer for two-dimensional arrays.
            </summary>
            <typeparam name="TItem">The type of the elements.</typeparam>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1"/> class.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,`0[0:,0:])">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.WithItemSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="itemSerializer">The item serializer.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.TwoDimensionalArraySerializer`1.ItemSerializer">
            <summary>
            Gets the item serializer.
            </summary>
            <value>
            The item serializer.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.UInt16Serializer">
            <summary>
            Represents a serializer for UInt16s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt16Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt16Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt16Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.UInt16)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt16Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.UInt32Serializer">
            <summary>
            Represents a serializer for UInt32s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt32Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt32Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt32Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.UInt32)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt32Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.UInt64Serializer">
            <summary>
            Represents a serializer for UInt64s.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt64Serializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt64Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.#ctor(MongoDB.Bson.BsonType,MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UInt64Serializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
            <param name="converter">The converter.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,System.UInt64)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.WithConverter(MongoDB.Bson.Serialization.Options.RepresentationConverter)">
            <summary>
            Returns a serializer that has been reconfigured with the specified item serializer.
            </summary>
            <param name="converter">The converter.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.Converter">
            <summary>
            Gets the converter.
            </summary>
            <value>
            The converter.
            </value>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UInt64Serializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1">
            <summary>
            Represents a serializer for interfaces and base classes that delegates to the actual type interface without writing a discriminator.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1.Serialize(MongoDB.Bson.Serialization.BsonSerializationContext,`0)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The document.</param>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.UndiscriminatedActualTypeSerializer`1.Instance">
            <summary>
            Gets the instance.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.UriSerializer">
            <summary>
            Represents a serializer for Uris.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UriSerializer.#ctor">
            <summary>
            Initializes a new instance of the UriSerializer class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UriSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.UriSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Uri)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="T:MongoDB.Bson.Serialization.Serializers.VersionSerializer">
            <summary>
            Represents a serializer for Versions.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.VersionSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.VersionSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.VersionSerializer.#ctor(MongoDB.Bson.BsonType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Bson.Serialization.Serializers.VersionSerializer"/> class.
            </summary>
            <param name="representation">The representation.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.VersionSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.VersionSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,System.Version)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The object.</param>
        </member>
        <member name="M:MongoDB.Bson.Serialization.Serializers.VersionSerializer.WithRepresentation(MongoDB.Bson.BsonType)">
            <summary>
            Returns a serializer that has been reconfigured with the specified representation.
            </summary>
            <param name="representation">The representation.</param>
            <returns>The reconfigured serializer.</returns>
        </member>
        <member name="P:MongoDB.Bson.Serialization.Serializers.VersionSerializer.Representation">
            <summary>
            Gets the representation.
            </summary>
            <value>
            The representation.
            </value>
        </member>
        <member name="T:MongoDB.Bson.Serialization.TypeNameDiscriminator">
            <summary>
            Supports using type names as discriminators.
            </summary>
        </member>
        <member name="M:MongoDB.Bson.Serialization.TypeNameDiscriminator.GetActualType(System.String)">
            <summary>
            Resolves a type name discriminator.
            </summary>
            <param name="typeName">The type name.</param>
            <returns>The type if type type name can be resolved; otherwise, null.</returns>
        </member>
        <member name="M:MongoDB.Bson.Serialization.TypeNameDiscriminator.GetDiscriminator(System.Type)">
            <summary>
            Gets a type name to be used as a discriminator (like AssemblyQualifiedName but shortened for common DLLs).
            </summary>
            <param name="type">The type.</param>
            <returns>The type name.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.UpdateCurrentDateType">
            <summary>
            The type to use for the $currentDate type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Date">
            <summary>
            The date type.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Builders.UpdateCurrentDateType.Timestamp">
            <summary>
            The timestamp type.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1">
            <summary>
            Represents a serializer helper for GeoJsonObjects.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.#ctor(System.String,MongoDB.Bson.Serialization.Serializers.SerializerHelper.Member[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="derivedMembers">The derived members.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.DeserializeBaseMember(MongoDB.Bson.Serialization.BsonDeserializationContext,System.String,System.Int64,MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Deserializes a base member.
            </summary>
            <param name="context">The context.</param>
            <param name="elementName">The element name.</param>
            <param name="flag">The flag.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializerHelper`1.SerializeMembers``1(MongoDB.Bson.Serialization.BsonSerializationContext,``0,System.Action{MongoDB.Bson.Serialization.BsonSerializationContext,``0})">
            <summary>
            Serializes the members.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="context">The context.</param>
            <param name="value">The value.</param>
            <param name="serializeDerivedMembers">The delegate to serialize the derived members.</param>
        </member>
        <member name="T:MongoDB.Driver.ParallelScanArgs">
            <summary>
            Represents arguments for the ParallelScan command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ParallelScanArgs.BatchSize">
            <summary>
            Gets or sets the size of the batch.
            </summary>
            <value>
            The size of the batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ParallelScanArgs.NumberOfCursors">
            <summary>
            Gets or sets the desired number of cursors.
            </summary>
            <value>
            The desired number of cursors.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ParallelScanArgs.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
            <value>
            The read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ParallelScanArgs.Serializer">
            <summary>
            Gets or sets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ParallelScanArgs`1">
            <summary>
            Represents arguments for the ParallelScan command helper method.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.ParallelScanArgs`1.Serializer">
            <summary>
            Gets or sets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernError">
            <summary>
            Represents the details of a write concern error.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Details">
            <summary>
            Gets the error information.
            </summary>
            <value>
            The error information.
            </value>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernError.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteError">
            <summary>
            Represents the details of a write error for a particular request.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Code">
            <summary>
            Gets the error code.
            </summary>
            <value>
            The error code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Details">
            <summary>
            Gets the error information.
            </summary>
            <value>
            The error information.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Index">
            <summary>
            Gets the index of the request that had an error.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteError.Message">
            <summary>
            Gets the error message.
            </summary>
            <value>
            The error message.
            </value>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteResult">
            <summary>
            Represents the result of a bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteResult.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteResult"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.DeletedCount">
            <summary>
            Gets the number of documents that were deleted.
            </summary>
            <value>
            The number of document that were deleted.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.InsertedCount">
            <summary>
            Gets the number of documents that were inserted.
            </summary>
            <value>
            The number of document that were inserted.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
            <value>
              <c>true</c> if the bulk write operation was acknowledged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
            <value>
            <c>true</c> if the modified count is available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.MatchedCount">
            <summary>
            Gets the number of documents that were matched.
            </summary>
            <value>
            The number of document that were matched.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.ModifiedCount">
            <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
            <value>
            The number of document that were actually modified during an update.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.ProcessedRequests">
            <summary>
            Gets the processed requests.
            </summary>
            <value>
            The processed requests.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.RequestCount">
            <summary>
            Gets the request count.
            </summary>
            <value>
            The request count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteResult.Upserts">
            <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
            <value>
            The list with information about each request that resulted in an upsert.
            </value>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteUpsert">
            <summary>
            Represents the information about one Upsert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteUpsert.Index">
            <summary>
            Gets the index.
            </summary>
            <value>
            The index.
            </value>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteException">
            <summary>
            Represents a bulk write exception.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoException">
            <summary>
            Represents a MongoDB exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteException.#ctor(MongoDB.Driver.BulkWriteResult,System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteError},MongoDB.Driver.WriteConcernError,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.BulkWriteException"/> class.
            </summary>
            <param name="result">The result.</param>
            <param name="writeErrors">The write errors.</param>
            <param name="unprocessedRequests">The unprocessed requests.</param>
            <param name="writeConcernError">The write concern error.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteException.Result">
            <summary>
            Gets the result of the bulk write operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteException.UnprocessedRequests">
            <summary>
            Gets the unprocessed requests.
            </summary>
            <value>
            The unprocessed requests.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteException.WriteConcernError">
            <summary>
            Gets the write concern error.
            </summary>
            <value>
            The write concern error.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteException.WriteErrors">
            <summary>
            Gets the write errors.
            </summary>
            <value>
            The write errors.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Operations.BulkWriteBatchResult">
            <summary>
            Represents the result of one batch executed using a write command.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteOperation">
            <summary>
            Represents a fluent builder for a bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOperation.Execute">
            <summary>
            Executes the bulk operation using the default write concern from the collection.
            </summary>
            <returns>A BulkWriteResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOperation.Execute(MongoDB.Driver.WriteConcern)">
            <summary>
            Executes the bulk operation.
            </summary>
            <param name="writeConcern">The write concern for this bulk operation.</param>
            <returns>A BulkWriteResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOperation.Find(MongoDB.Driver.IMongoQuery)">
            <summary>
            Creates a builder for a new write request (either a remove or an update).
            </summary>
            <param name="query">The query.</param>
            <returns>A FluentWriteRequestBuilder.</returns>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteOperation.Insert``1(``0)">
            <summary>
            Adds an insert request for the specified document to the bulk operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="document">The document.</param>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteRequestBuilder">
            <summary>
            Represents a fluent builder for a write request (either a remove or an update).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.Remove">
            <summary>
            Adds a request to remove all matching documents to the bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.RemoveOne">
            <summary>
            Adds a request to remove one matching documents to the bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.ReplaceOne``1(``0)">
            <summary>
            Adds a request to replace one matching documents to the bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.Update(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Adds a request to update all matching documents to the bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.UpdateOne(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Adds a request to update one matching documents to the bulk operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkWriteRequestBuilder.Upsert">
            <summary>
            Specifies that the request being built should be an upsert.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MongoDB.Driver.BulkUpdateRequestBuilder">
            <summary>
            Represents a fluent builder for one update request.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder.ReplaceOne``1(``0)">
            <summary>
            Adds an update request to replace one matching document to the bulk operation.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="document">The document.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder.Update(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Adds an update request to update all matching documents to the bulk operation.
            </summary>
            <param name="update">The update.</param>
        </member>
        <member name="M:MongoDB.Driver.BulkUpdateRequestBuilder.UpdateOne(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Adds an update request to update one matching document to the bulk operation.
            </summary>
            <param name="update">The update.</param>
        </member>
        <member name="T:MongoDB.Driver.InsertRequest">
            <summary>
            Represents a request to insert a document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteRequest">
            <summary>
            Represents a request to write something to the database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteRequest.#ctor(MongoDB.Driver.WriteRequestType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteRequest"/> class.
            </summary>
            <param name="requestType">The request type.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteRequest.RequestType">
            <summary>
            Gets the request type.
            </summary>
            <value>
            The request type.
            </value>
        </member>
        <member name="M:MongoDB.Driver.InsertRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertRequest"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.InsertRequest.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertRequest"/> class.
            </summary>
            <param name="nominalType">Type nominal type.</param>
            <param name="document">The document.</param>
        </member>
        <member name="M:MongoDB.Driver.InsertRequest.#ctor(System.Type,System.Object,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.InsertRequest"/> class.
            </summary>
            <param name="nominalType">Type nominal type.</param>
            <param name="document">The document.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="P:MongoDB.Driver.InsertRequest.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>
            The document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.InsertRequest.NominalType">
            <summary>
            Gets or sets the nominal type.
            </summary>
            <value>
            The nominal type.
            </value>
        </member>
        <member name="P:MongoDB.Driver.InsertRequest.Serializer">
            <summary>
            Gets or sets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="T:MongoDB.Driver.WriteRequestType">
            <summary>
            Represents the type of a write request.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteRequestType.Delete">
            <summary>
            A delete request.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteRequestType.Insert">
            <summary>
            An insert request.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.WriteRequestType.Update">
            <summary>
            An udpate request.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.X509AuthenticationProtocol">
            <summary>
            Authentication protocol using the SSL X509 certificates as the client identity.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.IAuthenticationProtocol">
            <summary>
            Authenticates a MongoConnection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.IAuthenticationProtocol.Authenticate(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Authenticates the specified connection with the given credential.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.IAuthenticationProtocol.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can use the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can use the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.IAuthenticationProtocol.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.X509AuthenticationProtocol.Authenticate(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Authenticates the specified connection with the given credential.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.X509AuthenticationProtocol.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can use the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can use the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.X509AuthenticationProtocol.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DistinctArgs">
            <summary>
            Represents arguments for the Distinct command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DistinctArgs.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:MongoDB.Driver.DistinctArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.DistinctArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.DistinctArgs.ValueSerializer">
            <summary>
            Gets or sets the value serializer.
            </summary>
            <value>
            The value serializer.
            </value>
        </member>
        <member name="T:MongoDB.Driver.MongoDuplicateKeyException">
            <summary>
            Thrown when a duplicate key is inserted into a collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernException">
            <summary>
            Represents a get last error exception.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoSafeModeException">
            <summary>
            Represents a MongoDB safe mode exception.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCommandException">
            <summary>
            Represents a MongoDB command exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(MongoDB.Driver.CommandResult)">
            <summary>
            Initializes a new instance of the MongoCommandException class.
            </summary>
            <param name="commandResult">The command result (an error message will be constructed using the result).</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoCommandException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoCommandException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.String,MongoDB.Driver.CommandResult)">
            <summary>
            Initializes a new instance of the MongoCommandException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="commandResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCommandException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoCommandException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoCommandException.CommandResult">
            <summary>
            Gets the command result.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoSafeModeException.#ctor(System.String,MongoDB.Driver.CommandResult)">
            <summary>
            Initializes a new instance of the MongoSafeModeException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="commandResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoSafeModeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoSafeModeException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcernException.#ctor(System.String,MongoDB.Driver.WriteConcernResult)">
            <summary>
            Initializes a new instance of the WriteConcernException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="writeConcernResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcernException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the WriteConcernException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.WriteConcernException.WriteConcernResult">
            <summary>
            Gets the write concern result.
            </summary>
            <value>
            The write concern result.
            </value>
        </member>
        <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(System.String,MongoDB.Driver.WriteConcernResult)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDuplicateKeyException"/> class.
            </summary>
            <param name="message">The error message.</param>
            <param name="commandResult">The command result.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the WriteConcernException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.FeatureId">
            <summary>
            Represents the Id of a feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.AggregateAllowDiskUse">
            <summary>
            The aggregate allow disk use feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.AggregateCursor">
            <summary>
            The aggregate cursor feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.AggregateExplain">
            <summary>
            The aggregate explain feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.AggregateOutputToCollection">
            <summary>
            The aggregate output to collection feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.CreateIndexCommand">
            <summary>
            The create index command feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.MaxTime">
            <summary>
            The max time feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.GeoJson">
            <summary>
            The GeoJson data and query feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.ParallelScanCommand">
            <summary>
            The parallel scan command.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.TextSearchCommand">
            <summary>
            The text search command.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.TextSearchQuery">
            <summary>
            The text search query operator.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.UserManagementCommands">
            <summary>
            The user management commands.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.WriteCommands">
            <summary>
            The write commands.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FeatureId.WriteOpcodes">
            <summary>
            The write opcodes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.FeatureDetection.FeatureSet">
            <summary>
            Represents a set of features that are supported by a server instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.FeatureDetection.FeatureSet.IsSupported(MongoDB.Driver.FeatureId)">
            <summary>
            Checks whether a feature is supported.
            </summary>
            <param name="featureId">The feature Id.</param>
            <returns>True if the feature is supported; otherwise, false.</returns>
        </member>
        <member name="T:MongoDB.Driver.BulkWriteArgs">
            <summary>
            Represents the arguments to a BulkWrite method (BulkDelete, BulkInsert, BulkUpdate or BulkWrite).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.AssignId">
            <summary>
            Gets or sets a delegate that is called before a document is inserted to assign an id if the id is empty.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.CheckElementNames">
            <summary>
            Gets or sets whether to check element names.
            </summary>
            <value>
              <c>true</c> if element names should be checked; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.IsOrdered">
            <summary>
            Gets or sets a value indicating whether the server should process the requests in order.
            </summary>
            <value>
              <c>true</c> if the server should process the requests in order; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.MaxBatchCount">
            <summary>
            Gets or sets the maximum batch count.
            </summary>
            <value>
            The maximum batch count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.MaxBatchLength">
            <summary>
            Gets or sets the maximum batch length (in bytes).
            </summary>
            <value>
            The maximum batch length.
            </value>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.Requests">
            <summary>
            Gets or sets the write requests.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.BulkWriteArgs.WriteConcern">
            <summary>
            Gets or sets the write concern.
            </summary>
            <value>
            The write concern.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AcknowledgedBulkWriteResult">
            <summary>
            Represents the result of an acknowledged bulk write operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.AcknowledgedBulkWriteResult.#ctor(System.Int32,System.Int64,System.Int64,System.Int64,System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteRequest},System.Collections.Generic.IEnumerable{MongoDB.Driver.BulkWriteUpsert})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AcknowledgedBulkWriteResult"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="matchedCount">The matched count.</param>
            <param name="deletedCount">The deleted count.</param>
            <param name="insertedCount">The inserted count.</param>
            <param name="modifiedCount">The modified count.</param>
            <param name="processedRequests">The processed requests.</param>
            <param name="upserts">The upserts.</param>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.DeletedCount">
            <summary>
            Gets the number of documents that were deleted.
            </summary>
            <value>
            The number of document that were deleted.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.InsertedCount">
            <summary>
            Gets the number of documents that were inserted.
            </summary>
            <value>
            The number of document that were inserted.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
            <value>
            <c>true</c> if the modified count is available; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.MatchedCount">
            <summary>
            Gets the number of documents that were matched.
            </summary>
            <value>
            The number of document that were matched.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.ModifiedCount">
            <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
            <value>
            The number of document that were actually modified during an update.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
            <value>
            <c>true</c> if the bulk write operation was acknowledged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AcknowledgedBulkWriteResult.Upserts">
            <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
            <value>
            The list with information about each request that resulted in an upsert.
            </value>
        </member>
        <member name="T:MongoDB.Driver.CountArgs">
            <summary>
            Represents arguments for the Count command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CountArgs.Limit">
            <summary>
            Gets or sets the maximum number of matching documents to count.
            </summary>
            <value>
            The maximum number of matching documents to count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CountArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CountArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.CountArgs.Skip">
            <summary>
            Gets or sets the number of matching documents to skip before starting to count matching documents.
            </summary>
            <value>
            The number of matching documents to skip before starting to count matching documents.
            </value>
        </member>
        <member name="T:MongoDB.Driver.EvalArgs">
            <summary>
            Represents arguments for the Eval command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.EvalArgs.Args">
            <summary>
            Gets or sets the arguments to the JavaScript code.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:MongoDB.Driver.EvalArgs.Code">
            <summary>
            Gets or sets the JavaScript code.
            </summary>
            <value>
            The JavaScript code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.EvalArgs.Lock">
            <summary>
            Gets or sets whether the server should take a global write lock when executing the JavaScript code.
            </summary>
            <value>
            Whether the server should take a global write lock when executing the JavaScript code.
            </value>
        </member>
        <member name="P:MongoDB.Driver.EvalArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ExceptionMapper">
            <summary>
            A mapper from error responses to custom exceptions.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExceptionMapper.Map(MongoDB.Bson.BsonDocument)">
            <summary>
            Maps the specified response to a custom exception (if possible).
            </summary>
            <param name="response">The response.</param>
            <returns>The custom exception (or null if the response could not be mapped to a custom exception).</returns>
        </member>
        <member name="M:MongoDB.Driver.ExceptionMapper.Map(MongoDB.Driver.WriteConcernResult)">
            <summary>
            Maps the specified writeConcernResult to a custom exception (if necessary).
            </summary>
            <param name="writeConcernResult">The write concern result.</param>
            <returns>
            The custom exception (or null if the writeConcernResult was not mapped to an exception).
            </returns>
        </member>
        <member name="T:MongoDB.Driver.ExecutionTimeoutException">
            <summary>
            Represents a MongoDB execution timeout exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExecutionTimeoutException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ExecutionTimeoutException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.ExecutionTimeoutException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ExecutionTimeoutException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.ExecutionTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ExecutionTimeoutException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.FindAndModifyDocumentVersion">
            <summary>
            Represents a version of a document (original or modified).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FindAndModifyDocumentVersion.Original">
            <summary>
            The original version of the document.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.FindAndModifyDocumentVersion.Modified">
            <summary>
            The modified version of the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindAndModifyArgs">
            <summary>
            Represents options for the FindAndModify command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.Fields">
            <summary>
            Gets or sets the fields specification.
            </summary>
            <value>
            The fields specification.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.SortBy">
            <summary>
            Gets or sets the sort specification.
            </summary>
            <value>
            The sort specification.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.Update">
            <summary>
            Gets or sets the update specification.
            </summary>
            <value>
            The update specification.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.Upsert">
            <summary>
            Gets or sets a value indicating whether FindAndModify should upsert.
            </summary>
            <value>
              <c>true</c> if FindAndModify should upsert; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyArgs.VersionReturned">
            <summary>
            Gets or sets the version of the document returned.
            </summary>
            <value>
            The version of the document returned.
            </value>
        </member>
        <member name="T:MongoDB.Driver.AggregateOutputMode">
            <summary>
            Represents the output mode for an aggregate operation.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.AggregateOutputMode.Inline">
            <summary>
            The output of the aggregate operation is returned inline.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.AggregateOutputMode.Cursor">
            <summary>
            The output of the aggregate operation is returned using a cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateArgs">
            <summary>
            Represents options for the Aggregate command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.AggregateArgs.AllowDiskUse">
            <summary>
            Gets or sets a value indicating whether disk use is allowed.
            </summary>
            <value>
              <c>true</c> if disk use is allowed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateArgs.BatchSize">
            <summary>
            Gets or sets the size of a batch when using a cursor.
            </summary>
            <value>
            The size of a batch.
            </value>
            <exception cref="T:System.ArgumentException">BatchSize cannot be negative.;value</exception>
        </member>
        <member name="P:MongoDB.Driver.AggregateArgs.MaxTime">
            <summary>
            Gets or sets the max time the server should spend on the aggregation command.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateArgs.OutputMode">
            <summary>
            Gets or sets the output mode.
            </summary>
            <value>
            The output mode.
            </value>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:MongoDB.Driver.AggregateArgs.Pipeline">
            <summary>
            Gets or sets the pipeline.
            </summary>
            <value>
            The pipeline.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Builders.BuilderBase">
            <summary>
            Abstract base class for the builders.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.BuilderBase.#ctor">
            <summary>
            Initializes a new instance of the BuilderBase class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.BuilderBase.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.BuilderBase.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.CollectionOptions">
            <summary>
            A builder for the options used when creating a collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetAutoIndexId(System.Boolean)">
            <summary>
            Sets whether to automatically create an index on the _id element.
            </summary>
            <param name="value">Whether to automatically create an index on the _id element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetCapped(System.Boolean)">
            <summary>
            Sets whether the collection is capped.
            </summary>
            <param name="value">Whether the collection is capped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetMaxDocuments(System.Int64)">
            <summary>
            Sets the max number of documents in a capped collection.
            </summary>
            <param name="value">The max number of documents.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptions.SetMaxSize(System.Int64)">
            <summary>
            Sets the max size of a capped collection.
            </summary>
            <param name="value">The max size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.CollectionOptions.Null">
            <summary>
            Gets a null value with a type of IMongoCollectionOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.CollectionOptionsBuilder">
            <summary>
            A builder for the options used when creating a collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoCollectionOptions">
            <summary>
            A marker interface that represents options for creating a collection (see CollectionOptionsDocument and the CollectionOptions builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.#ctor">
            <summary>
            Initializes a new instance of the CollectionOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetAutoIndexId(System.Boolean)">
            <summary>
            Sets whether to automatically create an index on the _id element.
            </summary>
            <param name="value">Whether to automatically create an index on the _id element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetCapped(System.Boolean)">
            <summary>
            Sets whether the collection is capped.
            </summary>
            <param name="value">Whether the collection is capped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetMaxDocuments(System.Int64)">
            <summary>
            Sets the max number of documents in a capped collection.
            </summary>
            <param name="value">The max number of documents.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.SetMaxSize(System.Int64)">
            <summary>
            Sets the max size of a capped collection.
            </summary>
            <param name="value">The max size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.CollectionOptionsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.Fields">
            <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns the first matching element in the array specified by name.
            </summary>
            <param name="name">The name.</param>
            <param name="query">The query.</param>
            <returns>The build (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.Exclude(System.String[])">
            <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
            <param name="names">One or more field names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.Include(System.String[])">
            <summary>
            Adds one or more field names to be included in the results.
            </summary>
            <param name="names">One or more field names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.MetaTextScore(System.String)">
            <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
            <param name="name">The name of the field to hold the computed relevance score.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <param name="name">The name of the field to slice.</param>
            <param name="size">The size of the slice (negative sizes are taken from the end).</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields.Slice(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <param name="name">The name of the field to slice.</param>
            <param name="skip">The number of values to skip.</param>
            <param name="limit">The number of values to extract.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.Fields.Null">
            <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.FieldsBuilder">
            <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoFields">
            <summary>
            A marker interface that represents a list of fields (see FieldsDocument and the Fields builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.#ctor">
            <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns the first matching element in the array specified by name.
            </summary>
            <param name="name">The name.</param>
            <param name="query">The query.</param>
            <returns>The build (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Exclude(System.String[])">
            <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
            <param name="names">One or more field names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Include(System.String[])">
            <summary>
            Adds one or more field names to be included in the results.
            </summary>
            <param name="names">One or more field names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.MetaTextScore(System.String)">
            <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
            <param name="name">The name of the field to hold the computed relevance score.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <param name="name">The name of the field to slice.</param>
            <param name="size">The size of the slice (negative sizes are taken from the end).</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.Slice(System.String,System.Int32,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <param name="name">The name of the field to slice.</param>
            <param name="skip">The number of values to skip.</param>
            <param name="limit">The number of values to extract.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.Fields`1">
            <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Returns the first matching element in the array specified by name.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="elementQueryBuilderFunction">The element query builder function.</param>
            <returns>The build (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds one or more field names to be included in the results.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
            <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="size">The size of the slice (negative sizes are taken from the end).</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Fields`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="skip">The number of values to skip.</param>
            <param name="limit">The number of values to extract.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.Fields`1.Null">
            <summary>
            Gets a null value with a type of IMongoFields.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.FieldsBuilder`1">
            <summary>
            A builder for specifying which fields of a document the server should return.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the FieldsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Returns the first matching element in the array specified by name.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="elementQueryBuilderFunction">The element query builder function.</param>
            <returns>The build (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Exclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds one or more field names to be excluded from the results.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds one or more field names to be included in the results.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Specifies the name of field to hold the computed relevance score for text search.
            </summary>
            <param name="memberExpression">The member expression specifying the field to hold the computed relevance score.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="size">The size of the slice (negative sizes are taken from the end).</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.Slice``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32,System.Int32)">
            <summary>
            Adds a slice to be included in the results.
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="skip">The number of values to skip.</param>
            <param name="limit">The number of values to extract.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.FieldsBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptions">
            <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetLimit(System.Int32)">
            <summary>
            Sets the maximum number of results to return.
            </summary>
            <param name="value">The maximum number of results to return.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions.SetQuery(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the query on the optional additional field.
            </summary>
            <param name="additionalFieldName">The name of the additional field.</param>
            <param name="value">The value fo the additional field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.GeoHaystackSearchOptions.Null">
            <summary>
            Gets a null value with a type of IMongoGeoHaystackSearchOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder">
            <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoGeoHaystackSearchOptions">
            <summary>
            A marker interface that represents geo haystack search options (see GeoSearchHaystackOptionsDocument and the GeoHaystackSearchOptions builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.#ctor">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetLimit(System.Int32)">
            <summary>
            Sets the maximum number of results to return.
            </summary>
            <param name="value">The maximum number of results to return.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.SetQuery(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the query on the optional additional field.
            </summary>
            <param name="additionalFieldName">The name of the additional field.</param>
            <param name="value">The value fo the additional field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1">
            <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetLimit(System.Int32)">
            <summary>
            Sets the maximum number of results to return.
            </summary>
            <param name="value">The maximum number of results to return.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.SetQuery``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the query on the optional additional field.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value fo the additional field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.GeoHaystackSearchOptions`1.Null">
            <summary>
            Gets a null value with a type of IMongoGeoHaystackSearchOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1">
            <summary>
            A builder for the options of the GeoHaystackSearch command.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetLimit(System.Int32)">
            <summary>
            Sets the maximum number of results to return.
            </summary>
            <param name="value">The maximum number of results to return.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.SetQuery``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the query on the optional additional field.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value fo the additional field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoHaystackSearchOptionsBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoNearOptions">
            <summary>
            A builder for the options of the GeoNear command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetDistanceMultiplier(System.Double)">
            <summary>
            Sets the distance multiplier.
            </summary>
            <param name="value">The distance multiplier.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptions.SetSpherical(System.Boolean)">
            <summary>
            Sets whether to use a spherical search.
            </summary>
            <param name="value">Whether to use a spherical search.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.GeoNearOptions.Null">
            <summary>
            Gets a null value with a type of IMongoGeoNearOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.GeoNearOptionsBuilder">
            <summary>
            A builder for the options of the GeoNear command.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoGeoNearOptions">
            <summary>
            A marker interface that represents geo search options (see GeoNearOptionsDocument and the GeoNearOptions builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.#ctor">
            <summary>
            Initializes a new instance of the GeoNearOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetDistanceMultiplier(System.Double)">
            <summary>
            Sets the distance multiplier.
            </summary>
            <param name="value">The distance multiplier.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetMaxDistance(System.Double)">
            <summary>
            Sets the max distance.
            </summary>
            <param name="value">The max distance.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.SetSpherical(System.Boolean)">
            <summary>
            Sets whether to use a spherical search.
            </summary>
            <param name="value">Whether to use a spherical search.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GeoNearOptionsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GroupBy">
            <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupBy.Function(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Sets a key function.
            </summary>
            <param name="keyFunction">The key function.</param>
            <returns>A BsonJavaScript.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupBy.Keys(System.String[])">
            <summary>
            Sets one or more key names.
            </summary>
            <param name="names">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GroupByBuilder">
            <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoGroupBy">
            <summary>
            A marker interface that represents what to group by (see GroupByDocument and the GroupBy builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.GroupByBuilder"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the GroupByBuilder class.
            </summary>
            <param name="names">One or more key names.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder.Keys(System.String[])">
            <summary>
            Sets one or more key names.
            </summary>
            <param name="names">The names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GroupBy`1">
            <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupBy`1.Keys(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names.
            </summary>
            <param name="memberExpressions">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.GroupByBuilder`1">
            <summary>
            A builder for specifying what the GroupBy command should group by.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.GroupByBuilder`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.Keys(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names.
            </summary>
            <param name="memberExpressions">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.GroupByBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexKeys">
            <summary>
            A builder for specifying the keys for an index.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.Ascending(System.String[])">
            <summary>
            Sets one or more key names to index in ascending order.
            </summary>
            <param name="names">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.Descending(System.String[])">
            <summary>
            Sets one or more key names to index in descending order.
            </summary>
            <param name="names">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatial(System.String)">
            <summary>
            Sets the key name to create a geospatial index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String)">
            <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialHaystack(System.String,System.String)">
            <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
            <param name="name">The key name.</param>
            <param name="additionalName">The name of an additional field to index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.GeoSpatialSpherical(System.String)">
            <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.Hashed(System.String)">
            <summary>
            Sets the key name to create a hashed index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.Text(System.String[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="names">List of key names to include in the text index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys.TextAll">
            <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder">
            <summary>
            A builder for specifying the keys for an index.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoIndexKeys">
            <summary>
            A marker interface that represents the keys of an index (see IndexKeysDocument and the IndexKeys builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.#ctor">
            <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Ascending(System.String[])">
            <summary>
            Sets one or more key names to index in ascending order.
            </summary>
            <param name="names">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Descending(System.String[])">
            <summary>
            Sets one or more key names to index in descending order.
            </summary>
            <param name="names">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatial(System.String)">
            <summary>
            Sets the key name to create a geospatial index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String)">
            <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialHaystack(System.String,System.String)">
            <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
            <param name="name">The key name.</param>
            <param name="additionalName">The name of an additional field to index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.GeoSpatialSpherical(System.String)">
            <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Hashed(System.String)">
            <summary>
            Sets the key name to create a hashed index on.
            </summary>
            <param name="name">The key name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.Text(System.String[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="names">List of key names to include in the text index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.TextAll">
            <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexKeys`1">
            <summary>
            A builder for specifying the keys for an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names to index in ascending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names to index in descending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a geospatial index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
            <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="additionalMemberExpression">The additional member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a hashed index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeys`1.TextAll">
            <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexKeysBuilder`1">
            <summary>
            A builder for specifying the keys for an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the IndexKeysBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names to index in ascending order.
            </summary>
            <param name="memberExpressions">One or more key names.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sets one or more key names to index in descending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatial``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a geospatial index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a geospatial haystack index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialHaystack``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``1}})">
            <summary>
            Sets the key name and additional field name to create a geospatial haystack index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TAdditionalMember">The type of the additional member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="additionalMemberExpression">The additional member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.GeoSpatialSpherical``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a spherical geospatial index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Hashed``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Sets the key name to create a hashed index on.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.String}}[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.Text(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}}[])">
            <summary>
            Sets one or more key names to include in the text index.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.TextAll">
            <summary>
            Create a text index that indexes all text fields of a document.
            </summary>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexKeysBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexOptions">
            <summary>
            A builder for the options used when creating an index.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBackground(System.Boolean)">
            <summary>
            Sets whether to build the index in the background.
            </summary>
            <param name="value">Whether to build the index in the background.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBits(System.Int32)">
            <summary>
            Sets the location precision bits.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetBucketSize(System.Double)">
            <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
            <param name="value">The bucket size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetDropDups(System.Boolean)">
            <summary>
            Sets whether duplicates should be dropped.
            </summary>
            <param name="value">Whether duplicates should be dropped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetGeoSpatialRange(System.Double,System.Double)">
            <summary>
            Sets the geospatial range.
            </summary>
            <param name="min">The min value of the range.</param>
            <param name="max">The max value of the range.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetName(System.String)">
            <summary>
            Sets the name of the index.
            </summary>
            <param name="value">The name of the index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetSparse(System.Boolean)">
            <summary>
            Sets whether the index is a sparse index.
            </summary>
            <param name="value">Whether the index is a sparse index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTextDefaultLanguage(System.String)">
            <summary>
            Sets the default language for the text index.
            </summary>
            <param name="language">The default language.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTextLanguageOverride(System.String)">
            <summary>
            Specifies the field name containing the language for the text index.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetTimeToLive(System.TimeSpan)">
            <summary>
            Sets the time to live value.
            </summary>
            <param name="timeToLive">The time to live.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetUnique(System.Boolean)">
            <summary>
            Sets whether the index enforces unique values.
            </summary>
            <param name="value">Whether the index enforces unique values.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions.SetWeight(System.String,System.Int32)">
            <summary>
            Sets the weight of a field for the text index.
            </summary>
            <param name="name">The name of the field.</param>
            <param name="value">The weight.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.IndexOptions.Null">
            <summary>
            Gets a null value with a type of IMongoIndexOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexOptionsBuilder">
            <summary>
            A builder for the options used when creating an index.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoIndexOptions">
            <summary>
            A marker interface that represents options for creating an index (see IndexOptionsDocument and the IndexOptions builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.#ctor">
            <summary>
            Initializes a new instance of the IndexOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBackground(System.Boolean)">
            <summary>
            Sets whether to build the index in the background.
            </summary>
            <param name="value">Whether to build the index in the background.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBits(System.Int32)">
            <summary>
            Sets the location precision bits.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetBucketSize(System.Double)">
            <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
            <param name="value">The bucket size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetDropDups(System.Boolean)">
            <summary>
            Sets whether duplicates should be dropped.
            </summary>
            <param name="value">Whether duplicates should be dropped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetGeoSpatialRange(System.Double,System.Double)">
            <summary>
            Sets the geospatial range.
            </summary>
            <param name="min">The min value of the range.</param>
            <param name="max">The max value of the range.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetName(System.String)">
            <summary>
            Sets the name of the index.
            </summary>
            <param name="value">The name of the index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetSparse(System.Boolean)">
            <summary>
            Sets whether the index is a sparse index.
            </summary>
            <param name="value">Whether the index is a sparse index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTextDefaultLanguage(System.String)">
            <summary>
            Sets the default language for the text index.
            </summary>
            <param name="language">The default language.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTextLanguageOverride(System.String)">
            <summary>
            Specifies the field name containing the language for the text index.
            </summary>
            <param name="fieldName">The field name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetTimeToLive(System.TimeSpan)">
            <summary>
            Sets the time to live value.
            </summary>
            <param name="timeToLive">The time to live.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetUnique(System.Boolean)">
            <summary>
            Sets whether the index enforces unique values.
            </summary>
            <param name="value">Whether the index enforces unique values.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.SetWeight(System.String,System.Int32)">
            <summary>
            Sets the weight of a field for the text index.
            </summary>
            <param name="name">The field name.</param>
            <param name="value">The weight.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexOptions`1">
            <summary>
            A builder for the options used when creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBackground(System.Boolean)">
            <summary>
            Sets whether to build the index in the background.
            </summary>
            <param name="value">Whether to build the index in the background.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBits(System.Int32)">
            <summary>
            Sets the location precision bits.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetBucketSize(System.Double)">
            <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
            <param name="value">The bucket size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetDropDups(System.Boolean)">
            <summary>
            Sets whether duplicates should be dropped.
            </summary>
            <param name="value">Whether duplicates should be dropped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetGeoSpatialRange(System.Double,System.Double)">
            <summary>
            Sets the geospatial range.
            </summary>
            <param name="min">The min value of the range.</param>
            <param name="max">The max value of the range.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetName(System.String)">
            <summary>
            Sets the name of the index.
            </summary>
            <param name="value">The name of the index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetSparse(System.Boolean)">
            <summary>
            Sets whether the index is a sparse index.
            </summary>
            <param name="value">Whether the index is a sparse index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTextDefaultLanguage(System.String)">
            <summary>
            Sets the default language for the text index.
            </summary>
            <param name="language">The default language.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTextLanguageOverride(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Specifies a member expression for the field name containing the language for the text index.
            </summary>
            <param name="memberExpression">The member expression indicating the language field name.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetTimeToLive(System.TimeSpan)">
            <summary>
            Sets the time to live value.
            </summary>
            <param name="timeToLive">The time to live.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetUnique(System.Boolean)">
            <summary>
            Sets whether the index enforces unique values.
            </summary>
            <param name="value">Whether the index enforces unique values.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptions`1.SetWeight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32)">
            <summary>
            Sets the weight of a field for the text index.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.IndexOptions`1.Null">
            <summary>
            Gets a null value with a type of IMongoIndexOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.IndexOptionsBuilder`1">
            <summary>
            A builder for the options used when creating an index.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the IndexOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBackground(System.Boolean)">
            <summary>
            Sets whether to build the index in the background.
            </summary>
            <param name="value">Whether to build the index in the background.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBits(System.Int32)">
            <summary>
            Sets the location precision bits.
            </summary>
            <param name="value">The value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetBucketSize(System.Double)">
            <summary>
            Sets the bucket size for geospatial haystack indexes.
            </summary>
            <param name="value">The bucket size.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetDropDups(System.Boolean)">
            <summary>
            Sets whether duplicates should be dropped.
            </summary>
            <param name="value">Whether duplicates should be dropped.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetGeoSpatialRange(System.Double,System.Double)">
            <summary>
            Sets the geospatial range.
            </summary>
            <param name="min">The min value of the range.</param>
            <param name="max">The max value of the range.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetName(System.String)">
            <summary>
            Sets the name of the index.
            </summary>
            <param name="value">The name of the index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetSparse(System.Boolean)">
            <summary>
            Sets whether the index is a sparse index.
            </summary>
            <param name="value">Whether the index is a sparse index.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTextDefaultLanguage(System.String)">
            <summary>
            Sets the default language for the text index.
            </summary>
            <param name="language">The default language.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTextLanguageOverride(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Specifies a member expression for the field name containing the language for the text index.
            </summary>
            <param name="memberExpression">The member expression indicating the language field name.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetTimeToLive(System.TimeSpan)">
            <summary>
            Sets the time to live value.
            </summary>
            <param name="timeToLive">The time to live.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetUnique(System.Boolean)">
            <summary>
            Sets whether the index enforces unique values.
            </summary>
            <param name="value">Whether the index enforces unique values.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.SetWeight``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Int32)">
            <summary>
            Sets the weight of a field for the text index.
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.IndexOptionsBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.MapReduceOutput">
            <summary>
            Represents the output options of a map/reduce operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.#ctor">
            <summary>
            Creates a new instance of the MapReduceOutput class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.#ctor(System.String)">
            <summary>
            Creates a new instance of the MapReduceOutput class.
            </summary>
            <param name="collectionName">The name of the output collection.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of the MapReduceOutput class.
            </summary>
            <param name="databaseName">The name of the database that will contain the output collection.</param>
            <param name="collectionName">The name of the output collection.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.op_Implicit(System.String)~MongoDB.Driver.Builders.MapReduceOutput">
            <summary>
            Allows strings to be implicitly used as the name of the output collection.
            </summary>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Replace(System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (replaces the entire collection).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Replace(System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (replaces the entire collection).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Replace(System.String,System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (replaces the entire collection).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Replace(System.String,System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (replaces the entire collection).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Merge(System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (adding new values and overwriting existing ones).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Merge(System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (adding new values and overwriting existing ones).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Merge(System.String,System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (adding new values and overwriting existing ones).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Merge(System.String,System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (adding new values and overwriting existing ones).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Reduce(System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (using the reduce function to combine new values with existing values).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Reduce(System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (using the reduce function to combine new values with existing values).
            </summary>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Reduce(System.String,System.String)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (using the reduce function to combine new values with existing values).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOutput.Reduce(System.String,System.String,System.Boolean)">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should be stored in a collection (using the reduce function to combine new values with existing values).
            </summary>
            <param name="databaseName">The output database name.</param>
            <param name="collectionName">The output collection name.</param>
            <param name="sharded">Whether the output collection is sharded.</param>
            <returns>A MapReduceOutput.</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOutput.Inline">
            <summary>
            Gets a MapReduceOutput value that specifies that the output should returned inline.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOutput.CollectionName">
            <summary>
            Gets or sets the name of the output collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOutput.DatabaseName">
            <summary>
            Gets or sets the name of the database that will contain the output collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOutput.Mode">
            <summary>
            Gets or sets the output mode for the results of the map reduce operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOutput.Sharded">
            <summary>
            Gets or sets whether the output collection is sharded.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.MapReduceOptions">
            <summary>
            A builder for the options of a Map/Reduce operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetFinalize(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Sets the finalize function.
            </summary>
            <param name="finalize">The finalize function.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetJSMode(System.Boolean)">
            <summary>
            Sets whether to use jsMode for the map reduce operation.
            </summary>
            <param name="value">Whether to use jsMode.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetKeepTemp(System.Boolean)">
            <summary>
            Sets whether to keep the temp collection (obsolete in 1.8.0+).
            </summary>
            <param name="value">Whether to keep the temp collection.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetLimit(System.Int32)">
            <summary>
            Sets the number of documents to send to the map function (useful in combination with SetSortOrder).
            </summary>
            <param name="value">The number of documents to send to the map function.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetOutput(MongoDB.Driver.Builders.MapReduceOutput)">
            <summary>
            Sets the output option (see MapReduceOutput).
            </summary>
            <param name="output">The output option.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            Sets the optional query that filters which documents are sent to the map function (also useful in combination with SetSortOrder and SetLimit).
            </summary>
            <param name="query">The query.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetScope(MongoDB.Driver.IMongoScope)">
            <summary>
            Sets a scope that contains variables that can be accessed by the map, reduce and finalize functions.
            </summary>
            <param name="scope">The scope.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
            <summary>
            Sets the sort order (useful in combination with SetLimit, your map function should not depend on the order the documents are sent to it).
            </summary>
            <param name="sortBy">The sort order.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetSortOrder(System.String[])">
            <summary>
            Sets the sort order (useful in combination with SetLimit, your map function should not depend on the order the documents are sent to it).
            </summary>
            <param name="keys">The names of the keys to sort by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptions.SetVerbose(System.Boolean)">
            <summary>
            Sets whether the server should be more verbose when logging map/reduce operations.
            </summary>
            <param name="value">Whether the server should be more verbose.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.MapReduceOptions.Null">
            <summary>
            Gets a null value with a type of IMongoMapReduceOptions.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.MapReduceOptionsBuilder">
            <summary>
            A builder for the options of a Map/Reduce operation.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoMapReduceOptions">
            <summary>
            A marker interface that represents options for a map/reduce operation (see MapReduceOptionsDocument and the MapReduceOptions builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.#ctor">
            <summary>
            Initializes a new instance of the MapReduceOptionsBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetFinalize(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Sets the finalize function.
            </summary>
            <param name="finalize">The finalize function.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetJSMode(System.Boolean)">
            <summary>
            Sets whether to use jsMode for the map reduce operation.
            </summary>
            <param name="value">Whether to use jsMode.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetKeepTemp(System.Boolean)">
            <summary>
            Sets whether to keep the temp collection (obsolete in 1.8.0+).
            </summary>
            <param name="value">Whether to keep the temp collection.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetLimit(System.Int32)">
            <summary>
            Sets the number of documents to send to the map function (useful in combination with SetSortOrder).
            </summary>
            <param name="value">The number of documents to send to the map function.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetOutput(MongoDB.Driver.Builders.MapReduceOutput)">
            <summary>
            Sets the output option (see MapReduceOutput).
            </summary>
            <param name="output">The output option.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetQuery(MongoDB.Driver.IMongoQuery)">
            <summary>
            Sets the optional query that filters which documents are sent to the map function (also useful in combination with SetSortOrder and SetLimit).
            </summary>
            <param name="query">The query.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetScope(MongoDB.Driver.IMongoScope)">
            <summary>
            Sets a scope that contains variables that can be accessed by the map, reduce and finalize functions.
            </summary>
            <param name="scope">The scope.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
            <summary>
            Sets the sort order (useful in combination with SetLimit, your map function should not depend on the order the documents are sent to it).
            </summary>
            <param name="sortBy">The sort order.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetSortOrder(System.String[])">
            <summary>
            Sets the sort order (useful in combination with SetLimit, your map function should not depend on the order the documents are sent to it).
            </summary>
            <param name="keys">The names of the keys to sort by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.SetVerbose(System.Boolean)">
            <summary>
            Sets whether the server should be more verbose when logging map/reduce operations.
            </summary>
            <param name="value">Whether the server should be more verbose.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.MapReduceOptionsBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.PushEachOptions">
            <summary>
            Arguments for $push with an $each clause.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.PushEachOptions.Position">
            <summary>
            Gets or sets the position (see $position).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.PushEachOptions.Slice">
            <summary>
            Gets or sets the slice (see $slice).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Builders.PushEachOptions.Sort">
            <summary>
            Gets or sets the sort (see $sort).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.PushEachOptionsBuilder`1">
            <summary>
            A fluent builder for PushEachOptions.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.#ctor(MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.PushEachOptionsBuilder`1"/> class.
            </summary>
            <param name="serializationInfoHelper">The serialization info helper.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Position(System.Int32)">
            <summary>
            Specifies the position for the array.
            </summary>
            <param name="position">The position.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Slice(System.Int32)">
            <summary>
            Specifies a slice for the array.
            </summary>
            <param name="slice">The slice.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortAscending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sorts the array in ascending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.SortDescending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Sorts the array in descending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>The builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.PushEachOptionsBuilder`1.Build">
            <summary>
            Builds the PushEachArgs.
            </summary>
            <returns>A built PushEachOptions.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.Query">
            <summary>
            A builder for creating queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.All(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
            <param name="queries">A list of subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.And(MongoDB.Driver.IMongoQuery[])">
            <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
            <param name="queries">A list of subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.ElemMatch(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="query">The query to match elements with.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.EQ(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Exists(System.String)">
            <summary>
            Tests that an element of that name exists (see $exists).
            </summary>
            <param name="name">The name of the element to test.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.GeoIntersects``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="name">The name.</param>
            <param name="geometry">The geometry.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.GT(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.GTE(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.In(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.LT(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.LTE(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Matches(System.String,MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="regex">The regex.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Mod(System.String,System.Int64,System.Int64)">
            <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="modulus">The modulus.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0})">
            <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="name">The name of the element to test.</param>
            <param name="point">The point.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``0},System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Near(System.String,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Not(MongoDB.Driver.IMongoQuery)">
            <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
            <param name="query">The query.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.NE(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.NotExists(System.String)">
            <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
            <param name="name">The name of the element to test.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.NotIn(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="values">The values to compare.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
            <param name="queries">The subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Or(MongoDB.Driver.IMongoQuery[])">
            <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
            <param name="queries">The subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Size(System.String,System.Int32)">
            <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThan(System.String,System.Int32)">
            <summary>
            Tests that the size of the named array is greater than some value.
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.SizeGreaterThanOrEqual(System.String,System.Int32)">
            <summary>
            Tests that the size of the named array is greater than or equal to some value.
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.SizeLessThan(System.String,System.Int32)">
            <summary>
            Tests that the size of the named array is less than some value.
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.SizeLessThanOrEqual(System.String,System.Int32)">
            <summary>
            Tests that the size of the named array is less than or equal to some value.
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Type(System.String,MongoDB.Bson.BsonType)">
            <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="type">The type to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Where(MongoDB.Bson.BsonJavaScript)">
            <summary>
            Tests that a JavaScript expression is true (see $where).
            </summary>
            <param name="javascript">The javascript.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Within``1(System.String,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``0})">
            <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="name">The name of the element to test.</param>
            <param name="polygon">The polygon.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.WithinCircle(System.String,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.WithinPolygon(System.String,System.Double[0:,0:])">
            <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.WithinRectangle(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
            <param name="name">The name of the element to test.</param>
            <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
            <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
            <param name="upperRightX">The x coordinate of the upper right corner.</param>
            <param name="upperRightY">The y coordinate of the upper right corner.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Text(System.String)">
            <summary>
            Generate a text search query that tests whether the given search string is present.
            </summary>
            <param name="searchString">The search string.</param>
            <returns>An IMongoQuery that represents the text search.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query.Text(System.String,System.String)">
            <summary>
            Generate a text search query that tests whether the given search string is present using the specified language's rules. 
            Specifies use of language appropriate stop words, stemming rules etc.
            </summary>
            <param name="searchString">The search string.</param>
            <param name="language">The language to restrict the search by.</param>
            <returns>An IMongoQuery that represents the text search for the particular language.</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.Query.Null">
            <summary>
            Gets a null value with a type of IMongoQuery.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.Query`1">
            <summary>
            Aids in building mongo queries based on type information.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
            <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="geometry">The geometry.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="regex">The regex.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="regex">The regex.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
            <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="modulus">The modulus.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
            <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="modulus">The modulus.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
            <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="point">The point.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to compare.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
            <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="type">The type to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
            <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="type">The type to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Builds a query from an expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
            <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="polygon">The polygon.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
            <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Query`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
            <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
            <param name="upperRightX">The x coordinate of the upper right corner.</param>
            <param name="upperRightY">The y coordinate of the upper right corner.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.QueryBuilder`1">
            <summary>
            Aids in building mongo queries based on type information.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.QueryBuilder`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.#ctor(MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.QueryBuilder`1"/> class.
            </summary>
            <param name="serializationInfoHelper">The serialization info helper.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.All``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the named array element contains all of the values (see $all).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
            <param name="queries">A list of subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.And(MongoDB.Driver.IMongoQuery[])">
            <summary>
            Tests that all the queries are true (see $and in newer versions of the server).
            </summary>
            <param name="queries">A list of subqueries.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.ElemMatch``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that at least one item of the named array element matches a query (see $elemMatch).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is equal to some value.
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.EQ``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is equal to some value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Exists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Tests that an element of that name does or does not exist (see $exists).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GeoIntersects``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``1})">
            <summary>
            Tests that a location element specified by name intersects with the geometry (see $geoIntersects).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="geometry">The geometry.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is greater than some value (see $gt).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is greater than some value (see $lt).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is greater than or equal to some value (see $gte).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.GTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is greater than or equal to some value (see $gte).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the value of the named element is equal to one of a list of values (see $in).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.In``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that any of the values in the named array element are equal to one of a list of values (see $in).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is less than some value (see $lt).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LT``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is less than some value (see $lt).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that the value of the named element is less than or equal to some value (see $lte).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.LTE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that any of the values in the named array element is less than or equal to some value (see $lte).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.String}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Tests that the value of the named element matches a regular expression (see $regex).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="regex">The regex.</param>
            <returns>
            A query.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Matches(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.String}}},MongoDB.Bson.BsonRegularExpression)">
            <summary>
            Tests that any of the values in the named array element matches a regular expression (see $regex).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="regex">The regex.</param>
            <returns>
            A query.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int64,System.Int64)">
            <summary>
            Tests that the modulus of the value of the named element matches some value (see $mod).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="modulus">The modulus.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Mod(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{System.Int32}}},System.Int64,System.Int64)">
            <summary>
            Tests that the any of the values in the named array element match some value (see $mod).
            </summary>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="modulus">The modulus.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1})">
            <summary>
            Tests that the value of the named element is near a point (see $near).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="point">The point.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{``1},System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="point">The point.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> then the query will be translated to $nearSphere.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Near``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is near some location (see $near).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="x">The x value of the origin.</param>
            <param name="y">The y value of the origin.</param>
            <param name="maxDistance">The max distance.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Not(MongoDB.Driver.IMongoQuery)">
            <summary>
            Tests that the inverse of the query is true (see $not).
            </summary>
            <param name="query">The query.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Tests that an element does not equal the value (see $ne).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NE``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Tests that none of the values in the named array element is equal to some value (see $ne).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="value">The value to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotExists``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Tests that an element of that name does not exist (see $exists).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the value of the named element is not equal to any item in a list of values (see $nin).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="values">The values to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.NotIn``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Tests that the none of the values of the named array element is equal to any item in a list of values (see $nin).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to compare.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoQuery})">
            <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
            <param name="queries">The subqueries.</param>
            <returns>
            A query.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Or(MongoDB.Driver.IMongoQuery[])">
            <summary>
            Tests that at least one of the subqueries is true (see $or).
            </summary>
            <param name="queries">The subqueries.</param>
            <returns>
            A query.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Size``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Int32)">
            <summary>
            Tests that the size of the named array is equal to some value (see $size).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="size">The size to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Bson.BsonType)">
            <summary>
            Tests that the type of the named element is equal to some type (see $type).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="type">The type to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Type``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Bson.BsonType)">
            <summary>
            Tests that any of the values in the named array element is equal to some type (see $type).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="type">The type to compare to.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Builds a query from an expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.Within``2(System.Linq.Expressions.Expression{System.Func{`0,``0}},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{``1})">
            <summary>
            Tests that the value of the named element is within the specified geometry (see $within).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="polygon">The polygon.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinCircle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Tests that the value of the named element is within a circle (see $within and $center).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="centerX">The x coordinate of the origin.</param>
            <param name="centerY">The y coordinate of the origin.</param>
            <param name="radius">The radius of the circle.</param>
            <param name="spherical">if set to <c>true</c> [spherical].</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinPolygon``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double[0:,0:])">
            <summary>
            Tests that the value of the named element is within a polygon (see $within and $polygon).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="points">An array of points that defines the polygon (the second dimension must be of length 2).</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.QueryBuilder`1.WithinRectangle``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Tests that the value of the named element is within a rectangle (see $within and $box).
            </summary>
            <typeparam name="TMember">The member type.</typeparam>
            <param name="memberExpression">The member expression representing the element to test.</param>
            <param name="lowerLeftX">The x coordinate of the lower left corner.</param>
            <param name="lowerLeftY">The y coordinate of the lower left corner.</param>
            <param name="upperRightX">The x coordinate of the upper right corner.</param>
            <param name="upperRightY">The y coordinate of the upper right corner.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.SortBy">
            <summary>
            A builder for specifying a sort order.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy.Ascending(System.String[])">
            <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
            <param name="keys">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy.Descending(System.String[])">
            <summary>
            Adds keys to be sorted by in descending order.
            </summary>
            <param name="keys">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy.MetaTextScore(System.String)">
            <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
            <param name="key">The name of the computed relevance score field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="P:MongoDB.Driver.Builders.SortBy.Null">
            <summary>
            Gets a null value with a type of IMongoSortBy.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Builders.SortByBuilder">
            <summary>
            A builder for specifying a sort order.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoSortBy">
            <summary>
            A marker interface that represents a sort order (see SortByDocument and the SortBy builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder.#ctor">
            <summary>
            Initializes a new instance of the SortByBuider class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder.Ascending(System.String[])">
            <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
            <param name="keys">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder.Descending(System.String[])">
            <summary>
            Adds keys to be sorted by in descending order.
            </summary>
            <param name="keys">One or more key names.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder.MetaTextScore(System.String)">
            <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
            <param name="key">The name of the computed relevance score field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.SortBy`1">
            <summary>
            A builder for specifying a sort order.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds keys to be sorted by in descending order.
            </summary>
            <param name="memberExpressions">The member expressions.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortBy`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
            <param name="memberExpression">The member expression specifying the projected field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.SortByBuilder`1">
            <summary>
            A builder for specifying a sort order.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.SortByBuilder`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.#ctor(MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Builders.SortByBuilder`1"/> class.
            </summary>
            <param name="serializationInfoHelper">The serialization info helper.</param>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Ascending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds keys to be sorted by in ascending order.
            </summary>
            <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.Descending(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Adds keys to be sorted by in descending order.
            </summary>
            <param name="memberExpressions">The member expressions indicating which elements to sort by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.MetaTextScore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Adds a key to sort by the computed relevance score when using text search. The name of the key should be
            the name of the projected relevance score field.
            </summary>
            <param name="memberExpression">The member expression specifying the projected field.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.SortByBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.Update">
            <summary>
            A builder for creating update modifiers.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSet(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetEachWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.AddToSetWrapped``1(System.String,``0)">
            <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseAnd(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseOr(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.BitwiseXor(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
            <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
            <param name="updates">The UpdateBuilders to combine.</param>
            <returns>A combined UpdateBuilder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Combine(MongoDB.Driver.IMongoUpdate[])">
            <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
            <param name="updates">The UpdateBuilders to combine.</param>
            <returns>A combined UpdateBuilder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String)">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="name">The name of the element.</param>
            <param name="type">The type to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Double)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int32)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Inc(System.String,System.Int64)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Max(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
            <param name="name">The name of the element to be updated.</param>
            <param name="value">The value to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Min(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
            <param name="name">The name of the element to be updated.</param>
            <param name="value">The value to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Double)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int32)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Mul(System.String,System.Int64)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PopFirst(System.String)">
            <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
            <param name="name">The name of the array element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PopLast(System.String)">
            <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
            <param name="name">The name of the array element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Pull(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="query">A query that specifies which elements to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullAll(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullAllWrapped``1(System.String,``0[])">
            <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PullWrapped``1(System.String,``0)">
            <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Push(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushAll(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushAllWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.PushWrapped``1(System.String,``0)">
            <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Rename(System.String,System.String)">
            <summary>
            Renames an element (see $rename).
            </summary>
            <param name="oldElementName">The name of the element to be renamed.</param>
            <param name="newElementName">The new name of the element.</param>
            <returns>An UpdateDocuemnt.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Replace``1(``0)">
            <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
            <typeparam name="TNominalType">The nominal type of the replacement document</typeparam>
            <param name="document">The replacement document.</param>
            <returns>An UpdateWrapper.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Replace(System.Type,System.Object)">
            <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
            <param name="nominalType">The nominal type of the replacement document</param>
            <param name="document">The replacement document.</param>
            <returns>An UpdateWrapper.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Set(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.SetWrapped``1(System.String,``0)">
            <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new wrapped value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update.Unset(System.String)">
            <summary>
            Removes the named element from the document (see $unset).
            </summary>
            <param name="name">The name of the element to be removed.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.UpdateBuilder">
            <summary>
            A builder for creating update modifiers.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoUpdate">
            <summary>
            A marker interface that represents an update modifier (see UpdateDocument and the Update builder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.#ctor">
            <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSet(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEach(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetEachWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of wrapped values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.AddToSetWrapped``1(System.String,``0)">
            <summary>
            Adds a wrapped value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to add to the set.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseAnd(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseOr(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int32)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.BitwiseXor(System.String,System.Int64)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="name">The name of the element to be modified.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Combine(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Combines another UpdateBuilder into this one.
            </summary>
            <param name="other">The IMongoUpdate to combine into this one.</param>
            <returns>A combined UpdateBuilder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String)">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="name">The name of the element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.CurrentDate(System.String,MongoDB.Driver.Builders.UpdateCurrentDateType)">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="name">The name of the element.</param>
            <param name="type">The type to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Double)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int32)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Inc(System.String,System.Int64)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="name">The name of the element to be incremented.</param>
            <param name="value">The value to increment by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Max(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
            <param name="name">The name of the element to be updated.</param>
            <param name="value">The value to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Min(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
            <param name="name">The name of the element to be updated.</param>
            <param name="value">The value to use.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Double)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int32)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Mul(System.String,System.Int64)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="name">The name of the element to be multiplied.</param>
            <param name="value">The value to multiply by.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopFirst(System.String)">
            <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
            <param name="name">The name of the array element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PopLast(System.String)">
            <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
            <param name="name">The name of the array element.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Pull(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="query">A query that specifies which elements to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAll(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullAllWrapped``1(System.String,``0[])">
            <summary>
            Removes all values from the named array element that are equal to any of a list of wrapped values (see $pullAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PullWrapped``1(System.String,``0)">
            <summary>
            Removes all values from the named array element that are equal to some wrapped value (see $pull).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to remove.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Push(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="value">The value to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAll(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushAllWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of wrapped values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="T">The type of wrapped values.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="values">The wrapped values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonArray)">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEach(System.String,MongoDB.Driver.Builders.PushEachOptions,MongoDB.Bson.BsonValue[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,``0[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="args">The args.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushEachWrapped``1(System.String,MongoDB.Driver.Builders.PushEachOptions,``0[])">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="name">The name of the array element.</param>
            <param name="args">The args.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.PushWrapped``1(System.String,``0)">
            <summary>
            Adds a wrapped value to the end of the named array element (see $push).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the array element.</param>
            <param name="value">The wrapped value to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Rename(System.String,System.String)">
            <summary>
            Renames an element (see $rename).
            </summary>
            <param name="oldElementName">The old element name.</param>
            <param name="newElementName">The new element name.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Set(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetOnInsert(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.SetWrapped``1(System.String,``0)">
            <summary>
            Sets the value of the named element to a new wrapped value (see $set).
            </summary>
            <typeparam name="T">The type of wrapped value.</typeparam>
            <param name="name">The name of the element to be set.</param>
            <param name="value">The new wrapped value.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.ToBsonDocument">
            <summary>
            Returns the result of the builder as a BsonDocument.
            </summary>
            <returns>A BsonDocument.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder.Unset(System.String)">
            <summary>
            Removes the named element from the document (see $unset).
            </summary>
            <param name="name">The name of the element to be removed.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.Update`1">
            <summary>
            A builder for creating update modifiers.
            </summary>
            <typeparam name="TDocument">The document type.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to add to the set.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to add to the set.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Combine(System.Collections.Generic.IEnumerable{MongoDB.Driver.IMongoUpdate})">
            <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
            <param name="updates">The UpdateBuilders to combine.</param>
            <returns>
            A combined UpdateBuilder.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Combine(MongoDB.Driver.IMongoUpdate[])">
            <summary>
            Combines several UpdateBuilders into a single UpdateBuilder.
            </summary>
            <param name="updates">The updates to combine.</param>
            <returns>
            A combined UpdateBuilder.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to use.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to use.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to remove.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to remove.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to add to the end of the array.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Replace(`0)">
            <summary>
            Replaces the entire document with a new document (the _id must remain the same).
            </summary>
            <param name="document">The replacement document.</param>
            <returns>An UpdateWrapper.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The new value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The new value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.Update`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Removes the named element from the document (see $unset).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Builders.UpdateBuilder`1">
            <summary>
            A builder for creating update modifiers.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the UpdateBuilder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSet``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Adds a value to a named array element if the value is not already in the array (see $addToSet).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to add to the set.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.AddToSetEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to a named array element adding each value only if it not already in the array (see $addToSet and $each).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to add to the set.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseAnd(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise and of its value with another value (see $bit with "and").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be and-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseOr(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise or of its value with another value (see $bit with "or").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be or-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.BitwiseXor(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Sets the named element to the bitwise xor of its value with another value (see $bit with "xor").
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to be xor-ed with the current value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Combine(MongoDB.Driver.IMongoUpdate)">
            <summary>
            Combines another UpdateBuilder into this one.
            </summary>
            <param name="other">The UpdateBuilder to combine into this one.</param>
            <returns>A combined UpdateBuilder.</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonDateTime}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.CurrentDate(System.Linq.Expressions.Expression{System.Func{`0,MongoDB.Bson.BsonTimestamp}})">
            <summary>
            Sets the value of the named element to the current date (see $currentDate).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Inc(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Increments the named element by a value (see $inc).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to increment by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Max``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Updates the named element if and only if the provided value is greater than its current value (see $max).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to use.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
            <exception cref="T:System.ArgumentNullException">memberExpression</exception>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Min``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Updates the named element if and only if the provided value is less than its current value (see $max).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to use.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Double}},System.Double)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int32}},System.Int32)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Mul(System.Linq.Expressions.Expression{System.Func{`0,System.Int64}},System.Int64)">
            <summary>
            Multiplies the named element by a value (see $mul).
            </summary>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to multiply by.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopFirst``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Removes the first value from the named array element (see $pop).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PopLast``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
            Removes the last value from the named array element (see $pop).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Removes all values from the named array element that are equal to some value (see $pull).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to remove.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Pull``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Func{MongoDB.Driver.Builders.QueryBuilder{``0},MongoDB.Driver.IMongoQuery})">
            <summary>
            Removes all values from the named array element that match some query (see $pull).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="elementQueryBuilderFunction">A function that builds a query using the supplied query builder.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PullAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Removes all values from the named array element that are equal to any of a list of values (see $pullAll).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to remove.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Push``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},``0)">
            <summary>
            Adds a value to the end of the named array element (see $push).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value to add to the end of the array.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushAll``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $pushAll).
            </summary>
            <typeparam name="TValue">The type of the enumerable member values.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <param name="memberExpression">The name of the array element.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},MongoDB.Driver.Builders.PushEachOptions,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
            <exception cref="T:System.ArgumentNullException">memberExpression</exception>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.PushEach``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}},System.Action{MongoDB.Driver.Builders.PushEachOptionsBuilder{``0}},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a list of values to the end of the named array element (see $push and $each).
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="memberExpression">The name of the array element.</param>
            <param name="options">The options.</param>
            <param name="values">The values to add to the end of the array.</param>
            <returns>The builder (so method calls can be chained).</returns>
            <exception cref="T:System.ArgumentNullException">memberExpression</exception>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Set``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the value of the named element to a new value (see $set).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The new value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.SetOnInsert``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
            Sets the value of the named element to the specified value only when an insert occurs
            as part of an upsert operation (see $setOnInsert).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The new value.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Builders.UpdateBuilder`1.Unset``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Removes the named element from the document (see $unset).
            </summary>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <returns>
            The builder (so method calls can be chained).
            </returns>
        </member>
        <member name="T:MongoDB.Driver.CanCommandBeSentToSecondary">
            <summary>
            Represents a container for the CanCommandBeSentToSecondary delegate.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CanCommandBeSentToSecondary.DefaultImplementation(MongoDB.Bson.BsonDocument)">
            <summary>
            Default implementation of the CanCommandBeSentToSecondary delegate.
            </summary>
            <param name="document">The command.</param>
            <returns>True if the command can be sent to a secondary member of a replica set.</returns>
        </member>
        <member name="P:MongoDB.Driver.CanCommandBeSentToSecondary.Delegate">
            <summary>
            Gets or sets the CanCommandBeSentToSecondary delegate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.AggregateResult">
            <summary>
            Represents the results of a Aggregate command.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CommandResult">
            <summary>
            Represents the result of a command (there are also subclasses for various commands).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CommandResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CommandResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.Code">
            <summary>
            Gets the code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.Command">
            <summary>
            Gets the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.CommandName">
            <summary>
            Gets the command name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.Response">
            <summary>
            Gets the response.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.ErrorMessage">
            <summary>
            Gets the error message (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.Ok">
            <summary>
            Gets the Ok value from the response.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CommandResult.ServerInstance">
            <summary>
            Gets the server instance this command was executed on.
            </summary>
            <value>
            The server instance.
            </value>
        </member>
        <member name="M:MongoDB.Driver.AggregateResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AggregateResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.AggregateResult.CursorId">
            <summary>
            Gets the cursor id.
            </summary>
            <value>
            The cursor id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.AggregateResult.ResultDocuments">
            <summary>
            Gets the result documents (either the Inline results or the first batch if a cursor was used).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollectionSystemFlags">
            <summary>
            Represents collection system flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollectionSystemFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollectionSystemFlags.HasIdIndex">
            <summary>
            The collection has an _id index.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollectionUserFlags">
            <summary>
            Represents collection user flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollectionUserFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.CollectionUserFlags.UsePowerOf2Sizes">
            <summary>
            User power of 2 size.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollectionStatsResult">
            <summary>
            Represents the results of the collection stats command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CollectionStatsResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.CollectionStatsResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.AverageObjectSize">
            <summary>
            Gets the average object size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.DataSize">
            <summary>
            Gets the data size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.ExtentCount">
            <summary>
            Gets the extent count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.Flags">
            <summary>
            Gets the flags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexCount">
            <summary>
            Gets the index count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizes">
            <summary>
            Gets the index sizes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IsCapped">
            <summary>
            Gets whether the collection is capped.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.LastExtentSize">
            <summary>
            Gets the last extent size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.MaxDocuments">
            <summary>
            Gets the index count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.Namespace">
            <summary>
            Gets the namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.ObjectCount">
            <summary>
            Gets the object count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.PaddingFactor">
            <summary>
            Gets the padding factor.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.StorageSize">
            <summary>
            Gets the storage size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.SystemFlags">
            <summary>
            Gets the system flags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.TotalIndexSize">
            <summary>
            Gets the total index size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.UserFlags">
            <summary>
            Gets the user flags.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CollectionStatsResult.IndexSizesResult">
            <summary>
            Represents a collection of index sizes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the IndexSizesResult class.
            </summary>
            <param name="indexSizes">The index sizes document.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.ContainsKey(System.String)">
            <summary>
            Tests whether the results contain the size of an index.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>True if the results contain the size of the index.</returns>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Item(System.String)">
            <summary>
            Gets the size of an index.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>The size of the index.</returns>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Count">
            <summary>
            Gets the count of indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Keys">
            <summary>
            Gets the names of the indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.CollectionStatsResult.IndexSizesResult.Values">
            <summary>
            Gets the sizes of the indexes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.CommandResultSerializer`1">
            <summary>
            Represents a serializer for a CommandResult.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CommandResultSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Driver.DatabaseStatsResult">
            <summary>
            Represents the result of the database stats command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DatabaseStatsResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DatabaseStatsResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.AverageObjectSize">
            <summary>
            Gets the average object size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.CollectionCount">
            <summary>
            Gets the collection count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.DataSize">
            <summary>
            Gets the data size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.ExtentCount">
            <summary>
            Gets the extent count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.FileSize">
            <summary>
            Gets the file size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.IndexCount">
            <summary>
            Gets the index count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.IndexSize">
            <summary>
            Gets the index size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.ObjectCount">
            <summary>
            Gets the object count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.DatabaseStatsResult.StorageSize">
            <summary>
            Gets the storage size.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DistinctCommandResult`1">
            <summary>
            Represents the result of a command (there are also subclasses for various commands).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DistinctCommandResult`1.#ctor(MongoDB.Bson.BsonDocument,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DistinctCommandResult`1"/> class.
            </summary>
            <param name="response">The response.</param>
            <param name="values">The values.</param>
        </member>
        <member name="P:MongoDB.Driver.DistinctCommandResult`1.Values">
            <summary>
            Gets the values.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="T:MongoDB.Driver.DistinctCommandResultSerializer`1">
            <summary>
            Represents a serializer for a DistinctCommandResult with values of type TValue.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.DistinctCommandResultSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DistinctCommandResultSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DistinctCommandResultSerializer`1.#ctor(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DistinctCommandResultSerializer`1"/> class.
            </summary>
            <param name="valueSerializer">The value serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.DistinctCommandResultSerializer`1.Deserialize(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:MongoDB.Driver.FindAndModifyResult">
            <summary>
            Represents the result of a FindAndModify command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FindAndModifyResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.FindAndModifyResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:MongoDB.Driver.FindAndModifyResult.GetModifiedDocumentAs``1">
            <summary>
            Gets the modified document as a TDocument.
            </summary>
            <typeparam name="TDocument">The nominal type of the modified document.</typeparam>
            <returns>The modified document.</returns>
        </member>
        <member name="M:MongoDB.Driver.FindAndModifyResult.GetModifiedDocumentAs(System.Type)">
            <summary>
            Gets the modified document as a TDocument.
            </summary>
            <param name="documentType">The nominal type of the modified document.</param>
            <returns>The modified document.</returns>
        </member>
        <member name="P:MongoDB.Driver.FindAndModifyResult.ModifiedDocument">
            <summary>
            Gets the modified document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult">
            <summary>
            Represents the result of a GeoHaystackSearch command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoHaystackSearchResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.Hits">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.Stats">
            <summary>
            Gets the stats.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.HitsImplementation">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits">
            <summary>
            Represents a collection of GeoHaystackSearch hits.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.#ctor">
            <summary>
            Initializes a new instance of the GeoHaystackSearchHits class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetEnumerator">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetEnumeratorImplementation">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.GetHitImplementation(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.Count">
            <summary>
            Gets the count of the number of hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHits.Item(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit">
            <summary>
            Represents a GeoHaystackSearch hit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchHit class.
            </summary>
            <param name="hit">The hit.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.RawDocument">
            <summary>
            Gets the document as a BsonDocument.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchHit.DocumentImplementation">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats">
            <summary>
            Represents the stats of a GeoHaystackSearch command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchStats class.
            </summary>
            <param name="stats">The stats.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.BTreeMatches">
            <summary>
            Gets the count of b-tree matches.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult.GeoHaystackSearchStats.NumberOfHits">
            <summary>
            Gets the number of hits.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1">
            <summary>
            Represents the result of a GeoHaystackSearch command.
            </summary>
            <typeparam name="TDocument">The type of the returned documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.Hits">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.HitsImplementation">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits">
            <summary>
            Represents a collection of GeoHaystackSearch hits.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.#ctor(MongoDB.Bson.BsonArray)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchHits class.
            </summary>
            <param name="hits">The hits.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetEnumerator">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetHitImplementation(System.Int32)">
            <summary>
            Gets a hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.GetEnumeratorImplementation">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.Count">
            <summary>
            Gets the count of the number of hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHits.Item(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit">
            <summary>
            Represents a GeoHaystackSearch hit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchHit class.
            </summary>
            <param name="hit">The hit.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchResult`1.GeoHaystackSearchHit.DocumentImplementation">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult">
            <summary>
            Represents the result of a GeoNear command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.Hits">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.Namespace">
            <summary>
            Gets the namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.Stats">
            <summary>
            Gets the stats.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.HitsImplementation">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult.GeoNearHits">
            <summary>
            Represents a collection of GeoNear hits.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.#ctor">
            <summary>
            Initializes a new instance of the GeoNearHits class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetEnumerator">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetEnumeratorImplementation">
            <summary>
            Gets the enumerator.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHits.GetHitImplementation(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHits.Count">
            <summary>
            Gets the count of the number of hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHits.Item(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult.GeoNearHit">
            <summary>
            Represents a GeoNear hit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearHit.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoNearHit class.
            </summary>
            <param name="hit">The hit.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.Distance">
            <summary>
            Gets the distance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.RawDocument">
            <summary>
            Gets the document as a BsonDocument.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearHit.DocumentImplementation">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult.GeoNearStats">
            <summary>
            Represents the stats of a GeoNear command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult.GeoNearStats.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoNearStats class.
            </summary>
            <param name="stats">The stats.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.AverageDistance">
            <summary>
            Gets the average distance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.BTreeLocations">
            <summary>
            Gets the count of b-tree locations.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.MaxDistance">
            <summary>
            Gets the max distance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.NumberScanned">
            <summary>
            Gets the number of documents scanned.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult.GeoNearStats.ObjectsLoaded">
            <summary>
            Gets the number of documents loaded.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult`1">
            <summary>
            Represents the result of a GeoNear command.
            </summary>
            <typeparam name="TDocument">The type of the returned documents.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearResult`1"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.Hits">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.HitsImplementation">
            <summary>
            Gets the hits.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult`1.GeoNearHits">
            <summary>
            Represents a collection of GeoNear hits.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.#ctor(MongoDB.Bson.BsonArray)">
            <summary>
            Initializes a new instance of the GeoNearHits class.
            </summary>
            <param name="hits">The hits.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetEnumerator">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetHitImplementation(System.Int32)">
            <summary>
            Gets a hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHits.GetEnumeratorImplementation">
            <summary>
            Gets an enumerator for the hits.
            </summary>
            <returns>An enumerator.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHits.Count">
            <summary>
            Gets the count of the number of hits.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHits.Item(System.Int32)">
            <summary>
            Gets an individual hit.
            </summary>
            <param name="index">The zero based index of the hit.</param>
            <returns>The hit.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoNearResult`1.GeoNearHit">
            <summary>
            Represents a GeoNear hit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearResult`1.GeoNearHit.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the GeoNearHit class.
            </summary>
            <param name="hit">The hit.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHit.Document">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearResult`1.GeoNearHit.DocumentImplementation">
            <summary>
            Gets the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteConcernResult">
            <summary>
            Represents the results of an operation performed with WriteConcern enabled.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SafeModeResult">
            <summary>
            Represents the results of an operation performed with WriteConcern enabled.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GetLastErrorResult">
            <summary>
            Represents the results of a GetLastError command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GetLastErrorResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GetLastErrorResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GetLastErrorResult.DocumentsAffected">
            <summary>
            Gets the number of documents affected.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetLastErrorResult.HasLastErrorMessage">
            <summary>
            Gets whether the result has a LastErrorMessage.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetLastErrorResult.LastErrorMessage">
            <summary>
            Gets the last error message (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetLastErrorResult.Upserted">
            <summary>
            Gets the _id of an upsert that resulted in an insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetLastErrorResult.UpdatedExisting">
            <summary>
            Gets whether the last command updated an existing document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SafeModeResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SafeModeResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcernResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcernResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="T:MongoDB.Driver.GetProfilingLevelResult">
            <summary>
            Represents the results of a GetProfilingLevel command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GetProfilingLevelResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GetProfilingLevelResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.GetProfilingLevelResult.Level">
            <summary>
            Gets the profiling level.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetProfilingLevelResult.Slow">
            <summary>
            Gets the threshold for a slow query.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IsMasterResult">
            <summary>
            Represents the result of an isMaster command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IsMasterResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.IsMasterResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Arbiters">
            <summary>
            Gets the arbiters.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Hosts">
            <summary>
            Gets the hosts.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.IsArbiterOnly">
            <summary>
            Gets whether the server is an arbiter.
            </summary>
            <value>
              <c>true</c> if the server is an arbiter; otherwise, <c>false.</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.IsPrimary">
            <summary>
            Gets whether the server is the primary.
            </summary>
            <value>
              <c>true</c> if the server is the primary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.IsPassive">
            <summary>
            Gets whether the server is a passive member.
            </summary>
            <value>
              <c>true</c> if the server is a passive member; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.IsReplicaSet">
            <summary>
            Gets a value indicating whether this instance is replica set.
            </summary>
            <value>
              <c>true</c> if this instance is replica set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.IsSecondary">
            <summary>
            Gets whether the server is secondary.
            </summary>
            <value>
              <c>true</c> if the server is secondary; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MaxBsonObjectSize">
            <summary>
            Gets the size of the max bson object.
            </summary>
            <value>
            The size of the max bson object.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MaxMessageLength">
            <summary>
            Gets the length of the max message.
            </summary>
            <value>
            The length of the max message.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MaxWireVersion">
            <summary>
            Gets the max wire version.
            </summary>
            <value>
            The max wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MinWireVersion">
            <summary>
            Gets the min wire version.
            </summary>
            <value>
            The min wire version.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MaxWriteBatchSize">
            <summary>
            Gets the maximum size of the write batch.
            </summary>
            <value>
            The maximum size of the write batch.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.MyAddress">
            <summary>
            Gets the name of the instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Passives">
            <summary>
            Gets the passives.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Primary">
            <summary>
            Gets the primary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
            <value>
            The name of the replica set.
            </value>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.Tags">
            <summary>
            Gets the tags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IsMasterResult.ReplicaSetConfigVersion">
            <summary>
             Gets the replica set config version if present. If not returns null
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ValidateCollectionResult">
            <summary>
            Represents the results of a validate collection command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ValidateCollectionResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ValidateCollectionResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.DataSize">
            <summary>
            Gets the data size of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.DeletedCount">
            <summary>
            Gets the number of documents that have been deleted from the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.DeletedSize">
            <summary>
            Gets the number of documents that have been deleted from the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.Errors">
            <summary>
            Gets the errors returned by validate (or an empty array if there were no errors).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentCount">
            <summary>
            Gets the number of extents in the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.FirstExtent">
            <summary>
            Gets the first extent of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.FirstExtentDetails">
            <summary>
            Gets details of the first extent of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.IndexCount">
            <summary>
            Gets the number of indexes in the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.IsValid">
            <summary>
            Gets whether the collection is valid.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.KeysPerIndex">
            <summary>
            Gets a dictionary containing the number of keys per index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.LastExtent">
            <summary>
            Gets the last extent of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.LastExtentSize">
            <summary>
            Gets the size of the last extent of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.Namespace">
            <summary>
            Gets the namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.Padding">
            <summary>
            Gets the padding factor of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.RecordCount">
            <summary>
            Gets the number of records in the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ResultString">
            <summary>
            Gets the result string.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.Warning">
            <summary>
            Gets any warning returned by the validate command (or null if there is no warning).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ValidateCollectionResult.ExtentDetails">
            <summary>
            Represents the details of the first extent of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.Loc">
            <summary>
            Gets the location of the extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.FirstRecord">
            <summary>
            Gets the location of the first record of the extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.LastRecord">
            <summary>
            Gets the location of the last record of the extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.NSDiag">
            <summary>
            Gets the nsdiag value of the extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.Size">
            <summary>
            Gets the size of the extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.XNext">
            <summary>
            Gets the next extent.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionResult.ExtentDetails.XPrev">
            <summary>
            Gets the prev extent.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.MongoServerProxyType">
            <summary>
            Represents the type of an IMongoServerProxy.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoServerProxyType.Unknown">
            <summary>
            The type of the proxy is not yet known.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoServerProxyType.Direct">
            <summary>
            A proxy to a single node.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoServerProxyType.ReplicaSet">
            <summary>
            A proxy to a replica set.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoServerProxyType.Sharded">
            <summary>
            A proxy to a sharded router.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Authenticator">
            <summary>
            Authenticates credentials against MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Authenticator.#ctor(MongoDB.Driver.Internal.MongoConnection,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoCredential})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Authenticator"/> class.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Authenticator.Authenticate">
            <summary>
            Authenticates the specified connection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoServerInstanceType">
            <summary>
            Represents an instance of a MongoDB server host (in the case of a replica set a MongoServer uses multiple MongoServerInstances).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerInstanceType.Unknown">
            <summary>
            The server instance type is unknown.  This is the default.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerInstanceType.StandAlone">
            <summary>
            The server is a standalone instance.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerInstanceType.ReplicaSetMember">
            <summary>
            The server is a replica set member.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerInstanceType.ShardRouter">
            <summary>
            The server is a shard router (mongos).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.PlainMechanism">
            <summary>
            Implements the SASL-PLAIN rfc: http://tools.ietf.org/html/rfc4616.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.ISaslMechanism">
            <summary>
            Represents a sasl mechanism.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.ISaslMechanism.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can authenticate with the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can authenticate with the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.ISaslMechanism.Initialize(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Initializes the mechanism.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
            <returns>The initial step.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.ISaslMechanism.Name">
            <summary>
            Gets the name of the mechanism.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.PlainMechanism.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can authenticate with the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can authenticate with the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.PlainMechanism.Initialize(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Initializes the mechanism.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
            <returns>
            The initial step.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.PlainMechanism.Name">
            <summary>
            Gets the name of the mechanism.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.SaslImplementationBase">
            <summary>
            Base implementation for a sasl step to provide some common methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.SaslImplementationBase.GetMongoPassword(System.Security.Cryptography.MD5,System.Text.Encoding,System.String,System.String)">
            <summary>
            Gets the mongo password.
            </summary>
            <param name="md5">The MD5.</param>
            <param name="encoding">The encoding.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.SaslImplementationBase.ToHexString(System.Byte[])">
            <summary>
            To the hex string.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.GetError(System.Int32)">
            <summary>
            Gets the description of an error code.
            </summary>
            <param name="error">The error.</param>
            <returns>The description.</returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_client_start(MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext,System.String,MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession@)">
            <summary>
            Begins a GsaslSession.
            </summary>
            <param name="context">The context.</param>
            <param name="mechanism">The mechanism.</param>
            <param name="session">The session.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_done(System.IntPtr)">
            <summary>
            Frees a GsaslContext.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_finish(System.IntPtr)">
            <summary>
            Frees a GsaslSession.
            </summary>
            <param name="session">The session.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_free(System.IntPtr)">
            <summary>
            Frees memory allocated by libgsasl.
            </summary>
            <param name="ptr">The PTR.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_init(MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext@)">
            <summary>
            Initiates a GsaslContext.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_property_set(MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession,MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslProperty,System.String)">
            <summary>
            Sets a property on a GsaslSession.
            </summary>
            <param name="session">The session.</param>
            <param name="prop">The prop.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_step(MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession,System.IntPtr,System.Int32,System.IntPtr@,System.Int32@)">
            <summary>
            Steps through the state machine.
            </summary>
            <param name="session">The session.</param>
            <param name="input">The input.</param>
            <param name="input_len">The input_len.</param>
            <param name="output">The output.</param>
            <param name="output_len">The output_len.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.Gsasl.gsasl_strerror(System.Int32)">
            <summary>
            Gets a description for the error code.
            </summary>
            <param name="err">The err.</param>
            <returns>A string describing the error.</returns>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext">
            <summary>
            A handle to a gsasl context.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext.Initialize">
            <summary>
            Initializes this instance.
            </summary>
            <returns></returns>
            <exception cref="T:System.Exception">Unable to initialize context.</exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext.BeginSession(System.String)">
            <summary>
            Begins the session.
            </summary>
            <param name="mechanism">The mechanism.</param>
            <returns>A GsaslSession.</returns>
            <exception cref="T:System.Exception">Unable to being session.</exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslContext.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <returns>true if the handle value is invalid; otherwise, false.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException">
            <summary>
            Thrown from a gsasl wrapped operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslProperty">
            <summary>
            Valid properties used in a GsaslSession.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession">
            <summary>
            A handle to a gsasl session.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.SetProperty(System.String,System.String)">
            <summary>
            Sets the property.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <exception cref="T:MongoDB.Driver.Communication.Security.MongoSecurityException"></exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.Step(System.Byte[])">
            <summary>
            Steps the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>The output bytes to be sent to the server.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.IsComplete">
            <summary>
            Gets a value indicating whether this instance is complete.
            </summary>
            <value>
            <c>true</c> if this instance is complete; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Gsasl.GsaslSession.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <returns>true if the handle value is invalid; otherwise, false.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.ISaslStep">
            <summary>
            A step in a Sasl Conversation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.ISaslStep.Transition(MongoDB.Driver.Communication.Security.SaslConversation,System.Byte[])">
            <summary>
            Transitions to the next step in the conversation.
            </summary>
            <param name="conversation">The conversation.</param>
            <param name="bytesReceivedFromServer">The bytes received from the server.</param>
            <returns>An ISaslStep.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.ISaslStep.BytesToSendToServer">
            <summary>
            The bytes that should be sent to ther server before calling Transition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.MongoCRAuthenticationProtocol">
            <summary>
            Authenticates a credential using the MONGODB-CR protocol.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.MongoCRAuthenticationProtocol.Authenticate(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Authenticates the connection against the given database.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.MongoCRAuthenticationProtocol.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can use the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can use the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase">
            <summary>
            A base class for implementing a mechanism using Libgsasl.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase.#ctor(System.String,System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase.Transition(MongoDB.Driver.Communication.Security.SaslConversation,System.Byte[])">
            <summary>
            Transitions to the next step in the conversation.
            </summary>
            <param name="conversation">The conversation.</param>
            <param name="input">The input.</param>
            <returns>An ISaslStep.</returns>
            <exception cref="T:MongoDB.Driver.Communication.Security.MongoSecurityException">Unable to initialize context.</exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase.GetProperties">
            <summary>
            Gets the properties that should be used in the specified mechanism.
            </summary>
            <returns>The properties.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.GsaslImplementationBase.BytesToSendToServer">
            <summary>
            The bytes that should be sent to ther server before calling Transition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.GsaslGssapiImplementation">
            <summary>
            Implements the GssApi specification using the Gsasl library.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GsaslGssapiImplementation.#ctor(System.String,System.String,System.String,System.String,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.GsaslGssapiImplementation"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="hostName">Name of the host.</param>
            <param name="username">The username.</param>
            <param name="hostRealm">The realm.</param>
            <param name="evidence">The evidence.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GsaslGssapiImplementation.GetProperties">
            <summary>
            Gets the properties that should be used in the specified mechanism.
            </summary>
            <returns>The properties.</returns>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.GssapiMechanism">
            <summary>
            A mechanism implementing the GSS API specification.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GssapiMechanism.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can authenticate with the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can authenticate with the specified credential; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.GssapiMechanism.Initialize(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Initializes the mechanism.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
            <returns>The initial step.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.GssapiMechanism.Name">
            <summary>
            Gets the name of the mechanism.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.WindowsGssapiImplementation">
            <summary>
            Implements the GSS API specification on Windows utilizing the native sspi libraries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.WindowsGssapiImplementation.#ctor(System.String,System.String,System.String,System.String,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.WindowsGssapiImplementation"/> class.
            </summary>
            <param name="serviceName">Name of the service.</param>
            <param name="hostName">Name of the host.</param>
            <param name="hostRealm">The domain.</param>
            <param name="username">The username.</param>
            <param name="evidence">The evidence.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.WindowsGssapiImplementation.Transition(MongoDB.Driver.Communication.Security.SaslConversation,System.Byte[])">
            <summary>
            Transitions to the next step in the conversation.
            </summary>
            <param name="conversation">The conversation.</param>
            <param name="bytesReceivedFromServer">The bytes received from the server.</param>
            <returns>An ISaslStep.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.WindowsGssapiImplementation.BytesToSendToServer">
            <summary>
            The bytes that should be sent to ther server before calling Transition.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.MongoSecurityException">
            <summary>
            An exception thrown during login and privilege negotiation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.MongoSecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.MongoSecurityException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.MongoSecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.MongoSecurityException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="inner">The inner.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.MongoSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.MongoSecurityException"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol">
            <summary>
            Authenticates a credential using the SASL protocol.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol.#ctor(MongoDB.Driver.Communication.Security.ISaslMechanism)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol"/> class.
            </summary>
            <param name="mechanism">The mechanism.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol.Authenticate(MongoDB.Driver.Internal.MongoConnection,MongoDB.Driver.MongoCredential)">
            <summary>
            Authenticates the connection against the given database.
            </summary>
            <param name="connection">The connection.</param>
            <param name="credential">The credential.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol.CanUse(MongoDB.Driver.MongoCredential)">
            <summary>
            Determines whether this instance can use the specified credential.
            </summary>
            <param name="credential">The credential.</param>
            <returns>
              <c>true</c> if this instance can use the specified credential; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.SaslAuthenticationProtocol.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.SaslCompletionStep">
            <summary>
            A step indicating the expected completion of a sasl conversation. Calling Transition
            on this step will result in an exception indicating a communication failure between
            the client and server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslCompletionStep.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.SaslCompletionStep"/> class.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslCompletionStep.Transition(MongoDB.Driver.Communication.Security.SaslConversation,System.Byte[])">
            <summary>
            Transitions to the next step in the conversation.
            </summary>
            <param name="conversation">The conversation.</param>
            <param name="input">The input.</param>
            <returns>An ISaslStep.</returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.SaslCompletionStep.BytesToSendToServer">
            <summary>
            Gets the output from the transition. The output will be used to send back to the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.SaslCompletionStep.IsComplete">
            <summary>
            Gets a value indicating whether the conversation is complete.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.SaslConversation">
            <summary>
            A high-level sasl conversation object.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslConversation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.SaslConversation"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslConversation.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:MongoDB.Driver.Communication.Security.SaslConversation"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslConversation.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.SaslConversation.RegisterItemForDisposal(System.IDisposable)">
            <summary>
            Registers the item for disposal.
            </summary>
            <param name="disposable">The disposable.</param>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentity">
            <summary>
            SEC_WINNT_AUTH_IDENTITY
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentity.#ctor(System.String,System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentity"/> struct.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentity.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentityFlag">
            <summary>
            Flag for the AuthIdentity structure.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentityFlag.Ansi">
            <summary>
            SEC_WINNT_AUTH_IDENTITY_ANSI
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentityFlag.Unicode">
            <summary>
            SEC_WINNT_AUTH_IDENTITY_UNICODE
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.DataRepresentation">
            <summary>
            Flags for InitiateSecurityContext.
            </summary>
            <remarks>
            See the TargetDataRep parameter at 
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375507(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.DataRepresentation.Network">
            <summary>
            SECURITY_NETWORK_DREP
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.DataRepresentation.Native">
            <summary>
            SECURITY_NATIVE_DREP
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.EncryptQualityOfProtection">
            <summary>
            Flags for EncryptMessage.
            </summary>
            <remarks>
            See the fQOP parameter at 
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375378(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.EncryptQualityOfProtection.WrapNoEncrypt">
            <summary>
            SECQOP_WRAP_NO_ENCRYPT
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.QueryContextAttributes">
            <summary>
            Flags for QueryContextAttributes.
            </summary>
            <remarks>
            See the ulAttribute parameter at 
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379326(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.QueryContextAttributes.Sizes">
            <summary>
            SECPKG_ATTR_SIZES
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer">
            <summary>
            A SecBuffer structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379814(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer"/> struct.
            </summary>
            <param name="bufferSize">Size of the buffer.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer"/> struct.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer.#ctor(System.Byte[],MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer"/> struct.
            </summary>
            <param name="bytes">The bytes.</param>
            <param name="bufferType">Type of the buffer.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor">
            <summary>
            A SecBufferDesc structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379815(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor"/> struct.
            </summary>
            <param name="bufferSize">Size of the buffer.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor"/> struct.
            </summary>
            <param name="secBufferBytes">The sec buffer bytes.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor.#ctor(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBuffer[])">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor"/> struct.
            </summary>
            <param name="buffers">The buffers.</param>
            <exception cref="T:System.ArgumentException">cannot be null or 0 length;buffers</exception>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor.ToByteArray">
            <summary>
            To the byte array.
            </summary>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">Object has already been disposed!!!</exception>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType">
            <summary>
            Types for the SecurityBuffer structure.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Version">
            <summary>
            SECBUFFER_VERSION
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Empty">
            <summary>
            SECBUFFER_EMPTY
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Data">
            <summary>
            SECBUFFER_DATA
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Token">
            <summary>
            SECBUFFER_TOKEN
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Padding">
            <summary>
            SECBUFFER_PADDING
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferType.Stream">
            <summary>
            SECBUFFER_STREAM
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext">
            <summary>
            A wrapper around the SspiHandle structure specificly used as a security context handle.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.Initialize(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential,System.String,System.Byte[],System.Byte[]@)">
            <summary>
            Initializes the context.
            </summary>
            <param name="credential">The credential.</param>
            <param name="servicePrincipalName">Name of the service principal.</param>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.DecryptMessage(System.Int32,System.Byte[],System.Byte[]@)">
            <summary>
            Decrypts the message.
            </summary>
            <param name="messageLength">Length of the message.</param>
            <param name="encryptedBytes">The encrypted bytes.</param>
            <param name="decryptedBytes">The decrypted bytes.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.EncryptMessage(System.Byte[],System.Byte[]@)">
            <summary>
            Encrypts the message.
            </summary>
            <param name="inBytes">The in bytes.</param>
            <param name="outBytes">The out bytes.</param>
            <returns>A result code.</returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.Initialize(System.String,System.Byte[],System.Byte[]@)">
            <summary>
            Initializes the specified service principal name.
            </summary>
            <param name="servicePrincipalName">Name of the service principal.</param>
            <param name="inBytes">The in bytes.</param>
            <param name="outBytes">The out bytes.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.IsInitialized">
            <summary>
            Gets a value indicating whether this instance is initialized.
            </summary>
            <value>
            <c>true</c> if this instance is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityContext.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <returns>true if the handle value is invalid; otherwise, false.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential">
            <summary>
            A wrapper around the SspiHandle structure specificly used as a credential handle.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential.Acquire(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiPackage,System.String,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Acquires the credential handle.
            </summary>
            <param name="package">The package.</param>
            <param name="username">The username.</param>
            <param name="evidence">The evidence.</param>
            <returns>A security credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the event of a catastrophic failure, false. In this case, it generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredential.IsInvalid">
            <summary>
            When overridden in a derived class, gets a value indicating whether the handle value is invalid.
            </summary>
            <returns>true if the handle value is invalid; otherwise, false.</returns>
              <PermissionSet>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
              </PermissionSet>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredentialUse">
            <summary>
            Flags for AcquireCredentialsHandle.
            </summary>
            <remarks>
            See the fCredentialUse at http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx.
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredentialUse.Outbound">
            <summary>
            SECPKG_CRED_OUTBOUND
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityPackageContextSizes">
            <summary>
            A SecPkgContext_Sizes structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa380097(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags">
            <summary>
            Flags for InitiateSecurityContext.
            </summary>
            <remarks>
            See the fContextReq parameter at 
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375507(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags.MutualAuth">
            <summary>
            ISC_REQ_MUTUAL_AUTH
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags.Confidentiality">
            <summary>
            ISC_REQ_CONFIDENTIALITY
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags.InitIntegrity">
            <summary>
            ISC_REQ_INTEGRITY
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle">
            <summary>
            A SecHandle structure.
            </summary>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa380495(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle.SetToInvalid">
            <summary>
            Sets to invalid.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle.IsZero">
            <summary>
            Gets a value indicating whether this instance is zero.
            </summary>
            <value>
              <c>true</c> if this instance is zero; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiPackage">
            <summary>
            This is represented as a string in AcquireCredentialsHandle. This value will have .ToString() called on it.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiPackage.Kerberos">
            <summary>
            Kerberos
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.CreateException(System.Int64,System.String)">
            <summary>
            Creates an exception for the specified error code.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="defaultMessage">The default message.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.AcquireCredentialsHandle(System.String,System.String,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredentialUse,System.IntPtr,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.AuthIdentity,System.Int32,System.IntPtr,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,System.Int64@)">
            <summary>
            Acquires the credentials handle.
            </summary>
            <param name="principal">The principal.</param>
            <param name="package">The package.</param>
            <param name="credentialUsage">The credential usage.</param>
            <param name="logonId">The logon id.</param>
            <param name="identity">The identity.</param>
            <param name="keyCallback">The key callback.</param>
            <param name="keyArgument">The key argument.</param>
            <param name="credentialHandle">The credential handle.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.AcquireCredentialsHandle(System.String,System.String,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityCredentialUse,System.IntPtr,System.IntPtr,System.Int32,System.IntPtr,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,System.Int64@)">
            <summary>
            Acquires the credentials handle.
            </summary>
            <param name="principal">The principal.</param>
            <param name="package">The package.</param>
            <param name="credentialUsage">The credential usage.</param>
            <param name="logonId">The logon id.</param>
            <param name="identity">The identity.</param>
            <param name="keyCallback">The key callback.</param>
            <param name="keyArgument">The key argument.</param>
            <param name="credentialHandle">The credential handle.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa374712(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.DeleteSecurityContext(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@)">
            <summary>
            Deletes the security context.
            </summary>
            <param name="context">The context.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375354(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.DecryptMessage(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor@,System.UInt32,System.UInt32@)">
            <summary>
            Decrypts the message.
            </summary>
            <param name="context">The context.</param>
            <param name="pMessage">The p message.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <param name="quality">The quality.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375211(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.EnumerateSecurityPackages(System.UInt32@,System.IntPtr@)">
            <summary>
            Enumerates the security packages.
            </summary>
            <param name="numPackages">The pc packages.</param>
            <param name="securityPackageInfoArray">The pp package information.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/aa375397%28v=VS.85%29.aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.EncryptMessage(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.EncryptQualityOfProtection,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor@,System.UInt32)">
            <summary>
            Encrypts the message.
            </summary>
            <param name="context">The context.</param>
            <param name="quality">The quality.</param>
            <param name="pMessage">The p message.</param>
            <param name="sequenceNumber">The sequence number.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375378(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.FreeContextBuffer(System.IntPtr@)">
            <summary>
            Frees the context buffer.
            </summary>
            <param name="contextBuffer">The context buffer.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/aa375416(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.FreeCredentialsHandle(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@)">
            <summary>
            Frees the credentials handle.
            </summary>
            <param name="sspiHandle">The sspi handle.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375417(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.InitializeSecurityContext(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,System.IntPtr,System.String,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags,System.Int32,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.DataRepresentation,System.IntPtr,System.Int32,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags@,System.Int64@)">
            <summary>
            Initializes the security context.
            </summary>
            <param name="credentialHandle">The credential handle.</param>
            <param name="inContextPtr">The in context PTR.</param>
            <param name="targetName">Name of the target.</param>
            <param name="flags">The flags.</param>
            <param name="reserved1">The reserved1.</param>
            <param name="dataRepresentation">The data representation.</param>
            <param name="inputBuffer">The input buffer.</param>
            <param name="reserved2">The reserved2.</param>
            <param name="outContextHandle">The out context handle.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outAttributes">The out attributes.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375506(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.InitializeSecurityContext(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,System.String,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags,System.Int32,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.DataRepresentation,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor@,System.Int32,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityBufferDescriptor@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiContextFlags@,System.Int64@)">
            <summary>
            Initializes the security context.
            </summary>
            <param name="credentialHandle">The credential handle.</param>
            <param name="inContextHandle">The in context handle.</param>
            <param name="targetName">Name of the target.</param>
            <param name="flags">The flags.</param>
            <param name="reserved1">The reserved1.</param>
            <param name="dataRepresentation">The data representation.</param>
            <param name="inputBuffer">The input buffer.</param>
            <param name="reserved2">The reserved2.</param>
            <param name="outContext">The out context.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outAttributes">The out attributes.</param>
            <param name="timestamp">The timestamp.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa375506(v=vs.85).aspx
            </remarks>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32.QueryContextAttributes(MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SspiHandle@,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.QueryContextAttributes,MongoDB.Driver.Communication.Security.Mechanisms.Sspi.SecurityPackageContextSizes@)">
            <summary>
            Queries the context attributes.
            </summary>
            <param name="inContextHandle">The in context handle.</param>
            <param name="attribute">The attribute.</param>
            <param name="sizes">The sizes.</param>
            <returns>A result code.</returns>
            <remarks>
            http://msdn.microsoft.com/en-us/library/windows/desktop/aa379326(v=vs.85).aspx
            </remarks>
        </member>
        <member name="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception">
            <summary>
            Thrown from a win32 wrapped operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception.#ctor(System.Int64,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception"/> class.
            </summary>
            <param name="errorCode">The error code.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Communication.Security.Mechanisms.Sspi.Win32Exception"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.EvalFlags">
            <summary>
            Flags used with the Eval method in MongoDatabase.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.EvalFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.EvalFlags.NoLock">
            <summary>
            Do not take a write lock.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.FindAndRemoveArgs">
            <summary>
            Represents options for the FindAndRemove command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindAndRemoveArgs.Fields">
            <summary>
            Gets or sets the fields specification.
            </summary>
            <value>
            The fields specification.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndRemoveArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndRemoveArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindAndRemoveArgs.SortBy">
            <summary>
            Gets or sets the sort specification.
            </summary>
            <value>
            The sort specification.
            </value>
        </member>
        <member name="T:MongoDB.Driver.FindOneArgs">
            <summary>
            Represents arguments to the FindOne method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.Hint">
            <summary>
            Gets or sets the hint.
            </summary>
            <value>
            The hint.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
            <value>
            The read preference.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.Serializer">
            <summary>
            Gets or sets the serializer.
            </summary>
            <value>
            The serializer.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.Skip">
            <summary>
            Gets or sets the skip.
            </summary>
            <value>
            The skip.
            </value>
        </member>
        <member name="P:MongoDB.Driver.FindOneArgs.SortBy">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchArgs">
            <summary>
            Represents the arguments to the GeoHaystackSearch method.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchArgs.SetAdditionalField(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the name and value of the additional field.
            </summary>
            <param name="name">Name of the additional field.</param>
            <param name="value">The value.</param>
            <returns>The args so calls can be chained.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchArgs.SetAdditionalField``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},``1)">
            <summary>
            Sets the name and value of the additional field.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <typeparam name="TMember">The type of the member.</typeparam>
            <param name="memberExpression">The member expression.</param>
            <param name="value">The value.</param>
            <returns>The args so calls can be chained.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.AdditionalFieldName">
            <summary>
            Gets or sets the name of the additional field.
            </summary>
            <value>
            The name of the additional field.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.AdditionalFieldValue">
            <summary>
            Gets or sets the additional field value.
            </summary>
            <value>
            The additional field value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.MaxDistance">
            <summary>
            Gets or sets the max distance.
            </summary>
            <value>
            The max distance.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoHaystackSearchArgs.Near">
            <summary>
            Gets or sets the location near which to search.
            </summary>
            <value>
            The location near which to search.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson">
            <summary>
            A static class containing helper methods to create GeoJson objects.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.BoundingBox``1(``0,``0)">
            <summary>
            Creates a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <returns>A GeoJson bounding box.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Feature``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0})">
            <summary>
            Creates a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
            <returns>A GeoJson Feature object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.FeatureCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{``0}[])">
            <summary>
            Creates a GeoJson FeatureCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="features">The features.</param>
            <returns>A GeoJson FeatureCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D geographic position (longitude, latitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <returns>A GeoJson 2D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Geographic(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D geographic position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.GeometryCollection``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{``0}[])">
            <summary>
            Creates a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="geometries">The geometries.</param>
            <returns>A GeoJson GeometryCollection object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LinearRingCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson linear ring.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineString``1(``0[])">
            <summary>
            Creates a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson LineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.LineStringCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson LineString.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson LineString.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiLineString``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="lineStrings">The line strings.</param>
            <returns>A GeoJson MultiLineString object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPoint``1(``0[])">
            <summary>
            Creates a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson MultiPoint object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.MultiPolygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0}[])">
            <summary>
            Creates a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="polygons">The polygons.</param>
            <returns>A GeoJson MultiPolygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Point``1(``0)">
            <summary>
            Creates a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Point object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{``0})">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="coordinates">The coordinates.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Polygon``1(``0[])">
            <summary>
            Creates a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>A GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(``0[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="positions">The positions.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.PolygonCoordinates``1(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{``0}[])">
            <summary>
            Creates the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
            <returns>The coordinates of a GeoJson Polygon object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D position (x, y).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <returns>A GeoJson 2D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Position(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D position (x, y, z).
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="z">The z.</param>
            <returns>A GeoJson 3D position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double)">
            <summary>
            Creates a GeoJson 2D projected position (easting, northing).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <returns>A GeoJson 2D projected position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson.Projected(System.Double,System.Double,System.Double)">
            <summary>
            Creates a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
            <returns>A GeoJson 3D projected position.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1">
            <summary>
            Represents a GeoJson bounding box.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1"/> class.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <exception cref="T:System.ArgumentNullException">
            min
            or
            max
            </exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Max">
            <summary>
            Gets the max.
            </summary>
            <value>
            The max.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox`1.Min">
            <summary>
            Gets the min.
            </summary>
            <value>
            The min.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson coordinate reference system (see subclasses).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
            <value>
            The type of the GeoJson coordinate reference system.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1">
            <summary>
            Represents a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1">
            <summary>
            Represents a GeoJson object (see subclasses).
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.BoundingBox">
            <summary>
            Gets the bounding box.
            </summary>
            <value>
            The bounding box.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.CoordinateReferenceSystem">
            <summary>
            Gets the coordinate reference system.
            </summary>
            <value>
            The coordinate reference system.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.ExtraMembers">
            <summary>
            Gets the extra members.
            </summary>
            <value>
            The extra members.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObject`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometry">The geometry.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Geometry">
            <summary>
            Gets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Id">
            <summary>
            Gets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1">
            <summary>
            Represents additional arguments for a GeoJson Feature object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1">
            <summary>
            Represents additional args provided when creating a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>
            The bounding box.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.CoordinateReferenceSystem">
            <summary>
            Gets or sets the coordinate reference system.
            </summary>
            <value>
            The coordinate reference system.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs`1.ExtraMembers">
            <summary>
            Gets or sets the extra members.
            </summary>
            <value>
            The extra members.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureArgs`1.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1">
            <summary>
            Represents a GeoJson FeatureCollection.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="features">The features.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="features">The features.</param>
            <exception cref="T:System.ArgumentNullException">features</exception>
            <exception cref="T:System.ArgumentException">One of the features is null.;features</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Features">
            <summary>
            Gets the features.
            </summary>
            <value>
            The features.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1">
            <summary>
            Represents a GeoJson Geometry object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1">
            <summary>
            Represents a GeoJson GeometryCollection object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="geometries">The geometries.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometry{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="geometries">The geometries.</param>
            <exception cref="T:System.ArgumentNullException">geometries</exception>
            <exception cref="T:System.ArgumentException">One of the geometries is null.;geometries</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Geometries">
            <summary>
            Gets the geometries.
            </summary>
            <value>
            The geometries.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson linear ring.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
            <exception cref="T:System.ArgumentNullException">positions</exception>
            <exception cref="T:System.ArgumentException">
            One of the positions is null.;positions
            or
            At least two positions are required.;positions
            </exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
            <value>
            The positions.
            </value>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
            <exception cref="T:System.ArgumentException">
            A linear ring requires at least 4 positions.;positions
            or
            The first and last positions in a linear ring must be equal.;positions
            </exception>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1">
            <summary>
            Represents a GeoJson LineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson linked coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="href">The href.</param>
            <param name="hrefType">Type of the href.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRef">
            <summary>
            Gets the href.
            </summary>
            <value>
            The href.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.HRefType">
            <summary>
            Gets the type of the href.
            </summary>
            <value>
            The type of the href.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
            <value>
            The type of the GeoJson coordinate reference system.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1">
            <summary>
            Represents a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiLineString object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1"/> class.
            </summary>
            <param name="lineStrings">The line strings.</param>
            <exception cref="T:System.ArgumentNullException">lineStrings</exception>
            <exception cref="T:System.ArgumentException">One of the lineStrings is null.;lineStrings</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates`1.LineStrings">
            <summary>
            Gets the LineStrings.
            </summary>
            <value>
            The LineStrings.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1">
            <summary>
            Represents a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPoint object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1"/> class.
            </summary>
            <param name="positions">The positions.</param>
            <exception cref="T:System.ArgumentNullException">positions</exception>
            <exception cref="T:System.ArgumentException">One of the positions is null.;positions</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates`1.Positions">
            <summary>
            Gets the positions.
            </summary>
            <value>
            The positions.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1"/> class.
            </summary>
            <param name="polygons">The polygons.</param>
            <exception cref="T:System.ArgumentNullException">polygons</exception>
            <exception cref="T:System.ArgumentException">One of the polygons is null.;polygons</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates`1.Polygons">
            <summary>
            Gets the Polygons.
            </summary>
            <value>
            The Polygons.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1">
            <summary>
            Represents a GeoJson MultiPolygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem">
            <summary>
            Represents a GeoJson named coordinate reference system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem.Type">
            <summary>
            Gets the type of the GeoJson coordinate reference system.
            </summary>
            <value>
            The type of the GeoJson coordinate reference system.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType">
            <summary>
            Represents the type of a GeoJson object.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Feature">
            <summary>
            A Feature.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.FeatureCollection">
            <summary>
            A FeatureCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.GeometryCollection">
            <summary>
            A GeometryCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.LineString">
            <summary>
            A LineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiLineString">
            <summary>
            A MultiLineString.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPoint">
            <summary>
            A MultiPoint.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.MultiPolygon">
            <summary>
            A MultiPolygon.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Point">
            <summary>
            A Point.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectType.Polygon">
            <summary>
            A Polygon.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1">
            <summary>
            Represents a GeoJson Point object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},`0)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1">
            <summary>
            Represents a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="coordinates">The coordinates.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonObjectArgs{`0},MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1"/> class.
            </summary>
            <param name="args">The additional args.</param>
            <param name="coordinates">The coordinates.</param>
            <exception cref="T:System.ArgumentNullException">coordinates</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Coordinates">
            <summary>
            Gets the coordinates.
            </summary>
            <value>
            The coordinates.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon`1.Type">
            <summary>
            Gets the type of the GeoJson object.
            </summary>
            <value>
            The type of the GeoJson object.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1">
            <summary>
            Represents the coordinates of a GeoJson Polygon object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0},System.Collections.Generic.IEnumerable{MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0}})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1"/> class.
            </summary>
            <param name="exterior">The exterior.</param>
            <param name="holes">The holes.</param>
            <exception cref="T:System.ArgumentNullException">
            exterior
            or
            holes
            </exception>
            <exception cref="T:System.ArgumentException">One of the holes is null.;holes</exception>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Exterior">
            <summary>
            Gets the exterior.
            </summary>
            <value>
            The exterior.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates`1.Holes">
            <summary>
            Gets the holes.
            </summary>
            <value>
            The holes.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates">
            <summary>
            Represents a GeoJson position in some coordinate system (see subclasses).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Equality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.op_Inequality(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates,MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJsonCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates">
            <summary>
            Represents a GeoJson 2D position (x, y).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>
            The X coordinate.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>
            The Y coordinate.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates">
            <summary>
            Represents a GeoJson 3D position (x, y, z).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates"/> class.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="z">The z coordinate.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.X">
            <summary>
            Gets the X coordinate.
            </summary>
            <value>
            The X coordinate.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Y">
            <summary>
            Gets the Y coordinate.
            </summary>
            <value>
            The Y coordinate.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates.Z">
            <summary>
            Gets the Z coordinate.
            </summary>
            <value>
            The Z coordinate.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates">
            <summary>
            Represents a GeoJson 2D geographic position (longitude, latitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates">
            <summary>
            Represents a GeoJson 3D geographic position (longitude, latitude, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates"/> class.
            </summary>
            <param name="longitude">The longitude.</param>
            <param name="latitude">The latitude.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Longitude">
            <summary>
            Gets the longitude.
            </summary>
            <value>
            The longitude.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Latitude">
            <summary>
            Gets the latitude.
            </summary>
            <value>
            The latitude.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates">
            <summary>
            Represents a GeoJson 2D projected position (easting, northing).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
            <value>
            The easting.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
            <value>
            The northing.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates">
            <summary>
            Represents a GeoJson 3D projected position (easting, northing, altitude).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates"/> class.
            </summary>
            <param name="easting">The easting.</param>
            <param name="northing">The northing.</param>
            <param name="altitude">The altitude.</param>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Values">
            <summary>
            Gets the coordinate values.
            </summary>
            <value>
            The coordinate values.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Easting">
            <summary>
            Gets the easting.
            </summary>
            <value>
            The easting.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Northing">
            <summary>
            Gets the northing.
            </summary>
            <value>
            The northing.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates.Altitude">
            <summary>
            Gets the altitude.
            </summary>
            <value>
            The altitude.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DGeographicCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DGeographicCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DGeographicCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson3DProjectedCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson3DProjectedCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson3DProjectedCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonBoundingBox value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonBoundingBoxSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonBoundingBox{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinateReferenceSystemSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJsonCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonCoordinatesSerializer.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeatureCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeatureCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonFeature value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonFeatureSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonFeature{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometryCollection value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometryCollectionSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonGeometryCollection{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1">
            <summary>
            Represents a serializer for a GeoJsonGeometry value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonGeometrySerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLinearRingCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinearRingCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinearRingCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineStringCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonLinkedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonLinkedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonLinkedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineStringCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineStringCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPointCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPointCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiLineString value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiLineStringSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiLineString{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygonCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonMultiPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonMultiPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonMultiPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer">
            <summary>
            Represents a serializer for a GeoJsonNamedCoordinateReferenceSystem value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a class.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonNamedCoordinateReferenceSystemSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonNamedCoordinateReferenceSystem)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1">
            <summary>
            Represents a serializer for a GeoJson object.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonObjectSerializer`1.GetActualType(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Gets the actual type.
            </summary>
            <param name="context">The context.</param>
            <returns>The actual type.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPoint value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygonCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonCoordinatesSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygonCoordinates{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1">
            <summary>
            Represents a serializer for a GeoJsonPolygon value.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPointSerializer`1"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJsonPolygonSerializer`1.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJsonPolygon{`0})">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer">
            <summary>
            Represents a serializer for a GeoJson2DCoordinates value.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoJsonObjectModel.Serializers.GeoJson2DCoordinatesSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.GeoNearArgs">
            <summary>
            Represents the arguments to the GeoNear method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.DistanceMultiplier">
            <summary>
            Gets or sets the distance multiplier.
            </summary>
            <value>
            The distance multiplier.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.IncludeLocs">
            <summary>
            Gets or sets whether to include locations in the results.
            </summary>
            <value>
            Whether to include locations in the results.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.MaxDistance">
            <summary>
            Gets or sets the max distance.
            </summary>
            <value>
            The max distance.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.Near">
            <summary>
            Gets or sets the location near which to search.
            </summary>
            <value>
            The location near which to search.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.Spherical">
            <summary>
            Gets or sets whether the search is on a spherical surface.
            </summary>
            <value>
            Whether the search is on a spherical surface.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GeoNearArgs.UniqueDocs">
            <summary>
            Gets or sets whether to only return a document once even if matches multiple times.
            </summary>
            <value>
            Whether to only return a document once even if matches multiple times.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoNearPoint">
            <summary>
            Represents a GeoNearPoint (wraps either an XYPoint or a GeoJsonPoint).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.XYPoint)~MongoDB.Driver.GeoNearPoint">
            <summary>
            Implicit conversion to wrap an XYPoint in a GeoNearPoint value.
            </summary>
            <param name="value">The value.</param>
            <returns>A GeoNearPoint value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DCoordinates})~MongoDB.Driver.GeoNearPoint">
            <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
            <param name="value">The value.</param>
            <returns>A GeoNearPoint value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DGeographicCoordinates})~MongoDB.Driver.GeoNearPoint">
            <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
            <param name="value">The value.</param>
            <returns>A GeoNearPoint value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.op_Implicit(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{MongoDB.Driver.GeoJsonObjectModel.GeoJson2DProjectedCoordinates})~MongoDB.Driver.GeoNearPoint">
            <summary>
            Implicit conversion to wrap a 2D GeoJson point in a GeoNearPoint value.
            </summary>
            <param name="value">The value.</param>
            <returns>A GeoNearPoint value.</returns>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.ToGeoNearCommandValue">
            <summary>
            Converts the GeoNearPoint into a BsonValue for the GeoNear command.
            </summary>
            <returns></returns>
        </member>
        <member name="T:MongoDB.Driver.GeoNearPoint.Legacy">
            <summary>
            Represents a GeoNearPoint that wraps an XYPoint.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.Legacy.#ctor(MongoDB.Driver.XYPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearPoint.Legacy"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.Legacy.ToGeoNearCommandValue">
            <summary>
            Converts the GeoNearPoint into a BsonValue for the GeoNear command.
            </summary>
            <returns>A BsonValue.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoNearPoint.Legacy.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GeoNearPoint.GeoJson`1">
            <summary>
            Represents a GeoNearPoint that wraps a GeoJsonPoint.
            </summary>
            <typeparam name="TCoordinates">The type of the coordinates.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.GeoJson`1.#ctor(MongoDB.Driver.GeoJsonObjectModel.GeoJsonPoint{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GeoNearPoint.GeoJson`1"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearPoint.GeoJson`1.ToGeoNearCommandValue">
            <summary>
            Converts the GeoNearPoint into a BsonValue for the GeoNear command.
            </summary>
            <returns>A BsonValue.</returns>
        </member>
        <member name="P:MongoDB.Driver.GeoNearPoint.GeoJson`1.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GetStatsArgs">
            <summary>
            Represents arguments for the GetStats command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetStatsArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GetStatsArgs.Scale">
            <summary>
            Gets or sets the scale.
            </summary>
            <value>
            The scale.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GroupArgs">
            <summary>
            Represents arguments for the Group command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.FinalizeFunction">
            <summary>
            Gets or sets the finalize function.
            </summary>
            <value>
            The finalize function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.Initial">
            <summary>
            Gets or sets the initial value of the aggregation result document.
            </summary>
            <value>
            The initial value of the aggregation result document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.KeyFields">
            <summary>
            Gets or sets the key fields.
            </summary>
            <value>
            The key fields.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.KeyFunction">
            <summary>
            Gets or sets the key function.
            </summary>
            <value>
            The key function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.GroupArgs.ReduceFunction">
            <summary>
            Gets or sets the reduce function.
            </summary>
            <value>
            The reduce function.
            </value>
        </member>
        <member name="T:MongoDB.Driver.InsertFlags">
            <summary>
            Flags used with the Insert method in MongoCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.InsertFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.InsertFlags.ContinueOnError">
            <summary>
            Continue with the remaining documents even if one of the documents resulted in an error.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoCommand">
            <summary>
            A marker interface that represents a command (see CommandDocument).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoQuery">
            <summary>
            A marker interface that represents a query (see QueryDocument and the Query builder).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IMongoScope">
            <summary>
            A marker interface that represents a scope (a set of variables with values, see ScopeDocument).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOutputMode">
            <summary>
            Represents the output mode for a map reduce operation.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MapReduceOutputMode.Inline">
            <summary>
            The output of the map reduce operation is returned inline.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MapReduceOutputMode.Replace">
            <summary>
            The output of the map reduce operation replaces an existing collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MapReduceOutputMode.Merge">
            <summary>
            The output of the map reduce operation is merged with an existing collection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MapReduceOutputMode.Reduce">
            <summary>
            The output of the map reduce operation is merged with an existing collection using the reduce function.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceArgs">
            <summary>
            Represents arguments for the MapReduce command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.FinalizeFunction">
            <summary>
            Gets or sets the finalize function.
            </summary>
            <value>
            The finalize function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.JsMode">
            <summary>
            Gets or sets the JavaScript mode (if true all intermediate values are kept in memory as JavaScript objects).
            </summary>
            <value>
            The JavaScript mode.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.MapFunction">
            <summary>
            Gets or sets the map function.
            </summary>
            <value>
            The map function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.OutputCollectionName">
            <summary>
            Gets or sets the name of the output collection.
            </summary>
            <value>
            The name of the output collection.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.OutputDatabaseName">
            <summary>
            Gets or sets the name of the output database.
            </summary>
            <value>
            The name of the output database.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.OutputIsNonAtomic">
            <summary>
            Gets or sets whether Merge and Reduce output should not be atomic.
            </summary>
            <value>
            Whether Merge and Reduce output should not be atomic.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.OutputIsSharded">
            <summary>
            Gets or sets whether the output is sharded.
            </summary>
            <value>
            Whether the output is sharded.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.OutputMode">
            <summary>
            Gets or sets the output mode.
            </summary>
            <value>
            The output mode.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.ReduceFunction">
            <summary>
            Gets or sets the reduce function.
            </summary>
            <value>
            The reduce function.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.Scope">
            <summary>
            Gets or sets the scope (variables available to the map/reduce functions);
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.SortBy">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MapReduceArgs.Verbose">
            <summary>
            Gets or sets whether to include extra information in the result (like timing).
            </summary>
            <value>
            Whether to include extra information in the result (like timing).
            </value>
        </member>
        <member name="T:MongoDB.Driver.MongoClient">
            <summary>
            Represents a client to MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(MongoDB.Driver.MongoUrl)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoClient class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoClient.GetServer">
            <summary>
            Gets a MongoServer object using this client's settings.
            </summary>
            <returns>A MongoServer.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoClient.Settings">
            <summary>
            Gets the client settings.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoClientSettings">
            <summary>
            The settings for a MongoDB client.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.#ctor">
            <summary>
            Creates a new instance of MongoClientSettings. Usually you would use a connection string instead.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Equality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.op_Inequality(MongoDB.Driver.MongoClientSettings,MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoClientSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromConnectionStringBuilder(MongoDB.Driver.MongoConnectionStringBuilder)">
            <summary>
            Gets a MongoClientSettings object intialized with values from a connection string builder.
            </summary>
            <param name="builder">The connection string builder.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FromUrl(MongoDB.Driver.MongoUrl)">
            <summary>
            Gets a MongoClientSettings object intialized with values from a MongoURL.
            </summary>
            <param name="url">The MongoURL.</param>
            <returns>A MongoClientSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoClientSettings"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoClientSettings"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoClientSettings"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoClientSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IsFrozen">
            <summary>
            Gets whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.IPv6">
            <summary>
            Gets or sets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReadPreference">
            <summary>
            Gets or sets the read preferences.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SecondaryAcceptableLatency">
            <summary>
            Gets or sets the acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.SslSettings">
            <summary>
            Gets or sets the SSL settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.UseSsl">
            <summary>
            Gets or sets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.VerifySslCertificate">
            <summary>
            Gets or sets whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoClientSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCollectionSettings">
            <summary>
            The settings used to access a collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor">
            <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor(MongoDB.Driver.MongoDatabase,System.String,System.Type)">
            <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
            <param name="database">The database that contains the collection (some collection settings will be inherited from the database settings).</param>
            <param name="collectionName">The name of the collection.</param>
            <param name="defaultDocumentType">The default document type for the collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.#ctor(System.String,System.Boolean,System.Type,MongoDB.Bson.GuidRepresentation,MongoDB.Driver.ReadPreference,MongoDB.Driver.WriteConcern)">
            <summary>
            Initializes a new instance of the MongoCollectionSettings class.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="assignIdOnInsert">Whether to automatically assign a value to an empty document Id on insert.</param>
            <param name="defaultDocumentType">The default document type for the collection.</param>
            <param name="guidRepresentation">The GUID representation to use with this collection.</param>
            <param name="readPreference">The read preference.</param>
            <param name="writeConcern">The WriteConcern to use with this collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Equals(System.Object)">
            <summary>
            Compares two MongoCollectionSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.AssignIdOnInsert">
            <summary>
            Gets or sets whether the driver should assign Id values when missing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.CollectionName">
            <summary>
            Gets the name of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.DefaultDocumentType">
            <summary>
            Gets the default document type of the collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation used for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.IsFrozen">
            <summary>
            Gets whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.ReadPreference">
            <summary>
            Gets or sets the read preference to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.SafeMode">
            <summary>
            Gets or sets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.SlaveOk">
            <summary>
            Gets or sets whether queries should be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollectionSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCollectionSettings`1">
            <summary>
            Settings used to access a collection (this class is obsolete, use the non-generic MongoCollectionSettings class instead).
            </summary>
            <typeparam name="TDefaultDocument">The default document type of the collection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings`1.#ctor(MongoDB.Driver.MongoDatabase,System.String)">
            <summary>
            Creates a new instance of MongoCollectionSettings.
            </summary>
            <param name="database">The database to inherit settings from.</param>
            <param name="collectionName">The name of the collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings`1.#ctor(System.String,System.Boolean,MongoDB.Bson.GuidRepresentation,MongoDB.Driver.ReadPreference,MongoDB.Driver.WriteConcern)">
            <summary>
            Creates a new instance of MongoCollectionSettings.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="assignIdOnInsert">Whether the driver should assign the Id values if necessary.</param>
            <param name="guidRepresentation">The representation for Guids.</param>
            <param name="readPreference">The read preference.</param>
            <param name="writeConcern">The write concern to use.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollectionSettings`1.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCredentialStore">
            <summary>
            Represents a list of credentials and the rules about how credentials can be used together.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoCredential})">
            <summary>
            Creates a new instance of the MongoCredentialStore class.
            </summary>
            <param name="credentials">The credentials.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.op_Equality(MongoDB.Driver.MongoCredentialStore,MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoCredentialStore"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.op_Inequality(MongoDB.Driver.MongoCredentialStore,MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoCredentialStore"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.Equals(MongoDB.Driver.MongoCredentialStore)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoCredentialStore"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoCredentialStore"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoCredentialStore"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.GetHashCode">
            <summary>
            Gets the hashcode for the credential store.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.ToString">
            <summary>
            Returns a string representation of the credential store.
            </summary>
            <returns>A string representation of the credential store.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredentialStore.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDatabaseSettings">
            <summary>
            The settings used to access a database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.#ctor">
            <summary>
            Creates a new instance of MongoDatabaseSettings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.#ctor(MongoDB.Driver.MongoServer,System.String)">
            <summary>
            Creates a new instance of MongoDatabaseSettings.
            </summary>
            <param name="server">The server to inherit settings from.</param>
            <param name="databaseName">The name of the database.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Equals(System.Object)">
            <summary>
            Compares two MongoDatabaseSettings instances.
            </summary>
            <param name="obj">The other instance.</param>
            <returns>True if the two instances are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabaseSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.IsFrozen">
            <summary>
            Gets whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.SafeMode">
            <summary>
            Gets or sets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.SlaveOk">
            <summary>
            Gets or sets whether queries can be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabaseSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRef">
            <summary>
            Represents a DBRef (a convenient way to refer to a document).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.#ctor(System.String,System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Creates a MongoDBRef.
            </summary>
            <param name="databaseName">The name of the database that contains the document.</param>
            <param name="collectionName">The name of the collection that contains the document.</param>
            <param name="id">The Id of the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Inequality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.op_Equality(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef,MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether two specified MongoDBRef objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(MongoDB.Driver.MongoDBRef)">
            <summary>
            Determines whether this instance and another specified MongoDBRef object have the same value.
            </summary>
            <param name="rhs">The MongoDBRef object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a MongoDBRef object, have the same value.
            </summary>
            <param name="obj">The MongoDBRef object to compare to this instance.</param>
            <returns>True if obj is a MongoDBRef object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.GetHashCode">
            <summary>
            Returns the hash code for this MongoDBRef object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRef.ToString">
            <summary>
            Returns a string representation of the value.
            </summary>
            <returns>A string representation of the value.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.DatabaseName">
            <summary>
            Gets the name of the database that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.CollectionName">
            <summary>
            Gets the name of the collection that contains the document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDBRef.Id">
            <summary>
            Gets the Id of the document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoDBRefSerializer">
            <summary>
            Represents a serializer for MongoDBRefs.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoDBRefSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.GetMemberSerializationInfo(System.String)">
            <summary>
            Gets the serialization info for a member.
            </summary>
            <param name="memberName">The member name.</param>
            <returns>The serialization info for the member.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.DeserializeValue(MongoDB.Bson.Serialization.BsonDeserializationContext)">
            <summary>
            Deserializes a value.
            </summary>
            <param name="context">The deserialization context.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDBRefSerializer.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationContext,MongoDB.Driver.MongoDBRef)">
            <summary>
            Serializes a value.
            </summary>
            <param name="context">The serialization context.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoExternalIdentity">
            <summary>
            Represents an identity defined outside of mongodb.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentity">
            <summary>
            Represents an identity in MongoDB.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentity"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Equality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.op_Inequality(MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentity)">
            <summary>
            Compares two MongoIdentity values.
            </summary>
            <param name="lhs">The first MongoIdentity.</param>
            <param name="rhs">The other MongoIdentity.</param>
            <returns>True if the two MongoIdentity values are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.Equals(MongoDB.Driver.MongoIdentity)">
            <summary>
            Determines whether the specified instance is equal to this instance.
            </summary>
            <param name="rhs">The right-hand side.</param>
            <returns>
              <c>true</c> if the specified instance is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentity.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoIdentity.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity"/> class.
            </summary>
            <param name="username">The username.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoExternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoExternalIdentity"/> class.
            </summary>
            <param name="source">The source.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoIdentityEvidence">
            <summary>
            Evidence used as proof of a MongoIdentity.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoIdentityEvidence"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Equality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.op_Inequality(MongoDB.Driver.MongoIdentityEvidence,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Compares two MongoIdentityEvidences.
            </summary>
            <param name="lhs">The first MongoIdentityEvidence.</param>
            <param name="rhs">The other MongoIdentityEvidence.</param>
            <returns>True if the two MongoIdentityEvidences are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NotImplementedException">Subclasses of MongoIdentityEvidence must override Equals.</exception>
        </member>
        <member name="M:MongoDB.Driver.MongoIdentityEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
            <exception cref="T:System.NotImplementedException">Subclasses of MongoIdentityEvidence must override Equals.</exception>
        </member>
        <member name="T:MongoDB.Driver.MongoInsertOptions">
            <summary>
            Represents the options to use for an Insert or InsertBatch operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInsertOptions.#ctor">
            <summary>
            Initializes a new instance of the MongoInsertOptions class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInsertOptions.#ctor(MongoDB.Driver.MongoCollection)">
            <summary>
            Initializes a new instance of the MongoInsertOptions class.
            </summary>
            <param name="collection">The collection from which to get default settings for the options.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoInsertOptions.CheckElementNames">
            <summary>
            Gets or sets whether to check element names before proceeding with the Insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoInsertOptions.Flags">
            <summary>
            Gets or sets the insert flags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoInsertOptions.SafeMode">
            <summary>
            Gets or sets the SafeMode to use for the Insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoInsertOptions.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use for the Insert.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoInternalIdentity">
            <summary>
            Represents an identity defined inside mongodb.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalIdentity.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoInternalIdentity"/> class.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoServerBuildInfo">
            <summary>
            Represents build info about a server instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerBuildInfo.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of MongoServerBuildInfo.
            </summary>
            <param name="bits">The number of bits (32 or 64).</param>
            <param name="gitVersion">The GIT version.</param>
            <param name="sysInfo">The sysInfo.</param>
            <param name="versionString">The version string.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerBuildInfo.FromCommandResult(MongoDB.Driver.CommandResult)">
            <summary>
            Creates a new instance of MongoServerBuildInfo initialized from the result of a buildinfo command.
            </summary>
            <param name="result">A CommandResult.</param>
            <returns>A MongoServerBuildInfo.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServerBuildInfo.Bits">
            <summary>
            Gets the number of bits (32 or 64).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerBuildInfo.GitVersion">
            <summary>
            Gets the GIT version.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerBuildInfo.SysInfo">
            <summary>
            Gets the sysInfo.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerBuildInfo.Version">
            <summary>
            Gets the version.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerBuildInfo.VersionString">
            <summary>
            Gets the version string.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoServerInstance">
            <summary>
            Represents an instance of a MongoDB server host.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.#ctor(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoServerInstance"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="address">The address.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.GetIPEndPoint">
            <summary>
            Gets the IP end point of this server instance.
            </summary>
            <returns>The IP end point of this server instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.Ping">
            <summary>
            Checks whether the server is alive (throws an exception if not).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.RefreshStateAsSoonAsPossible">
            <summary>
            Refreshes the state as soon as possible.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.Supports(MongoDB.Driver.FeatureId)">
            <summary>
            Checks whether this server instance supports a feature.
            </summary>
            <param name="featureId">The id of the feature.</param>
            <returns>True if this server instance supports the feature; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.VerifyState">
            <summary>
            Verifies the state of the server instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.AcquireConnection">
            <summary>
            Acquires the connection.
            </summary>
            <returns>A MongoConnection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.Connect">
            <summary>
            Connects this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.DisconnectPermanently">
            <summary>
            Disconnects this instance permanently.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.ReleaseConnection(MongoDB.Driver.Internal.MongoConnection)">
            <summary>
            Releases the connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.SetState(MongoDB.Driver.MongoServerState)">
            <summary>
            Sets the state.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.UnsetPrimary">
            <summary>
            Unset the primary flag on this instance but retain all other information
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.UnsetPrimarySecondary">
            <summary>
            Unset the primary flag on this instance but retain all other information
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerInstance.SetState(MongoDB.Driver.MongoServerState,MongoDB.Driver.MongoServerInstance.ServerInformation)">
            <remarks>This method must be called outside of a lock.</remarks>
        </member>
        <member name="E:MongoDB.Driver.MongoServerInstance.StateChanged">
            <summary>
            Occurs when the value of the State property changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.AveragePingTime">
            <summary>
            Gets the average ping time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.ReplicaSetInformation">
            <summary>
            Gets the replica set information.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.InstanceType">
            <summary>
            Gets the instance type.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.Address">
            <summary>
            Gets the address of this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.BuildInfo">
            <summary>
            Gets the build info of this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.ConnectException">
            <summary>
            Gets the exception thrown the last time Connect was called (null if Connect did not throw an exception).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.ConnectionPool">
            <summary>
            Gets the connection pool for this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsArbiter">
            <summary>
            Gets whether this server instance is an arbiter instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsMasterResult">
            <summary>
            Gets the result of the most recent ismaster command sent to this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsPassive">
            <summary>
            Gets whether this server instance is a passive instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsPrimary">
            <summary>
            Gets whether this server instance is a primary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsSecondary">
            <summary>
            Gets whether this server instance is a secondary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.MaxDocumentSize">
            <summary>
            Gets the max document size for this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.MaxMessageLength">
            <summary>
            Gets the max message length for this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.MaxWireDocumentSize">
            <summary>
            Gets the maximum size of a wire document. Normally slightly larger than MaxDocumentSize.
            </summary>
            <value>
            The  maximum size of a wire document.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.MaxBatchCount">
            <summary>
            Gets the maximum batch count for write operations.
            </summary>
            <value>
            The maximum batch count.
            </value>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.SequentialId">
            <summary>
            Gets the unique sequential Id for this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.Settings">
            <summary>
            Gets the server for this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.State">
            <summary>
            Gets the state of this server instance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerInstance.IsCompatible">
            <summary>
            Gets a value indicating whether the server is compatible with the driver.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoServerSettings">
            <summary>
            The settings used to access a MongoDB server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.#ctor">
            <summary>
            Creates a new instance of MongoServerSettings. Usually you would use a connection string instead.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.op_Equality(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoServerSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.op_Inequality(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.MongoServerSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.FromClientSettings(MongoDB.Driver.MongoClientSettings)">
            <summary>
            Creates a new MongoServerSettings object from a MongoClientSettings object.
            </summary>
            <param name="clientSettings">The MongoClientSettings.</param>
            <returns>A MongoServerSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.FromConnectionStringBuilder(MongoDB.Driver.MongoConnectionStringBuilder)">
            <summary>
            Gets a MongoServerSettings object intialized with values from a MongoConnectionStringBuilder.
            </summary>
            <param name="builder">The MongoConnectionStringBuilder.</param>
            <returns>A MongoServerSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.FromUrl(MongoDB.Driver.MongoUrl)">
            <summary>
            Gets a MongoServerSettings object intialized with values from a MongoUrl.
            </summary>
            <param name="url">The MongoUrl.</param>
            <returns>A MongoServerSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.Equals(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.MongoServerSettings"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.MongoServerSettings"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.MongoServerSettings"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.AddressFamily">
            <summary>
            Gets the AddressFamily for the IPEndPoint (derived from the IPv6 setting).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.Credentials">
            <summary>
            Gets or sets the credentials.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.IsFrozen">
            <summary>
            Gets whether the settings have been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.IPv6">
            <summary>
            Gets or sets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.ReadPreference">
            <summary>
            Gets or sets the read preferences.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.SafeMode">
            <summary>
            Gets or sets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.SecondaryAcceptableLatency">
            <summary>
            Gets or sets the acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.SlaveOk">
            <summary>
            Gets or sets whether queries should be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.SslSettings">
            <summary>
            Gets or sets the SSL settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.UseSsl">
            <summary>
            Gets or sets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.VerifySslCertificate">
            <summary>
            Gets or sets whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerSettings.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoUpdateOptions">
            <summary>
            Represents the options to use for an Update operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the MongoUpdateOptions class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUpdateOptions.#ctor(MongoDB.Driver.MongoCollection)">
            <summary>
            Initializes a new instance of the MongoUpdateOptions class.
            </summary>
            <param name="collection">The collection from which to get default settings for the options.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoUpdateOptions.CheckElementNames">
            <summary>
            Gets or sets whether to check element names before proceeding with the Update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUpdateOptions.Flags">
            <summary>
            Gets or sets the update flags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUpdateOptions.SafeMode">
            <summary>
            Gets or sets the SafeMode to use for the Update.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUpdateOptions.WriteConcern">
            <summary>
            Gets or sets the WriteConcern to use for the Update.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoUrlBuilder">
            <summary>
            Represents URL style connection strings. This is the recommended connection string style, but see also
            MongoConnectionStringBuilder if you wish to use .NET style connection strings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrlBuilder.
            </summary>
            <param name="url">The initial settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.Parse(System.String)">
            <summary>
            Parses a URL and sets all settings to match the URL.
            </summary>
            <param name="url">The URL.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToMongoUrl">
            <summary>
            Creates a new instance of MongoUrl based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>A new instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToServerSettings">
            <summary>
            Creates a new instance of MongoServerSettings based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>A new instance of MongoServerSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrlBuilder.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationMechanism">
            <summary>
            Gets or sets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.AuthenticationSource">
            <summary>
            Gets or sets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.DatabaseName">
            <summary>
            Gets or sets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.FSync">
            <summary>
            Gets or sets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.GssapiServiceName">
            <summary>
            Gets or sets the GSSAPI service name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.IPv6">
            <summary>
            Gets or sets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Journal">
            <summary>
            Gets or sets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SafeMode">
            <summary>
            Gets or sets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SecondaryAcceptableLatency">
            <summary>
            Gets or sets the acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SlaveOk">
            <summary>
            Gets or sets whether queries should be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.UseSsl">
            <summary>
            Gets or sets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.VerifySslCertificate">
            <summary>
            Gets or sets whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.W">
            <summary>
            Gets or sets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrlBuilder.WTimeout">
            <summary>
            Gets or sets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoUser">
            <summary>
            Represents a MongoDB user.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.#ctor(System.String,MongoDB.Driver.PasswordEvidence,System.Boolean)">
            <summary>
            Creates a new instance of MongoUser.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <param name="isReadOnly">Whether the user has read-only access.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a new instance of MongoUser.
            </summary>
            <param name="username">The username.</param>
            <param name="passwordHash">The password hash.</param>
            <param name="isReadOnly">Whether the user has read-only access.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.op_Inequality(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
            <summary>
            Determines whether two specified MongoUser objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.op_Equality(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
            <summary>
            Determines whether two specified MongoUser objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.Equals(MongoDB.Driver.MongoUser,MongoDB.Driver.MongoUser)">
            <summary>
            Determines whether two specified MongoUser objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.HashPassword(System.String,MongoDB.Driver.PasswordEvidence)">
            <summary>
            Calculates the password hash.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The password hash.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.HashPassword(System.String,System.String)">
            <summary>
            Calculates the password hash.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>The password hash.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.Equals(MongoDB.Driver.MongoUser)">
            <summary>
            Determines whether this instance and another specified MongoUser object have the same value.
            </summary>
            <param name="rhs">The MongoUser object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a MongoUser object, have the same value.
            </summary>
            <param name="obj">The MongoUser object to compare to this instance.</param>
            <returns>True if obj is a MongoUser object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.GetHashCode">
            <summary>
            Returns the hash code for this Class1 object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUser.ToString">
            <summary>
            Returns a string representation of the user.
            </summary>
            <returns>A string representation of the user.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoUser.Username">
            <summary>
            Gets or sets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUser.PasswordHash">
            <summary>
            Gets or sets the password hash.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUser.IsReadOnly">
            <summary>
            Gets or sets whether the user is a read-only user.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Operations.IConnectionProvider">
            <summary>
            Represents a source of connections.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Operations.IConnectionProvider.AcquireConnection">
            <summary>
            Acquires a connection.
            </summary>
            <returns>A connection.</returns>
        </member>
        <member name="M:MongoDB.Driver.Operations.IConnectionProvider.ReleaseConnection(MongoDB.Driver.Internal.MongoConnection)">
            <summary>
            Releases a connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="T:MongoDB.Driver.PasswordEvidence">
            <summary>
            Evidence of a MongoIdentity via a shared secret.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.Security.SecureString)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence"/> class.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.PasswordEvidence"/> class.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="rhs">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.ComputeMongoCRPasswordDigest(System.String)">
            <summary>
            Computes the MONGODB-CR password digest.
            </summary>
            <param name="username">The username.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.PasswordEvidence.GenerateDigest(System.Security.SecureString)">
            <summary>
            Computes the hash value of the secured string 
            </summary>
        </member>
        <member name="P:MongoDB.Driver.PasswordEvidence.SecurePassword">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ProfilingLevel">
            <summary>
            Represents what level of profile information to write.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ProfilingLevel.None">
            <summary>
            Don't write profile information for any queries.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ProfilingLevel.Slow">
            <summary>
            Write profile information for slow queries.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ProfilingLevel.All">
            <summary>
            Write profile information for all queries.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReadPreferenceMode">
            <summary>
            Represents read preference modes.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Primary">
            <summary>
            Use primary only.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.PrimaryPreferred">
            <summary>
            Use primary if possible, otherwise a secondary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Secondary">
            <summary>
            Use secondary only.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.SecondaryPreferred">
            <summary>
            Use a secondary if possible, otherwise primary.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ReadPreferenceMode.Nearest">
            <summary>
            Use any near by server, primary or secondary.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReadPreference">
            <summary>
            Represents read preferences.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.#ctor">
            <summary>
            Initializes a new instance of the ReadPreference class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.#ctor(MongoDB.Driver.ReadPreference)">
            <summary>
            Initializes a new instance of the ReadPreference class.
            </summary>
            <param name="readPreference">A read preference</param>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.#ctor(MongoDB.Driver.ReadPreferenceMode)">
            <summary>
            Initializes a new instance of the ReadPreference class.
            </summary>
            <param name="readPreferenceMode">The read preference mode.</param>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.#ctor(MongoDB.Driver.ReadPreferenceMode,System.Collections.Generic.IEnumerable{MongoDB.Driver.ReplicaSetTagSet})">
            <summary>
            Initializes a new instance of the ReadPreference class.
            </summary>
            <param name="readPreferenceMode">The read preference mode.</param>
            <param name="tagSets">The tag sets.</param>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.op_Inequality(MongoDB.Driver.ReadPreference,MongoDB.Driver.ReadPreference)">
            <summary>
            Determines whether two specified ReadPreference objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.op_Equality(MongoDB.Driver.ReadPreference,MongoDB.Driver.ReadPreference)">
            <summary>
            Determines whether two specified ReadPreference objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Equals(MongoDB.Driver.ReadPreference,MongoDB.Driver.ReadPreference)">
            <summary>
            Determines whether two specified ReadPreference objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.AddTagSet(MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Add a new tag set to the existing tag sets.
            </summary>
            <param name="tagSet">The new tag set.</param>
            <returns>The ReadPreference so calls to AddTagSet can be chained.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Clone">
            <summary>
            Creates a clone of the ReadPreference.
            </summary>
            <returns>A clone of the ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Equals(MongoDB.Driver.ReadPreference)">
            <summary>
            Determines whether this instance and another specified ReadPreference object have the same value.
            </summary>
            <param name="rhs">The ReadPreference object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a ReadPreference object, have the same value.
            </summary>
            <param name="obj">The ReadPreference object to compare to this instance.</param>
            <returns>True if obj is a ReadPreference object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.Freeze">
            <summary>
            Freezes the ReadPreference.
            </summary>
            <returns>The frozen ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.FrozenCopy">
            <summary>
            Returns a frozen copy of the ReadPreference.
            </summary>
            <returns>A frozen copy of the ReadPreference.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.GetHashCode">
            <summary>
            Returns the hash code for this Class1 object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.MatchesInstance(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Tests whether the server instance matches the read preference.
            </summary>
            <param name="instance">The server instance.</param>
            <returns>True if the server instance matches the read preferences.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReadPreference.ToString">
            <summary>
            Returns a string representation of the ReadPreference.
            </summary>
            <returns>A string representation of the user.</returns>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Nearest">
            <summary>
            Gets a read preference value for nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.PrimaryPreferred">
            <summary>
            Gets a read preference value for primary preferred.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Primary">
            <summary>
            Gets a read preference value for primary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.Secondary">
            <summary>
            Gets a read preference value for secondary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.SecondaryPreferred">
            <summary>
            Gets a read preference value for secondary preferred.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.IsFrozen">
            <summary>
            Gets whether the read preference has been frozen to prevent further changes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.ReadPreferenceMode">
            <summary>
            Gets the read preference mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReadPreference.TagSets">
            <summary>
            Gets the tag sets.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplicaSetTag">
            <summary>
            Represents a replica set tag.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ReplicaSetTag class.
            </summary>
            <param name="name">The name of the tag.</param>
            <param name="value">The value of the tag.</param>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.op_Inequality(MongoDB.Driver.ReplicaSetTag,MongoDB.Driver.ReplicaSetTag)">
            <summary>
            Determines whether two specified ReplicaSetTag objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.op_Equality(MongoDB.Driver.ReplicaSetTag,MongoDB.Driver.ReplicaSetTag)">
            <summary>
            Determines whether two specified ReplicaSetTag objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.Equals(MongoDB.Driver.ReplicaSetTag,MongoDB.Driver.ReplicaSetTag)">
            <summary>
            Determines whether two specified ReplicaSetTag objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.Equals(MongoDB.Driver.ReplicaSetTag)">
            <summary>
            Determines whether this instance and another specified ReplicaSetTag object have the same value.
            </summary>
            <param name="rhs">The ReplicaSetTag object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a ReplicaSetTag object, have the same value.
            </summary>
            <param name="obj">The ReplicaSetTag object to compare to this instance.</param>
            <returns>True if obj is a ReplicaSetTag object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.GetHashCode">
            <summary>
            Returns the hash code for this ReplicaSetTag object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTag.ToString">
            <summary>
            Returns a string representation of the replica set tags.
            </summary>
            <returns>A string representation of the user.</returns>
        </member>
        <member name="P:MongoDB.Driver.ReplicaSetTag.Name">
            <summary>
            Gets the name of the tag.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplicaSetTag.Value">
            <summary>
            Gets the value of the tag.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ReplicaSetTagSet">
            <summary>
            Represents a set of replica set tags.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.#ctor">
            <summary>
            Initializes a new instance of the ReplicaSetTagSet class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.#ctor(MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Initializes a new instance of the ReplicaSetTagSet class.
            </summary>
            <param name="other">The other ReplicaSetTagSet.</param>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.op_Inequality(MongoDB.Driver.ReplicaSetTagSet,MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Determines whether two specified ReplicaSetTagSet objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.op_Equality(MongoDB.Driver.ReplicaSetTagSet,MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Determines whether two specified ReplicaSetTagSet objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Equals(MongoDB.Driver.ReplicaSetTagSet,MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Determines whether two specified ReplicaSetTagSet objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Add(MongoDB.Driver.ReplicaSetTag)">
            <summary>
            Adds a tag to the list.
            </summary>
            <param name="tag">The tag.</param>
            <returns>The ReplicaSetTagSet so calls to Add can be chained.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Add(System.String,System.String)">
            <summary>
            Adds a tag to the list.
            </summary>
            <param name="name">The name of the tag.</param>
            <param name="value">The value of the tag.</param>
            <returns>The ReplicaSetTagSet so calls to Add can be chained.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Clone">
            <summary>
            Creates a clone of the ReplicaSetTagSet.
            </summary>
            <returns>A clone of the ReplicaSetTagSet.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Equals(MongoDB.Driver.ReplicaSetTagSet)">
            <summary>
            Determines whether this instance and another specified ReplicaSetTagSet object have the same value.
            </summary>
            <param name="rhs">The ReplicaSetTagSet object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a ReplicaSetTagSet object, have the same value.
            </summary>
            <param name="obj">The ReplicaSetTagSet object to compare to this instance.</param>
            <returns>True if obj is a ReplicaSetTagSet object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.Freeze">
            <summary>
            Freezes the ReplicaSetTagSet.
            </summary>
            <returns>The frozen ReplicaSetTagSet.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.FrozenCopy">
            <summary>
            Returns a frozen copy of the ReplicaSetTagSet.
            </summary>
            <returns>A frozen copy of the ReplicaSetTagSet.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.GetHashCode">
            <summary>
            Returns the hash code for this ReplicaSetTagSet object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.MatchesInstance(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Tests whether this tag set matches a server instance.
            </summary>
            <param name="instance">The server instance.</param>
            <returns>True if every tag in this tag set is also in the server instance tag set; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.ReplicaSetTagSet.ToString">
            <summary>
            Returns a string representation of the ReplicaSetTagSet.
            </summary>
            <returns>A string representation of the user.</returns>
        </member>
        <member name="P:MongoDB.Driver.ReplicaSetTagSet.Count">
            <summary>
            Gets a count of the number of tags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplicaSetTagSet.Tags">
            <summary>
            Gets a read-only collection of the tags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ReplicaSetTagSet.IsFrozen">
            <summary>
            Gets whether the tag set has been frozen to prevent further changes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.DeleteRequest">
            <summary>
            Represents a request to delete one or more documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteRequest"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.DeleteRequest.#ctor(MongoDB.Driver.IMongoQuery)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.DeleteRequest"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="P:MongoDB.Driver.DeleteRequest.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <value>
            The limit.
            </value>
        </member>
        <member name="P:MongoDB.Driver.DeleteRequest.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="T:MongoDB.Driver.UpdateRequest">
            <summary>
            Represents a request to update one or more documents.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateRequest"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateRequest.#ctor(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.UpdateRequest"/> class.
            </summary>
            <param name="query">The query.</param>
            <param name="update">The update.</param>
        </member>
        <member name="P:MongoDB.Driver.UpdateRequest.IsMultiUpdate">
            <summary>
            Gets or sets a value indicating whether this update request should affect multiple documents.
            </summary>
            <value>
            <c>true</c> if this request should affect multiple documents; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateRequest.IsUpsert">
            <summary>
            Gets or sets a value indicating whether this update request should insert the record if it doesn't already exist.
            </summary>
            <value>
              <c>true</c> if this update request should insert the record if it doesn't already exis; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateRequest.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>
            The query.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UpdateRequest.Update">
            <summary>
            Gets or sets the update.
            </summary>
            <value>
            The update.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ServerInstanceConnectionProvider">
            <summary>
            Represents a provider of connections to a specific server instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ServerInstanceConnectionProvider.#ctor(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ServerInstanceConnectionProvider"/> class.
            </summary>
            <param name="serverInstance">The server instance.</param>
            <exception cref="T:System.ArgumentNullException">serverInstance</exception>
        </member>
        <member name="M:MongoDB.Driver.ServerInstanceConnectionProvider.AcquireConnection">
            <summary>
            Acquires a connection.
            </summary>
            <returns>
            A connection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ServerInstanceConnectionProvider.ReleaseConnection(MongoDB.Driver.Internal.MongoConnection)">
            <summary>
            Releases a connection.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="T:MongoDB.Driver.Setting`1">
            <summary>
            Represents a setting that may or may not have been set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.Reset">
            <summary>
            Resets the setting to the unset state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Setting`1.ToString">
            <summary>
            Gets a canonical string representation for this setting.
            </summary>
            <returns>A canonical string representation for this setting.</returns>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.Value">
            <summary>
            Gets the value of the setting.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Setting`1.HasBeenSet">
            <summary>
            Gets whether the setting has been set.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SslSettings">
            <summary>
            Represents the settings for using SSL.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Equality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.op_Inequality(MongoDB.Driver.SslSettings,MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether two <see cref="T:MongoDB.Driver.SslSettings"/> instances are not equal.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
              <c>true</c> if the left hand side is not equal to the right hand side; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Clone">
            <summary>
            Clones an SslSettings.
            </summary>
            <returns>The cloned SslSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(MongoDB.Driver.SslSettings)">
            <summary>
            Determines whether the specified <see cref="T:MongoDB.Driver.SslSettings"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:MongoDB.Driver.SslSettings"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:MongoDB.Driver.SslSettings"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Driver.SslSettings.ToString">
            <summary>
            Returns a string representation of the settings.
            </summary>
            <returns>A string representation of the settings.</returns>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.CheckCertificateRevocation">
            <summary>
            Gets or sets whether to check for certificate revocation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificates">
            <summary>
            Gets or sets the client certificates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ClientCertificateSelectionCallback">
            <summary>
            Gets or sets the client certificate selection callback.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.EnabledSslProtocols">
            <summary>
            Gets or sets the enabled SSL protocols.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SslSettings.ServerCertificateValidationCallback">
            <summary>
            Gets or sets the server certificate validation callback.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileInfo">
            <summary>
            Represents a document from the system.profile collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileInfo"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileInfo.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileInfo"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Abbreviated">
            <summary>
            Gets or sets the abbreviated profile info (only used when the profile info would have exceeded 100KB).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Client">
            <summary>
            Gets or sets the client.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Command">
            <summary>
            Gets or sets the command.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.CursorId">
            <summary>
            Gets or sets the cursor Id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Duration">
            <summary>
            Gets or sets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Error">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Exception">
            <summary>
            Gets or sets the exception message.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.ExceptionCode">
            <summary>
            Gets or sets the exception code.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Exhaust">
            <summary>
            Gets or sets whether exhaust was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.FastMod">
            <summary>
            Gets or sets whether fastMod was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.FastModInsert">
            <summary>
            Gets or sets whether fastModInsert was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.IdHack">
            <summary>
            Gets or sets whether idHack was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Info">
            <summary>
            Gets or sets the info string (only present with pre 2.0 servers).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.KeyUpdates">
            <summary>
            Gets or sets the number of key updates.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.LockStatistics">
            <summary>
            Gets or sets the lock statistics.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Moved">
            <summary>
            Gets or sets whether moved was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Namespace">
            <summary>
            Gets or sets the namespace.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberMoved">
            <summary>
            Gets or sets the number of documents moved.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberOfYields">
            <summary>
            Gets or sets the number of yields.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberReturned">
            <summary>
            Gets or sets the number of documents returned.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberScanned">
            <summary>
            Gets or sets the number of documents scanned.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberToReturn">
            <summary>
            Gets or sets the number of documents to return.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberToSkip">
            <summary>
            Gets or sets the number of documents to skip.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.NumberUpdated">
            <summary>
            Gets or sets the number of documents update by an update operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Op">
            <summary>
            Gets or sets the operation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Query">
            <summary>
            Gets or sets the query.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.RawDocument">
            <summary>
            Gets the raw document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.ResponseLength">
            <summary>
            Gets or sets the response length.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.ScanAndOrder">
            <summary>
            Gets or sets whether scanAndOrder was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.UpdateObject">
            <summary>
            Gets or sets the update object.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.Upsert">
            <summary>
            Gets or sets whether upsert was true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfo.User">
            <summary>
            Gets or sets the user.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileLockStatistics">
            <summary>
            Statistics about locks for a system.profile document.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileLockStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileLockStatistics"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileLockStatistics.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileLockStatistics"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileLockStatistics.RawDocument">
            <summary>
            Gets the raw document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileLockStatistics.TimeAcquiring">
            <summary>
            Gets or sets the time acquiring.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileLockStatistics.TimeLocked">
            <summary>
            Gets or sets the time locked.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileReadWriteLockStatistics">
            <summary>
            Statistics about system.profile read and write time spent in locks.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatistics.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileReadWriteLockStatistics"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatistics.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileReadWriteLockStatistics"/> class.
            </summary>
            <param name="backingDocument">The backing document.</param>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.DatabaseReadLock">
            <summary>
            Gets or sets the time spent acquiring or holding the database read lock.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.DatabaseWriteLock">
            <summary>
            Gets or sets the time spent acquiring or holding the database write lock.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.GlobalReadLock">
            <summary>
            Gets or sets the time spent acquiring or holding the gobal read lock.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.GlobalWriteLock">
            <summary>
            Gets or sets the time spent acquiring or holding the global write lock.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.RawDocument">
            <summary>
            Gets the raw document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.Read">
            <summary>
            Gets or sets the time spent acquiring or holding the read lock.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatistics.Write">
            <summary>
            Gets or sets the time spent acquiring or holding the write lock.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileInfoSerializer">
            <summary>
            Represents a serializer for SystemProfileInfo.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileInfoSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileInfoSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileInfoSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates the instance.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <returns>A SystemProfileInfo instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileInfoSerializer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileLockStatisticsSerializer">
            <summary>
            Serializer for SystemProfileLockStatistics
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileLockStatisticsSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileLockStatisticsSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileLockStatisticsSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates the instance.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <returns>A SystemProfileLockStatistics instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileLockStatisticsSerializer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer">
            <summary>
            Serializer for SystemProfileReadWriteLockStatistics
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.CreateInstance(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates the instance.
            </summary>
            <param name="backingDocument">The backing document.</param>
            <returns>A SystemProfileReadWriteLockStatistics instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.SystemProfileReadWriteLockStatisticsSerializer.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UnacknowledgedBulkWriteResult">
            <summary>
            Represents the result of an unacknowledged BulkWrite operation.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UnacknowledgedBulkWriteResult.#ctor(System.Int32,System.Collections.Generic.IEnumerable{MongoDB.Driver.WriteRequest})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.AcknowledgedBulkWriteResult"/> class.
            </summary>
            <param name="requestCount">The request count.</param>
            <param name="processedRequests">The processed requests.</param>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.DeletedCount">
            <summary>
            Gets the number of documents that were deleted.
            </summary>
            <value>
            The number of document that were deleted.
            </value>
            <exception cref="T:System.NotSupportedException">Only acknowledged writes support the DeletedCount property.</exception>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.InsertedCount">
            <summary>
            Gets the number of documents that were inserted.
            </summary>
            <value>
            The number of document that were inserted.
            </value>
            <exception cref="T:System.NotSupportedException">Only acknowledged writes support the InsertedCount property.</exception>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.IsModifiedCountAvailable">
            <summary>
            Gets a value indicating whether the modified count is available.
            </summary>
            <remarks>
            The modified count is only available when all servers have been upgraded to 2.6 or above.
            </remarks>
            <value>
            <c>true</c> if the modified count is available; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.MatchedCount">
            <summary>
            Gets the number of documents that were matched.
            </summary>
            <value>
            The number of document that were matched
            .
            </value>
            <exception cref="T:System.NotSupportedException">Only acknowledged writes support the MatchedCount property.</exception>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.ModifiedCount">
            <summary>
            Gets the number of documents that were actually modified during an update.
            </summary>
            <value>
            The number of document that were actually modified during an update.
            </value>
            <exception cref="T:System.NotSupportedException">Only acknowledged writes support the ModifiedCount property.</exception>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.IsAcknowledged">
            <summary>
            Gets a value indicating whether the bulk write operation was acknowledged.
            </summary>
            <value>
            <c>true</c> if the bulk write operation was acknowledged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MongoDB.Driver.UnacknowledgedBulkWriteResult.Upserts">
            <summary>
            Gets a list with information about each request that resulted in an upsert.
            </summary>
            <value>
            The list with information about each request that resulted in an upsert.
            </value>
        </member>
        <member name="T:MongoDB.Driver.ValidateCollectionArgs">
            <summary>
            Represents arguments for the Validate collection command helper method.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionArgs.Full">
            <summary>
            Gets or sets whether to do a more thorough scan of the data.
            </summary>
            <value>
            Whether to do a more thorough scan of the data.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionArgs.MaxTime">
            <summary>
            Gets or sets the max time.
            </summary>
            <value>
            The max time.
            </value>
        </member>
        <member name="P:MongoDB.Driver.ValidateCollectionArgs.ScanData">
            <summary>
            Gets or sets whether to scan the data.
            </summary>
            <value>
            Whether to scan the data.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.BaseWrapper">
            <summary>
            Abstract base class for wrapper classes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the BaseWrapper class.
            </summary>
            <param name="wrapped">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the BaseWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="wrapped">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.BaseWrapper.SerializeWrappedObject(MongoDB.Bson.Serialization.BsonSerializationContext)">
            <summary>
            Serializes the wrapped value.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:MongoDB.Driver.CollectionOptionsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoCollectionOptions is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CollectionOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the CollectionOptionsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.CollectionOptionsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoCollectionOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.CollectionOptionsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the CollectionOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.CollectionOptionsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the CollectionOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
            <returns>A new instance of CollectionOptionsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.CommandDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoCommand is expected.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.QueryDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoQuery is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor">
            <summary>
            Initializes a new instance of the QueryDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the QueryDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the QueryDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the QueryDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the QueryDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.QueryDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the QueryDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor">
            <summary>
            Initializes a new instance of the CommandDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CommandDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the CommandDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the CommandDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the CommandDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.CommandDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the CommandDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.CommandWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoCommand is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.QueryWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoQuery is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.QueryWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the QueryWrapper class.
            </summary>
            <param name="query">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.QueryWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the QueryWrapper class.
            </summary>
            <param name="query">The wrapped object.</param>
            <returns>A new instance of QueryWrapper or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.CommandWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the CommandWrapper class.
            </summary>
            <param name="command">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.CommandWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the CommandWrapper class.
            </summary>
            <param name="command">The wrapped object.</param>
            <returns>A new instance of CommandWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.FieldsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoFields is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor">
            <summary>
            Initializes a new instance of the FieldsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the FieldsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the FieldsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.FieldsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the FieldsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.FieldsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoFields is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.FieldsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the FieldsWrapper class.
            </summary>
            <param name="fields">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.FieldsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the FieldsWrapper class.
            </summary>
            <param name="fields">The wrapped object.</param>
            <returns>A new instance of FieldsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoHaystackSearchOptionsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoGeoHaystackSearchOptions is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoHaystackSearchOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoGeoHaystackSearchOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GeoHaystackSearchOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GeoHaystackSearchOptionsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the GeoHaystackSearchOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
            <returns>A new instance of GeoHaystackSearchOptionsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.GeoNearOptionsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoGeoNearOptions is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GeoNearOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the GeoNearOptionsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoGeoNearOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GeoNearOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the GeoNearOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
            <returns>A new instance of GeoNearOptionsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.GroupByDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoGroupBy is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor">
            <summary>
            Initializes a new instance of the GroupByDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GroupByDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the GroupByDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.GroupByDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the GroupByDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.GroupByWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoGroupBy is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GroupByWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the GroupByWrapper class.
            </summary>
            <param name="groupBy">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.GroupByWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the GroupByWrapper class.
            </summary>
            <param name="groupBy">The wrapped object.</param>
            <returns>A new instance of GroupByWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.IndexKeysDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoIndexKeys is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor">
            <summary>
            Initializes a new instance of the IndexKeysDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndexKeysDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexKeysDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the IndexKeysDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.IndexKeysWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoIndexKeys is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.IndexKeysWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the IndexKeysWrapper class.
            </summary>
            <param name="keys">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.IndexKeysWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the IndexKeysWrapper class.
            </summary>
            <param name="keys">The wrapped object.</param>
            <returns>A new instance of IndexKeysWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.IndexOptionsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoIndexOptions is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.IndexOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the IndexOptionsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.IndexOptionsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoIndexOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.IndexOptionsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the IndexOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.IndexOptionsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the IndexOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
            <returns>A new instance of IndexOptionsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.MapReduceOptionsDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoMapReduceOptions is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceOptionsDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the MapReduceOptionsDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.MapReduceOptionsWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoMapReduceOptions is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.MapReduceOptionsWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the MapReduceOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.MapReduceOptionsWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the MapReduceOptionsWrapper class.
            </summary>
            <param name="options">The wrapped object.</param>
            <returns>A new instance of MapReduceOptionsWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.ScopeDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoScope is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor">
            <summary>
            Initializes a new instance of the ScopeDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ScopeDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the ScopeDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.ScopeDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the ScopeDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.ScopeWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoScope is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.ScopeWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the ScopeWrapper class.
            </summary>
            <param name="scope">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.ScopeWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the ScopeWrapper class.
            </summary>
            <param name="scope">The wrapped object.</param>
            <returns>A new instance of ScopeWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.SortByDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoSortBy is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor">
            <summary>
            Initializes a new instance of the SortByDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SortByDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the SortByDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the SortByDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the SortByDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.SortByDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the SortByDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.SortByWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoSortBy is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.SortByWrapper.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the SortByWrapper class.
            </summary>
            <param name="sortBy">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.SortByWrapper.Create(System.Object)">
            <summary>
            Creates a new instance of the SortByWrapper class.
            </summary>
            <param name="sortBy">The wrapped object.</param>
            <returns>A new instance of SortByWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.UpdateDocument">
            <summary>
            Represents a BSON document that can be used where an IMongoUpdate is expected.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor">
            <summary>
            Initializes a new instance of the UpdateDocument class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UpdateDocument class specifying whether duplicate element names are allowed
            (allowing duplicate element names is not recommended).
            </summary>
            <param name="allowDuplicateNames">Whether duplicate element names are allowed.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(MongoDB.Bson.BsonElement)">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds one element.
            </summary>
            <param name="element">An element to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.IDictionary)">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.IDictionary,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a dictionary of key/value pairs.
            </summary>
            <param name="dictionary">A dictionary to initialize the document from.</param>
            <param name="keys">A list of keys to select values from the dictionary.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonElement})">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds new elements from a list of elements.
            </summary>
            <param name="elements">A list of elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(MongoDB.Bson.BsonElement[])">
            <summary>
            Initializes a new instance of the UpdateDocument class and adds one or more elements.
            </summary>
            <param name="elements">One or more elements to add to the document.</param>
        </member>
        <member name="M:MongoDB.Driver.UpdateDocument.#ctor(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Initializes a new instance of the UpdateDocument class and creates and adds a new element.
            </summary>
            <param name="name">The name of the element to add to the document.</param>
            <param name="value">The value of the element to add to the document.</param>
        </member>
        <member name="T:MongoDB.Driver.Wrappers.UpdateWrapper">
            <summary>
            Represents a wrapped object that can be used where an IMongoUpdate is expected (the wrapped object is expected to serialize properly).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.#ctor(System.Type,System.Object)">
            <summary>
            Initializes a new instance of the UpdateWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="update">The wrapped object.</param>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.Create``1(``0)">
            <summary>
            Creates a new instance of the UpdateWrapper class (this overload is used when the update
            modifier is a replacement document).
            </summary>
            <typeparam name="T">The nominal type of the wrapped object.</typeparam>
            <param name="update">The wrapped object.</param>
            <returns>A new instance of UpdateWrapper or null.</returns>
        </member>
        <member name="M:MongoDB.Driver.Wrappers.UpdateWrapper.Create(System.Type,System.Object)">
            <summary>
            Creates a new instance of the UpdateWrapper class.
            </summary>
            <param name="nominalType">The nominal type of the wrapped object.</param>
            <param name="update">The wrapped object.</param>
            <returns>A new instance of UpdateWrapper or null.</returns>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern">
            <summary>
            Represents the different WriteConcerns that can be used.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.WriteConcern"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.op_Inequality(MongoDB.Driver.WriteConcern,MongoDB.Driver.WriteConcern)">
            <summary>
            Determines whether two specified WriteConcern objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.op_Equality(MongoDB.Driver.WriteConcern,MongoDB.Driver.WriteConcern)">
            <summary>
            Determines whether two specified WriteConcern objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Equals(MongoDB.Driver.WriteConcern,MongoDB.Driver.WriteConcern)">
            <summary>
            Determines whether two specified WriteConcern objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Clone">
            <summary>
            Creates a clone of the WriteConcern.
            </summary>
            <returns>A clone of the WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a WriteConcern object, have the same value.
            </summary>
            <param name="obj">The WriteConcern object to compare to this instance.</param>
            <returns>True if obj is a WriteConcern object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Equals(MongoDB.Driver.WriteConcern)">
            <summary>
            Determines whether this instance and another specified WriteConcern object have the same value.
            </summary>
            <param name="rhs">The WriteConcern object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.Freeze">
            <summary>
            Freezes the WriteConcern.
            </summary>
            <returns>The frozen WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.FrozenCopy">
            <summary>
            Returns a frozen copy of the WriteConcern.
            </summary>
            <returns>A frozen copy of the WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.ToBsonDocument">
            <summary>
            Converts this object to a BsonDocument.
            </summary>
            <returns>
            A BsonDocument.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.ToString">
            <summary>
            Returns a string representation of the WriteConcern.
            </summary>
            <returns>A string representation of the WriteConcern.</returns>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Acknowledged">
            <summary>
            Gets an instance of WriteConcern that acknowledges writes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Unacknowledged">
            <summary>
            Gets an instance of WriteConcern that doesn't acknowledge writes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W1">
            <summary>
            Gets an instance of WriteConcern where w=1.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W2">
            <summary>
            Gets an instance of WriteConcern where w=2.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W3">
            <summary>
            Gets an instance of WriteConcern where w=3.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W4">
            <summary>
            Gets an instance of WriteConcern where w=4.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WMajority">
            <summary>
            Gets an instance of WriteConcern where w="majority".
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Enabled">
            <summary>
            Gets or sets whether WriteConcern is enabled.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.FSync">
            <summary>
            Gets or sets whether the write concern includes { fsync : true }.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.IsFrozen">
            <summary>
            Gets whether this instance is frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.Journal">
            <summary>
            Gets or sets whether the write concern includes { j : true }.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.W">
            <summary>
            Gets or sets the w value.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WTimeout">
            <summary>
            Gets or sets the wtimeout value (the timeout before which the server must return).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Represents a "w" value in a WriteConcern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.Int32)~MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Converts an int value to a WValue of type WCount.
            </summary>
            <param name="value">The value.</param>
            <returns>A WValue of type WCount.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Implicit(System.String)~MongoDB.Driver.WriteConcern.WValue">
            <summary>
            Convert a string value to a WValue of type WMode.
            </summary>
            <param name="value">The value.</param>
            <returns>A WValue of type WMode.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Equality(MongoDB.Driver.WriteConcern.WValue,MongoDB.Driver.WriteConcern.WValue)">
            <summary>
            Determines whether two specified WValue objects have the same value.
            </summary>
            <param name="lhs">A WValue, or null.</param>
            <param name="rhs">A WValue, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.op_Inequality(MongoDB.Driver.WriteConcern.WValue,MongoDB.Driver.WriteConcern.WValue)">
            <summary>
            Determines whether two specified WValue objects have different values.
            </summary>
            <param name="lhs">A WValue, or null.</param>
            <param name="rhs">A WValue, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.Parse(System.String)">
            <summary>
            Converts the string representation of a WValue to a WValue.
            </summary>
            <param name="s">A string containing the WValue to convert.</param>
            <returns>A WValue equivalent to s.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.Equals(System.Object)">
            <summary>
            Determines whether this instance of WValue and a specified object, which must also be a WValue object, have the same value.
            </summary>
            <param name="obj">An object.</param>
            <returns>True if obj is a WValue of the same type as this instance and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WValue.GetHashCode">
            <summary>
            Returns the hash code for this WValue.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WCount">
            <summary>
            Represents an integer "w" value in a WriteConcern.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the WCount class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.Equals(System.Object)">
            <summary>
            Determines whether this instance of WCount and a specified object, which must also be a WCount object, have the same value.
            </summary>
            <param name="obj">An object.</param>
            <returns>True if obj is a WCount and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.GetHashCode">
            <summary>
            Returns the hash code for this WCount.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WCount.ToString">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WCount.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.WriteConcern.WMode">
            <summary>
            Represents a string "w" value in a WriteConcern (the name of a mode).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the WMode class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.Equals(System.Object)">
            <summary>
            Determines whether this instance of WMode and a specified object, which must also be a WMode object, have the same value.
            </summary>
            <param name="obj">An object.</param>
            <returns>True if obj is a WMode and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.GetHashCode">
            <summary>
            Returns the hash code for this WMode.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.WriteConcern.WMode.ToString">
            <summary>
            Converts the numeric value of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.WriteConcern.WMode.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoAuthenticationException">
            <summary>
            Represents a MongoDB authentication exception
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoAuthenticationException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoAuthenticationException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoAuthenticationException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoConnectionException">
            <summary>
            Represents a MongoDB connection exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoConnectionException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoConnectionException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoConnectionException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFSException">
            <summary>
            Represents a MongoDB GridFS exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoGridFSException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoGridFSException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoGridFSException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoInternalException">
            <summary>
            Represents a MongoDB internal exception (almost surely the result of a bug).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoInternalException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoInternalException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoInternalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoInternalException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="T:MongoDB.Driver.MongoQueryException">
            <summary>
            Represents a MongoDB query exception.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MongoQueryException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MongoQueryException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.String,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the MongoQueryException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="queryResult">The error document returned by the server.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoQueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MongoQueryException class (this overload supports deserialization).
            </summary>
            <param name="info">The SerializationInfo.</param>
            <param name="context">The StreamingContext.</param>
        </member>
        <member name="P:MongoDB.Driver.MongoQueryException.QueryResult">
            <summary>
            Gets the error document returned by the server.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFSCreateOptions">
            <summary>
            Represents options used when creating a GridFS file.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.#ctor">
            <summary>
            Initializes a new instance of the MongoGridFSCreateOptions class.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Aliases">
            <summary>
            Gets or sets the aliases.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.ChunkSize">
            <summary>
            Gets or sets the chunk size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.ContentType">
            <summary>
            Gets or sets the content type.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Id">
            <summary>
            Gets or sets the file Id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.Metadata">
            <summary>
            Gets or sets the metadata.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSCreateOptions.UploadDate">
            <summary>
            Gets or sets the upload date.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy">
            <summary>
            Base class for proxies that maintain multiple server instances.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.IMongoServerProxy">
            <summary>
            Abstraction for a compositing server instances based on type.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.IMongoServerProxy.ChooseServerInstance(MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.IMongoServerProxy.Connect(System.TimeSpan,MongoDB.Driver.ReadPreference)">
            <summary>
            Connects to the instances respecting the timeout and readPreference.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="readPreference">The read preference.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.IMongoServerProxy.Disconnect">
            <summary>
            Disconnects the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.IMongoServerProxy.Ping">
            <summary>
            Checks whether the server is alive (throws an exception if not).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.IMongoServerProxy.VerifyState">
            <summary>
            Verifies the state of the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.IMongoServerProxy.BuildInfo">
            <summary>
            Gets the build info.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.IMongoServerProxy.ConnectionAttempt">
            <summary>
            Gets the connection attempt.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.IMongoServerProxy.Instances">
            <summary>
            Gets the instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.IMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.IMongoServerProxy.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance},MongoDB.Driver.Internal.BlockingQueue{MongoDB.Driver.MongoServerInstance},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="instances">The instances.</param>
            <param name="connectionQueue">The state change queue.</param>
            <param name="connectionAttempt">The connection attempt.</param>
            <remarks>This constructor is used when the instances have already been instructed to connect.</remarks>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ChooseServerInstance(MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.Connect(System.TimeSpan,MongoDB.Driver.ReadPreference)">
            <summary>
            Connects to the instances respecting the timeout and readPreference.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="readPreference">The read preference.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.Disconnect">
            <summary>
            Disconnects the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.Ping">
            <summary>
            Checks whether the server is alive (throws an exception if not).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.VerifyState">
            <summary>
            Verifies the state of the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ChooseServerInstance(MongoDB.Driver.Internal.ConnectedInstanceCollection,MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="connectedInstances">The connected instances.</param>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.DetermineServerState(MongoDB.Driver.MongoServerState,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance})">
            <summary>
            Determines the state of the server.
            </summary>
            <param name="currentState">State of the current.</param>
            <param name="instances">The instances.</param>
            <returns>The state of the server.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.EnsureInstanceWithAddress(MongoDB.Driver.MongoServerAddress)">
            <summary>
            Ensures that an instance with the address exists.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.IsValidInstance(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Determines whether the instance is a valid.  If not, the instance is removed.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
              <c>true</c> if the instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.MakeInstancesMatchAddresses(System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerAddress})">
            <summary>
            Ensures that the current instance list has all the addresses provided and does not contain any not provided.
            </summary>
            <param name="addresses">The addresses.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ProcessConnectedInstanceStateChange(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Processes the connected instance state change.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ProcessDisconnectedInstanceStateChange(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Processes the disconnected instance state change.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.BuildInfo">
            <summary>
            Gets the build info.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ConnectionAttempt">
            <summary>
            Gets the connection attempt.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.Instances">
            <summary>
            Gets the instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MultipleInstanceMongoServerProxy.Settings">
            <summary>
            Gets the server settings.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.ShardedMongoServerProxy">
            <summary>
            Connects to a number of mongos' and distributes load based on ping times.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ShardedMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ShardedMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ShardedMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance},MongoDB.Driver.Internal.BlockingQueue{MongoDB.Driver.MongoServerInstance},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ShardedMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
            <param name="instances">The instances.</param>
            <param name="stateChangedQueue">The state changed queue.</param>
            <param name="connectionAttempt">The connection attempt.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ShardedMongoServerProxy.ChooseServerInstance(MongoDB.Driver.Internal.ConnectedInstanceCollection,MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="connectedInstances">The connected instances.</param>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ShardedMongoServerProxy.DetermineServerState(MongoDB.Driver.MongoServerState,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance})">
            <summary>
            Determines the state of the server.
            </summary>
            <param name="currentState">State of the current.</param>
            <param name="instances">The instances.</param>
            <returns>The server state.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ShardedMongoServerProxy.IsValidInstance(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Determines whether the instance is a valid.  If not, the instance is removed.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
              <c>true</c> if the instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Internal.ShardedMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.DirectMongoServerProxy">
            <summary>
            Connects directly to a specified instance, failing over to other addresses as necessary.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.DirectMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings,MongoDB.Driver.MongoServerInstance,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.DirectMongoServerProxy"/> class.
            </summary>
            <param name="serverSettings">The server settings.</param>
            <param name="instance">The instance.</param>
            <param name="connectionAttempt">The connection attempt.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.ChooseServerInstance(MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.Connect(System.TimeSpan,MongoDB.Driver.ReadPreference)">
            <summary>
            Connects to the server respecting the timeout and readPreference.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="readPreference">The read preference.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.Disconnect">
            <summary>
            Disconnects from the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.Ping">
            <summary>
            Pings the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DirectMongoServerProxy.VerifyState">
            <summary>
            Verifies the state of the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DirectMongoServerProxy.BuildInfo">
            <summary>
            Gets the build info.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DirectMongoServerProxy.ConnectionAttempt">
            <summary>
            Gets the connection attempt.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DirectMongoServerProxy.Instances">
            <summary>
            Gets the instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DirectMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DirectMongoServerProxy.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.ConnectedInstanceCollection">
            <summary>
            Maintains a sorted list of connected instances by ping time.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ConnectedInstanceCollection"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.Clear">
            <summary>
            Clears all the instances.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.GetAllInstances">
            <summary>
            Gets a list of all instances.
            </summary>
            <returns>The list of all instances.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.GetPrimaryAndSecondaries(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Gets a list of primary and secondary instances.
            </summary>
            <param name="primary">The current primary.</param>
            <returns>The list of primary and secondary instances.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.GetSecondaries">
            <summary>
            Gets a list of secondaries.
            </summary>
            <returns>The list of secondaries.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.EnsureContains(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Ensures that the instance is in the collection.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ConnectedInstanceCollection.Remove(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Removes the specified instance.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="T:MongoDB.Driver.Internal.MongoServerProxyFactory">
            <summary>
            Creates a MongoServerInstanceManager based on the settings.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.MongoServerProxyFactory.Create(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Creates an IMongoServerProxy of some type that depends on the server settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns>An IMongoServerProxy.</returns>
        </member>
        <member name="T:MongoDB.Driver.Internal.DiscoveringMongoServerProxy">
            <summary>
            A proxy that dynamically discovers the type of server it is connecting to.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.DiscoveringMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.ChooseServerInstance(MongoDB.Driver.ReadPreference)">
            <summary>
            Chooses the server instance.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A MongoServerInstance</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.Connect(System.TimeSpan,MongoDB.Driver.ReadPreference)">
            <summary>
            Connects to the instances respecting the timeout and readPreference.
            </summary>
            <param name="timeout">The timeout.</param>
            <param name="readPreference">The read preference.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.Disconnect">
            <summary>
            Disconnects this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.Ping">
            <summary>
            Pings this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.VerifyState">
            <summary>
            Verifies the state.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.BuildInfo">
            <summary>
            Gets the build info.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.ConnectionAttempt">
            <summary>
            Gets the connection attempt.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.Instances">
            <summary>
            Gets the instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.ReplicaSetName">
            <summary>
            Gets the name of the replica set (null if not connected to a replica set).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.DiscoveringMongoServerProxy.State">
            <summary>
            Gets the state.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCursorEnumerator`1">
            <summary>
            Reprsents an enumerator that fetches the results of a query sent to the server.
            </summary>
            <typeparam name="TDocument">The type of the documents returned.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorEnumerator`1.#ctor(MongoDB.Driver.MongoCursor{`0})">
            <summary>
            Initializes a new instance of the MongoCursorEnumerator class.
            </summary>
            <param name="cursor">The cursor to be enumerated.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorEnumerator`1.Dispose">
            <summary>
            Disposes of any resources held by this enumerator.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorEnumerator`1.MoveNext">
            <summary>
            Moves to the next result and returns true if another result is available.
            </summary>
            <returns>True if another result is available.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursorEnumerator`1.Reset">
            <summary>
            Resets the enumerator (not supported by MongoCursorEnumerator).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursorEnumerator`1.Current">
            <summary>
            Gets the current document.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursorEnumerator`1.IsDead">
            <summary>
            Gets whether the cursor is dead (used with tailable cursors).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursorEnumerator`1.IsServerAwaitCapable">
            <summary>
            Gets whether the server is await capable (used with tailable cursors).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.BlockingQueue`1">
            <summary>
            Represents a thread-safe queue.
            </summary>
            <typeparam name="T">The type of elements.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Internal.BlockingQueue`1.#ctor">
            <summary>
            Initializes a new instance of the BlockingQueue class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.BlockingQueue`1.Dequeue">
            <summary>
            Dequeues one item from the queue.  Will block until the item is available.
            </summary>
            <returns>The first item in the queue.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.BlockingQueue`1.Dequeue(System.TimeSpan)">
            <summary>
            Dequeues one item from the queue. Will block waiting for an item if the queue is empty.
            </summary>
            <param name="timeout">The timeout for waiting for an item to appear in the queue.</param>
            <returns>The first item in the queue (null if it timed out).</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.BlockingQueue`1.Enqueue(`0)">
            <summary>
            Enqueues an item on to the queue.
            </summary>
            <param name="item">The item to be queued.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.BlockingQueue`1.EnqueuWorkItem(System.Func{`0})">
            <summary>
            Enqueus the work item to run on a seperate-thread.
            </summary>
            <param name="itemFunc">The item func.</param>
        </member>
        <member name="P:MongoDB.Driver.Internal.BlockingQueue`1.Count">
            <summary>
            Gets the count of the items either ready or in the pipeline.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.MongoConnectionState">
            <summary>
            Represents the state of a connection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoConnectionState.Initial">
            <summary>
            The connection has not yet been initialized.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoConnectionState.Open">
            <summary>
            The connection is open.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Internal.MongoConnectionState.Closed">
            <summary>
            The connection is closed.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.MongoConnection">
            <summary>
            Represents a connection to a MongoServerInstance.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.ConnectionPool">
            <summary>
            Gets the connection pool that this connection belongs to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.CreatedAt">
            <summary>
            Gets the DateTime that this connection was created at.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.GenerationId">
            <summary>
            Gets the generation of the connection pool that this connection belongs to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.LastUsedAt">
            <summary>
            Gets the DateTime that this connection was last used at.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.MessageCounter">
            <summary>
            Gets a count of the number of messages that have been sent using this connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.RequestId">
            <summary>
            Gets the RequestId of the last message sent on this connection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.ServerInstance">
            <summary>
            Gets the server instance this connection is connected to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnection.State">
            <summary>
            Gets the state of this connection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.MongoConnectionPool">
            <summary>
            Represents a pool of connections to a MongoDB server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnectionPool.AvailableConnectionsCount">
            <summary>
            Gets the number of available connections (connections that are open but not currently in use).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnectionPool.CurrentPoolSize">
            <summary>
            Gets the number of connections in the connection pool (includes both available and in use connections).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnectionPool.GenerationId">
            <summary>
            Gets the current generation Id of the connection pool.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.MongoConnectionPool.ServerInstance">
            <summary>
            Gets the server instance.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.PingTimeAggregator">
            <summary>
            Holds the ping times and a rolling calculated average.  This class is thread-safe.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.PingTimeAggregator.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.PingTimeAggregator"/> class.
            </summary>
            <param name="maxCount">The max count.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.PingTimeAggregator.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.PingTimeAggregator.Include(System.TimeSpan)">
            <summary>
            Includes the specified ping time in the calculation.  If there are more times in the bucket than the maxCount, then the oldest one is replaced.
            </summary>
            <param name="pingTime">The ping time.</param>
        </member>
        <member name="P:MongoDB.Driver.Internal.PingTimeAggregator.Average">
            <summary>
            Gets the average.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.ReplicaSetInformation">
            <summary>
            Information about a replica set member.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.#ctor(System.String,MongoDB.Driver.MongoServerAddress,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerAddress},MongoDB.Driver.ReplicaSetTagSet,System.Nullable{System.Int32})">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ReplicaSetInformation"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="primary">The primary.</param>
            <param name="members">The members.</param>
            <param name="tagSet">The tag set.</param>
            <param name="configVersion">The replica set config version if available</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.op_Equality(MongoDB.Driver.Internal.ReplicaSetInformation,MongoDB.Driver.Internal.ReplicaSetInformation)">
            <summary>
            Implements the operator ==.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.op_Inequality(MongoDB.Driver.Internal.ReplicaSetInformation,MongoDB.Driver.Internal.ReplicaSetInformation)">
            <summary>
            Implements the operator !=.
            </summary>
            <param name="lhs">The LHS.</param>
            <param name="rhs">The RHS.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
              </exception>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.Equals(MongoDB.Driver.Internal.ReplicaSetInformation)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="rhs">An object to compare with this object.</param>
            <returns>
            true if the current object is equal to the <paramref name="rhs"/> parameter; otherwise, false.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetInformation.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetInformation.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetInformation.Primary">
            <summary>
            Gets the primary.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetInformation.Members">
            <summary>
            Gets the members.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetInformation.TagSet">
            <summary>
            Gets the tag set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetInformation.ConfigVersion">
            <summary>
            Gets the replica set config version if available
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy">
            <summary>
            Proxy for connecting to a replica set.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.#ctor(MongoDB.Driver.MongoServerSettings,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance},MongoDB.Driver.Internal.BlockingQueue{MongoDB.Driver.MongoServerInstance},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy"/> class.
            </summary>
            <param name="serverSettings">The server settings.</param>
            <param name="instances">The instances.</param>
            <param name="stateChangeQueue">The state change queue.</param>
            <param name="connectionAttempt">The connection attempt.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.DetermineServerState(MongoDB.Driver.MongoServerState,System.Collections.Generic.IEnumerable{MongoDB.Driver.MongoServerInstance})">
            <summary>
            Determines the state of the server.
            </summary>
            <param name="currentState">State of the current.</param>
            <param name="instances">The instances.</param>
            <returns>The server state.</returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.IsValidInstance(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Determines whether the instance is a valid.  If not, the instance is removed.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
              <c>true</c> if the instance is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.ProcessConnectedInstanceStateChange(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Processes the connected instance state change.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.ProcessDisconnectedInstanceStateChange(MongoDB.Driver.MongoServerInstance)">
            <summary>
            Processes the disconnected instance state change.
            </summary>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.GetMatchingInstance(System.Collections.Generic.List{MongoDB.Driver.Internal.ConnectedInstanceCollection.CachedInstance},MongoDB.Driver.ReadPreference,System.TimeSpan)">
            <summary>
            Gets a randomly selected matching instance.
            </summary>
            <param name="instancesWithPingTime">A list of instances from which to find a matching instance.</param>
            <param name="readPreference">The read preference that must be matched.</param>
            <param name="secondaryAcceptableLatency">The maximum acceptable secondary latency.</param>
            <returns>A randomly selected matching instance.</returns>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.Primary">
            <summary>
            Gets the primary.
            </summary>
            <value>
            The primary.
            </value>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.ProxyType">
            <summary>
            Gets the type of the proxy.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Internal.ReplicaSetMongoServerProxy.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
            <value>
            The name of the replica set.
            </value>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionVisitor`1">
            <summary>
            An abstract base class for an Expression visitor that returns a value of type T.
            </summary>
            <typeparam name="T">The type of the return value.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.#ctor">
            <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits an Expression.
            </summary>
            <param name="node">The Expression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Visits an Expression list.
            </summary>
            <param name="nodes">The Expression list.</param>
            <returns>The result of visiting the Expressions.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits a ConditionalExpression.
            </summary>
            <param name="node">The ConditionalExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits a ConstantExpression.
            </summary>
            <param name="node">The ConstantExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits an ElementInit.
            </summary>
            <param name="node">The ElementInit.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            Visits an ElementInit list.
            </summary>
            <param name="nodes">The ElementInit list.</param>
            <returns>The result of visiting the Expressions.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits an InvocationExpression.
            </summary>
            <param name="node">The InvocationExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits a ListInitExpression.
            </summary>
            <param name="node">The ListInitExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits a MemberAssignment.
            </summary>
            <param name="node">The MemberAssignment.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            Visits a MemberBinding.
            </summary>
            <param name="node">The MemberBinding.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Visits a MemberBinding list.
            </summary>
            <param name="nodes">The MemberBinding list.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits a MemberInitExpression.
            </summary>
            <param name="node">The MemberInitExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits a MemberListBinding.
            </summary>
            <param name="node">The MemberListBinding.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits a MemberMemberBinding.
            </summary>
            <param name="node">The MemberMemberBinding.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits a NewExpression.
            </summary>
            <param name="node">The NewExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits a NewArrayExpression.
            </summary>
            <param name="node">The NewArrayExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits a TypeBinaryExpression.
            </summary>
            <param name="node">The TypeBinaryExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor`1.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The result of visiting the Expression.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder">
            <summary>
            Used to find the BsonSerializationInfo for a given expression representing accessing a document element.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.#ctor(System.Collections.Generic.Dictionary{System.Linq.Expressions.Expression,MongoDB.Bson.Serialization.BsonSerializationInfo})">
            <summary>
            Initializes a new instance of the BsonSerializationInfoFinder class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.GetSerializationInfo(System.Linq.Expressions.Expression,System.Collections.Generic.Dictionary{System.Linq.Expressions.Expression,MongoDB.Bson.Serialization.BsonSerializationInfo})">
            <summary>
            Gets the serialization info for the node utilizing precalculated serialization information.
            </summary>
            <param name="node">The expression.</param>
            <param name="serializationInfoCache">The serialization info cache.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits an Expression.
            </summary>
            <param name="node">The Expression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoFinder.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper.GetSerializationInfo(System.Linq.Expressions.Expression)">
            <summary>
            Gets the serialization info for the given expression.
            </summary>
            <param name="node">The expression.</param>
            <returns>The serialization info.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper.GetItemSerializationInfo(System.String,MongoDB.Bson.Serialization.BsonSerializationInfo)">
            <summary>
            Gets the item serialization info.
            </summary>
            <param name="methodName">Name of the method.</param>
            <param name="serializationInfo">The serialization info.</param>
            <returns>The item BsonSerializationInfo for the expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper.RegisterExpressionSerializer(System.Linq.Expressions.Expression,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Registers a serializer with the given expression.
            </summary>
            <param name="node">The expression.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper.SerializeValue(MongoDB.Bson.Serialization.BsonSerializationInfo,System.Object)">
            <summary>
            Serializes the value given the serialization information.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="value">The value.</param>
            <returns>A BsonValue representing the value serialized using the serializer.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper.SerializeValues(MongoDB.Bson.Serialization.BsonSerializationInfo,System.Collections.IEnumerable)">
            <summary>
            Serializes the values given the serialization information.
            </summary>
            <param name="serializationInfo">The serialization info.</param>
            <param name="values">The values.</param>
            <returns>A BsonArray representing the values serialized using the serializer.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionNormalizer">
            <summary>
            A class that normalizes C# and VB expression trees.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionVisitor">
            <summary>
            An abstract base class for an Expression visitor.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.#ctor">
            <summary>
            Initializes a new instance of the ExpressionVisitor class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
            Visits an Expression.
            </summary>
            <param name="node">The Expression.</param>
            <returns>The Expression (posibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
            <summary>
            Visits an Expression list.
            </summary>
            <param name="nodes">The Expression list.</param>
            <returns>The Expression list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The BinaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits a ConditionalExpression.
            </summary>
            <param name="node">The ConditionalExpression.</param>
            <returns>The ConditionalExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits a ConstantExpression.
            </summary>
            <param name="node">The ConstantExpression.</param>
            <returns>The ConstantExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits an ElementInit.
            </summary>
            <param name="node">The ElementInit.</param>
            <returns>The ElementInit (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            Visits an ElementInit list.
            </summary>
            <param name="nodes">The ElementInit list.</param>
            <returns>The ElementInit list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits an InvocationExpression.
            </summary>
            <param name="node">The InvocationExpression.</param>
            <returns>The InvocationExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>The LambdaExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits a ListInitExpression.
            </summary>
            <param name="node">The ListInitExpression.</param>
            <returns>The ListInitExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The MemberExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits a MemberAssignment.
            </summary>
            <param name="node">The MemberAssignment.</param>
            <returns>The MemberAssignment (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            Visits a MemberBinding.
            </summary>
            <param name="node">The MemberBinding.</param>
            <returns>The MemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Visits a MemberBinding list.
            </summary>
            <param name="nodes">The MemberBinding list.</param>
            <returns>The MemberBinding list (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits a MemberInitExpression.
            </summary>
            <param name="node">The MemberInitExpression.</param>
            <returns>The MemberInitExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits a MemberListBinding.
            </summary>
            <param name="node">The MemberListBinding.</param>
            <returns>The MemberListBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits a MemberMemberBinding.
            </summary>
            <param name="node">The MemberMemberBinding.</param>
            <returns>The MemberMemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>The MethodCallExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits a NewExpression.
            </summary>
            <param name="node">The NewExpression.</param>
            <returns>The NewExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits a NewArrayExpression.
            </summary>
            <param name="node">The NewArrayExpression.</param>
            <returns>The NewArrayExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The ParameterExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits a TypeBinaryExpression.
            </summary>
            <param name="node">The TypeBinaryExpression.</param>
            <returns>The TypeBinaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The UnaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.#ctor(System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the ExpressionNormalizer class.
            </summary>
            <param name="expression">The expression to be evaluated.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.Normalize(System.Linq.Expressions.Expression)">
            <summary>
            Normalizes C# and VB expression trees.
            </summary>
            <param name="node">The expression to normalize.</param>
            <returns>The normalized expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The BinaryExpression (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionNormalizer.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The UnaryExpression (possibly modified).</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionFormatter">
            <summary>
            A class that formats an Expression as a string.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.#ctor">
            <summary>
            Initializes a new instance of the ExpressionFormatter class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString(System.Linq.Expressions.Expression)">
            <summary>
            Returns a string that represents the Expression.
            </summary>
            <param name="node">The Expression to format.</param>
            <returns>A string that represents the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.ToString">
            <summary>
            Returns a string that represents the Expression.
            </summary>
            <returns>A string that represents the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The BinaryExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits a ConditionalExpression.
            </summary>
            <param name="node">The ConditionalExpression.</param>
            <returns>The ConditionalExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits a ConstantExpression.
            </summary>
            <param name="node">The ConstantExpression.</param>
            <returns>The ConstantExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits an ElementInit node.
            </summary>
            <param name="node">The ElementInit node.</param>
            <returns>The ElementInit node.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            Visits an ElementInit list.
            </summary>
            <param name="nodes">The ElementInit list.</param>
            <returns>The ElementInit list.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits an InvocationExpression.
            </summary>
            <param name="node">The InvocationExpression.</param>
            <returns>The InvocationExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>The LambdaExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits a ListInitExpression.
            </summary>
            <param name="node">The ListInitExpression.</param>
            <returns>The ListInitExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The MemberExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits a MemberAssignment.
            </summary>
            <param name="node">The MemberAssignment.</param>
            <returns>The MemberAssignment.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            Visits a MemberBinding.
            </summary>
            <param name="node">The MemberBinding.</param>
            <returns>The MemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Visits a MemberBinding list.
            </summary>
            <param name="nodes">The MemberBinding list.</param>
            <returns>The MemberBinding list.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits a MemberInitExpression.
            </summary>
            <param name="node">The MemberInitExpression.</param>
            <returns>The MemberInitExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits a MemberListBinding.
            </summary>
            <param name="node">The MemberListBinding.</param>
            <returns>The MemberListBinding.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits a MemberMemberBinding.
            </summary>
            <param name="node">The MemberMemberBinding.</param>
            <returns>The MemberMemberBinding.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>The MethodCallExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits a NewExpression.
            </summary>
            <param name="node">The NewExpression.</param>
            <returns>The NewExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits a NewArrayExpression.
            </summary>
            <param name="node">The NewArrayExpression.</param>
            <returns>The NewArrayExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The ParameterExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits a TypeBinaryExpression.
            </summary>
            <param name="node">The TypeBinaryExpression.</param>
            <returns>The TypeBinaryExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionFormatter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The UnaryExpression.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionParameterReplacer">
            <summary>
            A class that replaces all occurences of one parameter with a different parameter.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.#ctor(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the ExpressionParameterReplacer class.
            </summary>
            <param name="fromParameter">The parameter to be replaced.</param>
            <param name="toExpression">The expression that replaces the parameter.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.ReplaceParameter(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression)">
            <summary>
            Replaces all occurences of one parameter with a different parameter.
            </summary>
            <param name="node">The expression containing the parameter that should be replaced.</param>
            <param name="fromParameter">The from parameter.</param>
            <param name="toExpression">The expression that replaces the parameter.</param>
            <returns>The expression with all occurrences of the parameter replaced.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionParameterReplacer.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Replaces the from parameter with the two parameter if it maches.
            </summary>
            <param name="node">The node.</param>
            <returns>The parameter (replaced if it matched).</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.LinqToMongo">
            <summary>
            This static class holds methods that can be used to express MongoDB specific query operations in LINQ queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAll``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains all of the specified values.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence in which to locate the values.</param>
            <param name="values">The values to locate in the sequence.</param>
            <returns>True if the sequence contains all of the specified values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a sequence contains any of the specified values.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">A sequence in which to locate the values.</param>
            <param name="values">The values to locate in the sequence.</param>
            <returns>True if the sequence contains any of the specified values.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.Explain``1(System.Linq.IQueryable{``0})">
            <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
            <param name="source">The LINQ query to explain.</param>
            <returns>An explanation of thow the query was executed.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.Explain``1(System.Linq.IQueryable{``0},System.Boolean)">
            <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
            <param name="source">The LINQ query to explain</param>
            <param name="verbose">Whether the explanation should contain more details.</param>
            <returns>An explanation of thow the query was executed.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Determines whether a specified value is contained in a sequence.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="value">The value to locate in the sequence.</param>
            <param name="source">A sequence in which to locate the values.</param>
            <returns>True if the value is contained in the sequence.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.Inject(MongoDB.Driver.IMongoQuery)">
            <summary>
            Injects a low level IMongoQuery into a LINQ where clause. Can only be used in LINQ queries.
            </summary>
            <param name="query">The low level query.</param>
            <returns>Throws an InvalidOperationException if called.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Sets an index hint on the query that's being built.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">The query being built.</param>
            <param name="indexName">The name of the index to use.</param>
            <returns>New query where the expression includes a WithIndex method call.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqToMongo.WithIndex``1(System.Linq.IQueryable{``0},MongoDB.Bson.BsonDocument)">
            <summary>
            Sets an index hint on the query that's being built.
            </summary>
            <typeparam name="TSource">The type of the elements of source.</typeparam>
            <param name="source">The query being built.</param>
            <param name="indexHint">Hint for what index to use.</param>
            <returns>New query where the expression includes a WithIndex method call.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.DeserializationProjector`1">
            <summary>
            Represents a projection that deserializes BsonValues.
            </summary>
            <typeparam name="TResult">The type of the result objects.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.#ctor(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonValue},MongoDB.Bson.Serialization.BsonSerializationInfo)">
            <summary>
            Initializes a new instance of the DeserializationProjector class.
            </summary>
            <param name="source">The enumerable object that supplies the source objects.</param>
            <param name="serializationInfo">Serialization info for deserializing source objects into result objects.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.DeserializationProjector`1.GetEnumerator">
            <summary>
            Gets an enumerator for the result objects.
            </summary>
            <returns>An enumerator for the result objects.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.Nominator">
            <summary>
            Performs bottom-up analysis to find maximal subtrees that satisfy a predicate.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.OrderByDirection">
            <summary>
            Represents the direction of an order by clause.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.OrderByDirection.Ascending">
            <summary>
            Ascending order.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.Linq.OrderByDirection.Descending">
            <summary>
            Descending order.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.OrderByClause">
            <summary>
            Represents an order by clause.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.OrderByClause.#ctor(System.Linq.Expressions.LambdaExpression,MongoDB.Driver.Linq.OrderByDirection)">
            <summary>
            Initializes an instance of the OrderByClause class.
            </summary>
            <param name="key">An expression identifying the key of the order by clause.</param>
            <param name="direction">The direction of the order by clause.</param>
        </member>
        <member name="P:MongoDB.Driver.Linq.OrderByClause.Key">
            <summary>
            Gets the lambda expression identifying the key of the order by clause.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.OrderByClause.Direction">
            <summary>
            Gets the direction of the order by clause.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.PartialEvaluator">
            <summary>
            A static class with methods to partially evaluate an Expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.PartialEvaluator.Evaluate(System.Linq.Expressions.Expression)">
            <summary>
            Performs evaluation and replacement of independent sub-trees.
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.PartialEvaluator.Evaluate(System.Linq.Expressions.Expression,System.Linq.IQueryProvider)">
            <summary>
            Performs evaluation and replacement of independent sub-trees.
            </summary>
            <param name="expression">The root of the expression tree.</param>
            <param name="queryProvider">The query provider when the expression is a LINQ query (can be null).</param>
            <returns>A new tree with sub-trees evaluated and replaced.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.PartialEvaluator.SubtreeEvaluator">
            <summary>
            Evaluates and replaces sub-trees when first candidate is reached (top-down)
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.ExpressionPrettyPrinter">
            <summary>
            A class that pretty prints an Expression.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.#ctor">
            <summary>
            Initializes a new instance of the ExpressionPrettyPrinter class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.PrettyPrint(System.Linq.Expressions.Expression)">
            <summary>
            Pretty prints an Expression.
            </summary>
            <param name="node">The Expression to pretty print.</param>
            <returns>A string containing the pretty printed Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.ToString">
            <summary>
            Returns the pretty printed string representation of the Expression.
            </summary>
            <returns>The pretty printed string representation of the Expression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
            Visits a BinaryExpression.
            </summary>
            <param name="node">The BinaryExpression.</param>
            <returns>The BinaryExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
            Visits a ConditionalExpression.
            </summary>
            <param name="node">The ConditionalExpression.</param>
            <returns>The ConditionalExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
            Visits a ConstantExpression.
            </summary>
            <param name="node">The ConstantExpression.</param>
            <returns>The ConstantExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
            Visits an ElementInit node.
            </summary>
            <param name="node">The ElementInit node.</param>
            <returns>The ElementInit node.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitElementInitList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
            <summary>
            Visits an ElementInit list.
            </summary>
            <param name="nodes">The ElementInit list.</param>
            <returns>The ElementInit list.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
            Visits an InvocationExpression.
            </summary>
            <param name="node">The InvocationExpression.</param>
            <returns>The InvocationExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitLambda(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Visits a LambdaExpression.
            </summary>
            <param name="node">The LambdaExpression.</param>
            <returns>The LambdaExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitListInit(System.Linq.Expressions.ListInitExpression)">
            <summary>
            Visits a ListInitExpression.
            </summary>
            <param name="node">The ListInitExpression.</param>
            <returns>The ListInitExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
            Visits a MemberExpression.
            </summary>
            <param name="node">The MemberExpression.</param>
            <returns>The MemberExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
            Visits a MemberAssignment.
            </summary>
            <param name="node">The MemberAssignment.</param>
            <returns>The MemberAssignment.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBinding(System.Linq.Expressions.MemberBinding)">
            <summary>
            Visits a MemberBinding.
            </summary>
            <param name="node">The MemberBinding.</param>
            <returns>The MemberBinding (possibly modified).</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
            <summary>
            Visits a MemberBinding list.
            </summary>
            <param name="nodes">The MemberBinding list.</param>
            <returns>The MemberBinding list.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
            Visits a MemberInitExpression.
            </summary>
            <param name="node">The MemberInitExpression.</param>
            <returns>The MemberInitExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
            <summary>
            Visits a MemberListBinding.
            </summary>
            <param name="node">The MemberListBinding.</param>
            <returns>The MemberListBinding.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
            <summary>
            Visits a MemberMemberBinding.
            </summary>
            <param name="node">The MemberMemberBinding.</param>
            <returns>The MemberMemberBinding.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
            Visits a MethodCallExpression.
            </summary>
            <param name="node">The MethodCallExpression.</param>
            <returns>The MethodCallExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
            Visits a NewExpression.
            </summary>
            <param name="node">The NewExpression.</param>
            <returns>The NewExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
            Visits a NewArrayExpression.
            </summary>
            <param name="node">The NewArrayExpression.</param>
            <returns>The NewArrayExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
            Visits a ParameterExpression.
            </summary>
            <param name="node">The ParameterExpression.</param>
            <returns>The ParameterExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
            Visits a TypeBinaryExpression.
            </summary>
            <param name="node">The TypeBinaryExpression.</param>
            <returns>The TypeBinaryExpression.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.ExpressionPrettyPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
            Visits a UnaryExpression.
            </summary>
            <param name="node">The UnaryExpression.</param>
            <returns>The UnaryExpression.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.PredicateTranslator">
            <summary>
            Translates an expression tree into an IMongoQuery.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.PredicateTranslator.#ctor(MongoDB.Driver.Linq.Utils.BsonSerializationInfoHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Linq.PredicateTranslator"/> class.
            </summary>
            <param name="serializationHelper">The serialization helper.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.PredicateTranslator.BuildQuery(System.Linq.Expressions.Expression)">
            <summary>
            Builds an IMongoQuery from an expression.
            </summary>
            <param name="expression">The expression.</param>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.IProjector">
            <summary>
            Represents a projection from TSource to TResult;
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.IProjector.Cursor">
            <summary>
            Gets the cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.IProjector`2">
            <summary>
            Represents a projection from TSource to TResult;
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="T:MongoDB.Driver.Linq.IdentityProjector`1">
            <summary>
            Represents a projector that does nothing.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:MongoDB.Driver.Linq.IdentityProjector`1.#ctor(MongoDB.Driver.MongoCursor)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.Linq.IdentityProjector`1"/> class.
            </summary>
            <param name="cursor">The cursor.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.IdentityProjector`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.IdentityProjector`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:MongoDB.Driver.Linq.IdentityProjector`1.Cursor">
            <summary>
            Gets the cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.Projector`2">
            <summary>
            Represents a projection.
            </summary>
            <typeparam name="TSource">The type of the source objects.</typeparam>
            <typeparam name="TResult">The type of the result objects.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Linq.Projector`2.#ctor(MongoDB.Driver.MongoCursor{`0},System.Func{`0,`1})">
            <summary>
            Initializes a new instance of the Projector class.
            </summary>
            <param name="cursor">The cursor that supplies the source objects.</param>
            <param name="projection">The projection.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.Projector`2.GetEnumerator">
            <summary>
            Gets an enumerator for the result objects.
            </summary>
            <returns>An enumerator for the result objects.</returns>
        </member>
        <member name="P:MongoDB.Driver.Linq.Projector`2.Cursor">
            <summary>
            Gets the cursor.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.SelectQuery">
            <summary>
            Represents a LINQ query that has been translated to an equivalent MongoDB Find query.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.TranslatedQuery">
            <summary>
            Represents a LINQ query that has been translated to a MongoDB query.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.TranslatedQuery.#ctor(MongoDB.Driver.MongoCollection,System.Type)">
            <summary>
            Initializes a new instance of the MongoLinqQuery class.
            </summary>
            <param name="collection">The collection being queried.</param>
            <param name="documentType">The document type being queried.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.TranslatedQuery.Execute">
            <summary>
            Executes a query that returns a single result (overridden by subclasses).
            </summary>
            <returns>The result of executing the query.</returns>
        </member>
        <member name="P:MongoDB.Driver.Linq.TranslatedQuery.Collection">
            <summary>
            Gets the collection being queried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.TranslatedQuery.DocumentType">
            <summary>
            Get the document type being queried.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.SelectQuery.#ctor(MongoDB.Driver.MongoCollection,System.Type)">
            <summary>
            Initializes a new instance of the MongoLinqFindQuery class.
            </summary>
            <param name="collection">The collection being queried.</param>
            <param name="documentType">The document type.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.SelectQuery.BuildQuery">
            <summary>
            Creates an IMongoQuery from the where clause (returns null if no where clause was specified).
            </summary>
            <returns>An IMongoQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.SelectQuery.Execute">
            <summary>
            Executes the translated Find query.
            </summary>
            <returns>The result of executing the translated Find query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.SelectQuery.Translate(System.Linq.Expressions.Expression)">
            <summary>
            Translates a LINQ query expression tree.
            </summary>
            <param name="expression">The LINQ query expression tree.</param>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.OfType">
            <summary>
            Gets the final result type if an OfType query operator was used (otherwise null).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.OrderBy">
            <summary>
            Gets a list of Expressions that defines the sort order (or null if not specified).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.Projection">
            <summary>
            Gets the Expression that defines the projection (or null if not specified).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.Skip">
            <summary>
            Gets the Expression that defines how many documents to skip (or null if not specified).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.Take">
            <summary>
            Gets the Expression that defines how many documents to take (or null if not specified);
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.IndexHint">
            <summary>
            Gets the BsonValue (string or document) that defines which index to use (or null if not specified);
            </summary>
        </member>
        <member name="P:MongoDB.Driver.Linq.SelectQuery.Where">
            <summary>
            Gets the LambdaExpression that defines the where clause (or null if not specified).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.LinqExtensionMethods">
            <summary>
            Static class that contains the Mongo Linq extension methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.AsQueryable``1(MongoDB.Driver.MongoCollection)">
            <summary>
            Returns an instance of IQueryable{{T}} for a MongoCollection.
            </summary>
            <typeparam name="T">The type of the returned documents.</typeparam>
            <param name="collection">The name of the collection.</param>
            <returns>An instance of IQueryable{{T}} for a MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.LinqExtensionMethods.AsQueryable``1(MongoDB.Driver.MongoCollection{``0})">
            <summary>
            Returns an instance of IQueryable{{T}} for a MongoCollection.
            </summary>
            <typeparam name="T">The type of the returned documents.</typeparam>
            <param name="collection">The name of the collection.</param>
            <returns>An instance of IQueryable{{T}} for a MongoCollection.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoQueryable`1">
            <summary>
            An implementation of IQueryable{{T}} for querying a MongoDB collection.
            This class has been named MongoQueryable instead of MongoQuery to avoid confusion with IMongoQuery.
            </summary>
            <typeparam name="T">The type of the documents being queried.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.#ctor(MongoDB.Driver.Linq.MongoQueryProvider)">
            <summary>
            Initializes a new instance of the MongoQueryable class.
            </summary>
            <param name="provider">The query provider.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.#ctor(MongoDB.Driver.Linq.MongoQueryProvider,System.Linq.Expressions.Expression)">
            <summary>
            Initializes a new instance of the MongoQueryable class.
            </summary>
            <param name="provider">The query provider.</param>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.GetEnumerator">
            <summary>
            Gets an enumerator for the results of a MongoDB LINQ query.
            </summary>
            <returns>An enumerator for the results of a MongoDB LINQ query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryable`1.GetMongoQuery">
            <summary>
            Gets the MongoDB query that will be sent to the server when this LINQ query is executed.
            </summary>
            <returns>The MongoDB query.</returns>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoQueryProvider">
            <summary>
            An implementation of IQueryProvider for querying a MongoDB collection.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.#ctor(MongoDB.Driver.MongoCollection)">
            <summary>
            Initializes a new instance of the MongoQueryProvider class.
            </summary>
            <param name="collection">The collection being queried.</param>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.BuildMongoQuery``1(MongoDB.Driver.Linq.MongoQueryable{``0})">
            <summary>
            Builds the MongoDB query that will be sent to the server when the LINQ query is executed.
            </summary>
            <typeparam name="T">The type of the documents being queried.</typeparam>
            <param name="query">The LINQ query.</param>
            <returns>The MongoDB query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new instance of MongoQueryable{{T}} for this provider.
            </summary>
            <typeparam name="T">The type of the returned elements.</typeparam>
            <param name="expression">The query expression.</param>
            <returns>A new instance of MongoQueryable{{T}}.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
            Creates a new instance MongoQueryable{{T}} for this provider. Calls the generic CreateQuery{{T}} 
            to actually create the new MongoQueryable{{T}} instance.
            </summary>
            <param name="expression">The query expression.</param>
            <returns>A new instance of MongoQueryable{{T}}.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
            Executes a query.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="expression">The query expression.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
            Executes a query. Calls the generic method Execute{{T}} to actually execute the query.
            </summary>
            <param name="expression">The query expression.</param>
            <returns>The result of the query.</returns>
        </member>
        <member name="P:MongoDB.Driver.Linq.MongoQueryProvider.Collection">
            <summary>
            Gets the Collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.Linq.MongoQueryTranslator">
            <summary>
            A translator from LINQ expression queries to Mongo queries.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryTranslator.Translate(System.Linq.IQueryable)">
            <summary>
            Translate a MongoDB LINQ query.
            </summary>
            <param name="query">The MongoDB LINQ query.</param>
            <returns>A TranslatedQuery.</returns>
        </member>
        <member name="M:MongoDB.Driver.Linq.MongoQueryTranslator.Translate(MongoDB.Driver.Linq.MongoQueryProvider,System.Linq.Expressions.Expression)">
            <summary>
            Translate a MongoDB LINQ query.
            </summary>
            <param name="provider">The MongoDB query provider.</param>
            <param name="expression">The LINQ query expression.</param>
            <returns>A TranslatedQuery.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoUtils">
            <summary>
            Various static utility methods.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.Hash(System.String)">
            <summary>
            Gets the MD5 hash of a string.
            </summary>
            <param name="text">The string to get the MD5 hash of.</param>
            <returns>The MD5 hash.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.TimeSpanFromMicroseconds(System.Int64)">
            <summary>
            Creates a TimeSpan from microseconds.
            </summary>
            <param name="microseconds">The microseconds.</param>
            <returns>The TimeSpan.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.ToCamelCase(System.String)">
            <summary>
            Converts a string to camel case by lower casing the first letter (only the first letter is modified).
            </summary>
            <param name="value">The string to camel case.</param>
            <returns>The camel cased string.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUtils.ToInsecureString(System.Security.SecureString)">
            <summary>
            Should only be used when the safety of the data cannot be guaranteed.  For instance,
            when the secure string is a password used in a plain text protocol.
            </summary>
            <param name="secureString">The secure string.</param>
            <returns>The CLR string.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoDefaults">
            <summary>
            Default values for various Mongo settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AssignIdOnInsert">
            <summary>
            Gets or sets whether the driver should assign a value to empty Ids on Insert.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.AuthenticationMechanism">
            <summary>
            Gets or sets the default authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids (this is an alias for BsonDefaults.GuidRepresentation).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxBatchCount">
            <summary>
            Gets or sets the maximum batch count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxDocumentSize">
            <summary>
            Gets or sets the max document size
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MaxMessageLength">
            <summary>
            Gets or sets the max message length.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.ReadEncoding">
            <summary>
            Gets or sets the Read Encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.SafeMode">
            <summary>
            Gets or sets the safe mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.SecondaryAcceptableLatency">
            <summary>
            Gets or sets the default acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpReceiveBufferSize">
            <summary>
            Gets or sets the TCP receive buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.TcpSendBufferSize">
            <summary>
            Gets or sets the TCP send buffer size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize, see also WaitQueueSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size (see also WaitQueueMultiple).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDefaults.WriteEncoding">
            <summary>
            Gets or sets the Write Encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFS">
            <summary>
            Represents a GridFS file system.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoDatabase)">
            <summary>
            Initializes a new instance of the MongoGridFS class.
            </summary>
            <param name="database">The database containing the GridFS collections.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoDatabase,MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Initializes a new instance of the MongoGridFS class.
            </summary>
            <param name="database">The database containing the GridFS collections.</param>
            <param name="settings">The GridFS settings.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.#ctor(MongoDB.Driver.MongoServer,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFS"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="databaseName">The name of the database.</param>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.AppendText(System.String)">
            <summary>
            Appends UTF-8 encoded text to an existing GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A StreamWriter.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CopyTo(System.String,System.String)">
            <summary>
            Copies a GridFS file.
            </summary>
            <param name="sourceFileName">The source file name.</param>
            <param name="destFileName">The destination file name.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CopyTo(System.String,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Copies a GridFS file.
            </summary>
            <param name="sourceFileName">The source file name.</param>
            <param name="destFileName">The destination file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Create(System.String)">
            <summary>
            Creates or overwrites a GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Create(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Creates or overwrites a GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CreateText(System.String)">
            <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A stream writer.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.CreateText(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>A stream writer.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Delete(MongoDB.Driver.IMongoQuery)">
            <summary>
            Deletes GridFS files.
            </summary>
            <param name="query">A query that specifies the GridFS files to delete.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Delete(System.String)">
            <summary>
            Deletes all versions of a GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.DeleteById(MongoDB.Bson.BsonValue)">
            <summary>
            Deletes a GridFS file.
            </summary>
            <param name="id">The GridFS file Id.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.IMongoQuery)">
            <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="query">The GridFS file.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.IMongoQuery,System.Int32)">
            <summary>
            Downloads a specific version of a GridFS file.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="query">The GridFS file.</param>
            <param name="version">The version to download.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Downloads a GridFS file.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="fileInfo">The GridFS file.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,System.String)">
            <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="remoteFileName">The remote file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.IO.Stream,System.String,System.Int32)">
            <summary>
            Downloads a specific version of a GridFS file.
            </summary>
            <param name="stream">The destination stream.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="version">The version to download.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String)">
            <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
            <param name="fileName">The file name (same local and remote names).</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.Int32)">
            <summary>
            Downloads a specific version of a GridFS file.
            </summary>
            <param name="fileName">The file name (same local and remote names).</param>
            <param name="version">The version to download.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="query">The GridFS file.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.IMongoQuery,System.Int32)">
            <summary>
            Downloads a specific version of a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="query">The GridFS file.</param>
            <param name="version">The version to download.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Downloads a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="fileInfo">The GridFS file.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.String)">
            <summary>
            Downloads the most recent version of a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Download(System.String,System.String,System.Int32)">
            <summary>
            Downloads a specific version of a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="version">The version to download.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.EnsureIndexes">
            <summary>
            Ensures that the proper indexes for GridFS exist (only creates the new indexes if there are fewer than 1000 GridFS files).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.EnsureIndexes(System.Int32)">
            <summary>
            Ensures that the proper indexes for GridFS exist.
            </summary>
            <param name="maxFiles">Only create new indexes if there are fewer than this number of GridFS files).</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Exists(MongoDB.Driver.IMongoQuery)">
            <summary>
            Tests whether a GridFS file exists.
            </summary>
            <param name="query">The GridFS file.</param>
            <returns>True if the GridFS file exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Exists(System.String)">
            <summary>
            Tests whether a GridFS file exists.
            </summary>
            <param name="remoteFileName">The GridFS file.</param>
            <returns>True if the GridFS file exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.ExistsById(MongoDB.Bson.BsonValue)">
            <summary>
            Tests whether a GridFS file exists.
            </summary>
            <param name="id">The GridFS file.</param>
            <returns>True if the GridFS file exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Find(MongoDB.Driver.IMongoQuery)">
            <summary>
            Finds matching GridFS files.
            </summary>
            <param name="query">A query.</param>
            <returns>The matching GridFS files.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Find(System.String)">
            <summary>
            Finds matching GridFS files.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>The matching GridFS files.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindAll">
            <summary>
            Finds all GridFS files.
            </summary>
            <returns>The matching GridFS files.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(MongoDB.Driver.IMongoQuery)">
            <summary>
            Finds the most recent version of a GridFS file.
            </summary>
            <param name="query">The GridFS file.</param>
            <returns>The matching GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(MongoDB.Driver.IMongoQuery,System.Int32)">
            <summary>
            Finds a specific version of a GridFS file.
            </summary>
            <param name="query">The GridFS file.</param>
            <param name="version">The version to find (1 is oldest, -1 is newest, 0 is no sort).</param>
            <returns>The matching GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(System.String)">
            <summary>
            Finds the most recent version of a GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>The matching GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOne(System.String,System.Int32)">
            <summary>
            Finds a specific version of a GridFS file.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="version">The version to find.</param>
            <returns>The matching GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.FindOneById(MongoDB.Bson.BsonValue)">
            <summary>
            Finds a GridFS file.
            </summary>
            <param name="id">The GridFS file Id.</param>
            <returns>The GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.MoveTo(System.String,System.String)">
            <summary>
            Moves the most recent version of a GridFS file.
            </summary>
            <param name="sourceFileName">The source file name.</param>
            <param name="destFileName">The destination file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode)">
            <summary>
            Opens a GridFS file with the specified mode.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="mode">The mode.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a GridFS file with the specified mode and access.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Open(System.String,System.IO.FileMode,System.IO.FileAccess,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Opens a GridFS file with the specified mode, access and create options.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <param name="createOptions">The create options.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenRead(System.String)">
            <summary>
            Opens an existing GridFS file for reading.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenText(System.String)">
            <summary>
            Opens an existing UTF-8 encoded text GridFS file for reading.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A stream reader.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenWrite(System.String)">
            <summary>
            Opens an existing GridFS file for writing.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.OpenWrite(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Opens an existing GridFS file for writing.
            </summary>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetAliases(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.String[])">
            <summary>
            Sets the aliases for an existing GridFS file.
            </summary>
            <param name="fileInfo">The GridFS file.</param>
            <param name="aliases">The aliases.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetContentType(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.String)">
            <summary>
            Sets the content type for an existing GridFS file.
            </summary>
            <param name="fileInfo">The GridFS file.</param>
            <param name="contentType">The content type.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.SetMetadata(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Bson.BsonValue)">
            <summary>
            Sets the metadata for an existing GridFS file.
            </summary>
            <param name="fileInfo">The GridFS file.</param>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.IO.Stream,System.String)">
            <summary>
            Uploads a GridFS file.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="remoteFileName">The remote file name.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.IO.Stream,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Uploads a GridFS file.
            </summary>
            <param name="stream">The source stream.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.String)">
            <summary>
            Uploads a GridFS file.
            </summary>
            <param name="fileName">The file name (same local and remote names).</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFS.Upload(System.String,System.String)">
            <summary>
            Uploads a GridFS file.
            </summary>
            <param name="localFileName">The local file name.</param>
            <param name="remoteFileName">The remote file name.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Chunks">
            <summary>
            Gets the chunks collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Database">
            <summary>
            Gets the database containing the GridFS collections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.DatabaseName">
            <summary>
            Gets the database containing the GridFS collections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Files">
            <summary>
            Gets the files collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Server">
            <summary>
            Gets the server containing the GridFS collections.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFS.Settings">
            <summary>
            Gets the GridFS settings.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo">
            <summary>
            Represents information about a GridFS file (patterned after .NET's FileInfo class).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String)">
            <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
            <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
            <param name="remoteFileName">The remote file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
            <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="chunkSize">The chunk size.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.GridFS.MongoGridFS,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Initializes a new instance of the GridFSFileInfo class.
            </summary>
            <param name="gridFS">The GridFS file system that contains the GridFS file.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="serverInstance">The server instance.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="gridFSSettings">The GridFS settings.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="serverInstance">The server instance.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="gridFSSettings">The GridFS settings.</param>
            <param name="remoteFileName">The remote file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="serverInstance">The server instance.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="gridFSSettings">The GridFS settings.</param>
            <param name="fileInfo">The fileInfo.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoServerInstance,System.String,MongoDB.Driver.GridFS.MongoGridFSSettings,System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.GridFS.MongoGridFSFileInfo"/> class.
            </summary>
            <param name="server">The server.</param>
            <param name="serverInstance">The server instance.</param>
            <param name="databaseName">Name of the database.</param>
            <param name="gridFSSettings">The GridFS settings.</param>
            <param name="remoteFileName">The remote file name.</param>
            <param name="createOptions">The create options.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.op_Inequality(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Determines whether two specified MongoGridFSFileInfo objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.op_Equality(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Determines whether two specified MongoGridFSFileInfo objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(MongoDB.Driver.GridFS.MongoGridFSFileInfo,MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Determines whether two specified MongoGridFSFileInfo objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.AppendText">
            <summary>
            Appends UTF-8 encoded text to an existing GridFS file.
            </summary>
            <returns>A StreamWriter.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CopyTo(System.String)">
            <summary>
            Copies a GridFS file.
            </summary>
            <param name="destFileName">The destination file name.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CopyTo(System.String,MongoDB.Driver.GridFS.MongoGridFSCreateOptions)">
            <summary>
            Copies a GridFS file.
            </summary>
            <param name="destFileName">The destination file name.</param>
            <param name="createOptions">The create options.</param>
            <returns>The file info of the new GridFS file.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Create">
            <summary>
            Creates or overwrites a GridFS file.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.CreateText">
            <summary>
            Creates or opens a GridFS file for writing UTF-8 encoded text.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Delete">
            <summary>
            Deletes a GridFS file.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(MongoDB.Driver.GridFS.MongoGridFSFileInfo)">
            <summary>
            Determines whether this instance and another specified MongoGridFSFileInfo object have the same value.
            </summary>
            <param name="rhs">The MongoGridFSFileInfo object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a MongoGridFSFileInfo object, have the same value.
            </summary>
            <param name="obj">The MongoGridFSFileInfo object to compare to this instance.</param>
            <returns>True if obj is a MongoGridFSFileInfo object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GetHashCode">
            <summary>
            Returns the hash code for this MongoGridFSFileInfo object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.MoveTo(System.String)">
            <summary>
            Moves the most recent version of a GridFS file.
            </summary>
            <param name="destFileName">The destination file name.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Open(System.IO.FileMode)">
            <summary>
            Opens a GridFS file with the specified mode.
            </summary>
            <param name="mode">The mode.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Open(System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a GridFS file with the specified mode and access.
            </summary>
            <param name="mode">The mode.</param>
            <param name="access">The access.</param>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenRead">
            <summary>
            Opens an existing GridFS file for reading.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenText">
            <summary>
            Opens an existing UTF-8 encoded text GridFS file for reading.
            </summary>
            <returns>A stream reader.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.OpenWrite">
            <summary>
            Opens an existing GridFS file for writing.
            </summary>
            <returns>A stream.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Refresh">
            <summary>
            Refreshes the GridFS file info from the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Aliases">
            <summary>
            Gets the aliases.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ChunkSize">
            <summary>
            Gets the chunk size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ContentType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.DatabaseName">
            <summary>
            Gets the database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Exists">
            <summary>
            Gets whether the GridFS file exists.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GridFS">
            <summary>
            Gets the GridFS file system that contains this GridFS file.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.GridFSSettings">
            <summary>
            Gets the GridFS settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Id">
            <summary>
            Gets the GridFS file Id.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Length">
            <summary>
            Gets the file lenth.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.MD5">
            <summary>
            Gets the MD5 hash of the file contents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Metadata">
            <summary>
            Gets the metadata.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Name">
            <summary>
            Gets the remote file name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.Server">
            <summary>
            Gets the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.ServerInstance">
            <summary>
            Gets the server instance;
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSFileInfo.UploadDate">
            <summary>
            Gets the upload date.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFSSettings">
            <summary>
            Represents setting for GridFS.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor">
            <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor(MongoDB.Driver.MongoDatabase)">
            <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
            <param name="database">The database from which to inherit some of the settings.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.#ctor(System.Int32,System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Initializes a new instance of the MongoGridFSSettings class.
            </summary>
            <param name="chunkSize">The chunk size.</param>
            <param name="root">The root collection name.</param>
            <param name="writeConcern">The write concern.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.op_Inequality(MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Compares two MongoGridFSSettings.
            </summary>
            <param name="lhs">The first MongoGridFSSettings.</param>
            <param name="rhs">The other MongoGridFSSettings.</param>
            <returns>True if the two MongoGridFSSettings are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.op_Equality(MongoDB.Driver.GridFS.MongoGridFSSettings,MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Compares two MongoGridFSSettings.
            </summary>
            <param name="lhs">The first MongoGridFSSettings.</param>
            <param name="rhs">The other MongoGridFSSettings.</param>
            <returns>True if the two MongoGridFSSettings are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Clone">
            <summary>
            Creates a clone of the settings.
            </summary>
            <returns>A clone of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Equals(MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Compares this MongoGridFSSettings to another one.
            </summary>
            <param name="rhs">The other MongoGridFSSettings.</param>
            <returns>True if the two settings are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Equals(System.Object)">
            <summary>
            Compares this MongoGridFSSettings to another object.
            </summary>
            <param name="obj">The other object.</param>
            <returns>True if the other objects is a MongoGridFSSettings and is equal to this one.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.Freeze">
            <summary>
            Freezes the settings.
            </summary>
            <returns>The frozen settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.FrozenCopy">
            <summary>
            Returns a frozen copy of the settings.
            </summary>
            <returns>A frozen copy of the settings.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSSettings.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.Defaults">
            <summary>
            Gets or sets the default GridFS settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ChunksCollectionName">
            <summary>
            Gets the chunks collection name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ChunkSize">
            <summary>
            Gets or sets the chunk size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.FilesCollectionName">
            <summary>
            Gets the files collection name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.GuidRepresentation">
            <summary>
            Gets or sets the GuidRepresentation.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.IsFrozen">
            <summary>
            Gets whether the settings are frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ReadEncoding">
            <summary>
            Gets or sets the read encoding.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.ReadPreference">
            <summary>
            Gets or sets the ReadPreference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.Root">
            <summary>
            Gets or sets the root collection name (the files and chunks collection names are derived from the root).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.SafeMode">
            <summary>
            Gets or sets the safe mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.UpdateMD5">
            <summary>
            Gets or sets whether to udpate the MD5 hash on the server when a file is uploaded or modified.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.VerifyMD5">
            <summary>
            Gets or sets whether to verify the MD5 hash when a file is uploaded or downloaded.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.WriteConcern">
            <summary>
            Gets or sets the WriteConcern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSSettings.WriteEncoding">
            <summary>
            Gets or sets the write encoding.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.GridFS.MongoGridFSStream">
            <summary>
            Represents a stream interface to a GridFS file (patterned after .NET's Stream class).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.#ctor(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.IO.FileMode)">
            <summary>
            Initializes a new instance of the MongoGridFSStream class.
            </summary>
            <param name="fileInfo">The GridFS file info.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.#ctor(MongoDB.Driver.GridFS.MongoGridFSFileInfo,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Initializes a new instance of the MongoGridFSStream class.
            </summary>
            <param name="fileInfo">The GridFS file info.</param>
            <param name="mode">The mode.</param>
            <param name="access">The acess.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Flush">
            <summary>
            Flushes any unsaved data in the buffers to the GridFS file.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads bytes from the GridFS stream.
            </summary>
            <param name="buffer">The destination buffer.</param>
            <param name="offset">The offset in the destination buffer at which to place the read bytes.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>The number of bytes read.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.ReadByte">
            <summary>
            Reads one byte from the GridFS stream.
            </summary>
            <returns>The byte (-1 if at the end of the GridFS stream).</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Seeks to a new position.
            </summary>
            <param name="offset">The seek offset.</param>
            <param name="origin">The seek origin.</param>
            <returns>The new position.</returns>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.SetLength(System.Int64)">
            <summary>
            Sets the length of the GridFS file.
            </summary>
            <param name="value">The length.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes to the GridFS stream.
            </summary>
            <param name="buffer">The source buffer.</param>
            <param name="offset">The offset in the source buffer to the bytes.</param>
            <param name="count">The number of bytes to write.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.WriteByte(System.Byte)">
            <summary>
            Writes one byte to the GridFS stream.
            </summary>
            <param name="value">The byte.</param>
        </member>
        <member name="M:MongoDB.Driver.GridFS.MongoGridFSStream.Dispose(System.Boolean)">
            <summary>
            Disposes of any resources used by the stream.
            </summary>
            <param name="disposing">True if called from Dispose.</param>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanRead">
            <summary>
            Gets whether the GridFS stream supports reading.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanSeek">
            <summary>
            Gets whether the GridFS stream supports seeking.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.CanWrite">
            <summary>
            Gets whether the GridFS stream supports writing.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.Length">
            <summary>
            Gets the current length (use SetLength to change the length).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.Position">
            <summary>
            Gets or sets the current position.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GridFS.MongoGridFSStream.UpdateMD5">
            <summary>
            Gets or sets whether to compute and update the MD5 hash for the file when the stream is closed.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoServerState">
            <summary>
            The state of a MongoServer instance.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerState.Disconnected">
            <summary>
            Disconnected from the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerState.Connecting">
            <summary>
            Connecting to the server (in progress).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerState.Connected">
            <summary>
            Connected to the server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerState.ConnectedToSubset">
            <summary>
            Connected to a subset of the replica set members.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.MongoServerState.Disconnecting">
            <summary>
            Disconnecting from the server (in progress).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.QueryFlags">
            <summary>
            Flags used with queries (see the SetQueryFlags method of MongoCursor).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.TailableCursor">
            <summary>
            This cursor should be tailable.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.SlaveOk">
            <summary>
            It's OK for the query to be handled by a secondary server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.NoCursorTimeout">
            <summary>
            Tell the server not to let the cursor timeout.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.AwaitData">
            <summary>
            Tell the server to wait for data to become available before returning (only used with TailableCursor).
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.Exhaust">
            <summary>
            Tell the server to send all the data at once (in multiple messages if necessary) without waiting for GetMore messages.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.QueryFlags.Partial">
            <summary>
            Allow partial results in a sharded system if some of the shards are down.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCollection">
            <summary>
            Represents a MongoDB collection and the settings used to access it. This class is thread-safe.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.#ctor(MongoDB.Driver.MongoDatabase,System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Protected constructor for abstract base class.
            </summary>
            <param name="database">The database that contains this collection.</param>
            <param name="name">The name of the collection.</param>
            <param name="settings">The settings to use to access this collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Aggregate(MongoDB.Driver.AggregateArgs)">
            <summary>
            Represents an aggregate framework query. The command is not sent to the server until the result is enumerated.
            </summary>
            <param name="args">The args.</param>
            <returns>A sequence of documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Aggregate(System.Collections.Generic.IEnumerable{MongoDB.Bson.BsonDocument})">
            <summary>
            Runs an aggregation framework command.
            </summary>
            <param name="pipeline">The pipeline operations.</param>
            <returns>
            An AggregateResult.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Aggregate(MongoDB.Bson.BsonDocument[])">
            <summary>
            Runs an aggregation framework command.
            </summary>
            <param name="pipeline">The pipeline operations.</param>
            <returns>An AggregateResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.AggregateExplain(MongoDB.Driver.AggregateArgs)">
            <summary>
            Runs an aggregate command with explain set and returns the explain result.
            </summary>
            <param name="args">The args.</param>
            <returns>The explain result.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.BulkWrite(MongoDB.Driver.BulkWriteArgs)">
            <summary>
            Executes multiple write requests.
            </summary>
            <param name="args">The args.</param>
            <returns>
            A BulkWriteResult.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Count">
            <summary>
            Counts the number of documents in this collection.
            </summary>
            <returns>The number of documents in this collection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Count(MongoDB.Driver.CountArgs)">
            <summary>
            Counts the number of documents in this collection that match a query.
            </summary>
            <param name="args">The args.</param>
            <returns>
            The number of documents in this collection that match the query.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Count(MongoDB.Driver.IMongoQuery)">
            <summary>
            Counts the number of documents in this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>The number of documents in this collection that match the query.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(MongoDB.Driver.IMongoIndexKeys,MongoDB.Driver.IMongoIndexOptions)">
            <summary>
            Creates an index for this collection.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
            <param name="options">The index options(usually an IndexOptionsDocument or created using the IndexOption builder).</param>
            <returns>A WriteConcernResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(MongoDB.Driver.IMongoIndexKeys)">
            <summary>
            Creates an index for this collection.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
            <returns>A WriteConcernResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.CreateIndex(System.String[])">
            <summary>
            Creates an index for this collection.
            </summary>
            <param name="keyNames">The names of the indexed fields.</param>
            <returns>A WriteConcernResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(MongoDB.Driver.DistinctArgs)">
            <summary>
            Returns the distinct values for a given field.
            </summary>
            <param name="args">The args.</param>
            <returns>The distint values of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Distinct(System.String)">
            <summary>
            Returns the distinct values for a given field.
            </summary>
            <param name="key">The key of the field.</param>
            <returns>The distint values of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Distinct(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns the distinct values for a given field for documents that match a query.
            </summary>
            <param name="key">The key of the field.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>The distint values of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(System.String)">
            <summary>
            Returns the distinct values for a given field.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="key">The key of the field.</param>
            <returns>The distint values of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Distinct``1(System.String,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns the distinct values for a given field for documents that match a query.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="key">The key of the field.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>The distint values of the field.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Drop">
            <summary>
            Drops this collection.
            </summary>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.DropAllIndexes">
            <summary>
            Drops all indexes on this collection.
            </summary>
            <returns>A <see cref="T:MongoDB.Driver.CommandResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.DropIndex(MongoDB.Driver.IMongoIndexKeys)">
            <summary>
            Drops an index on this collection.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.CommandResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.DropIndex(System.String[])">
            <summary>
            Drops an index on this collection.
            </summary>
            <param name="keyNames">The names of the indexed fields.</param>
            <returns>A <see cref="T:MongoDB.Driver.CommandResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.DropIndexByName(System.String)">
            <summary>
            Drops an index on this collection.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>A <see cref="T:MongoDB.Driver.CommandResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(MongoDB.Driver.IMongoIndexKeys,MongoDB.Driver.IMongoIndexOptions)">
            <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
            <param name="options">The index options(usually an IndexOptionsDocument or created using the IndexOption builder).</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(MongoDB.Driver.IMongoIndexKeys)">
            <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.EnsureIndex(System.String[])">
            <summary>
            Ensures that the desired index exists and creates it if it does not.
            </summary>
            <param name="keyNames">The names of the indexed fields.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Exists">
            <summary>
            Tests whether this collection exists.
            </summary>
            <returns>True if this collection exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAllAs``1">
            <summary>
            Returns a cursor that can be used to find all documents in this collection as TDocuments.
            </summary>
            <typeparam name="TDocument">The nominal type of the documents.</typeparam>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAllAs(System.Type)">
            <summary>
            Returns a cursor that can be used to find all documents in this collection as TDocuments.
            </summary>
            <param name="documentType">The nominal type of the documents.</param>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate)">
            <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="sortBy">The sort order to select one of the matching documents.</param>
            <param name="update">The update to apply to the matching document.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,System.Boolean)">
            <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="sortBy">The sort order to select one of the matching documents.</param>
            <param name="update">The update to apply to the matching document.</param>
            <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,System.Boolean,System.Boolean)">
            <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="sortBy">The sort order to select one of the matching documents.</param>
            <param name="update">The update to apply to the matching document.</param>
            <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</param>
            <param name="upsert">Whether to do an upsert if no matching document is found.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.IMongoFields,System.Boolean,System.Boolean)">
            <summary>
            Finds one matching document using the query and sortBy parameters and applies the specified update to it.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="sortBy">The sort order to select one of the matching documents.</param>
            <param name="update">The update to apply to the matching document.</param>
            <param name="fields">Which fields of the modified document to return in the <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</param>
            <param name="returnNew">Whether to return the new or old version of the modified document in the <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</param>
            <param name="upsert">Whether to do an upsert if no matching document is found.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndModify(MongoDB.Driver.FindAndModifyArgs)">
            <summary>
            Finds one matching document using the supplied arguments and applies the specified update to it.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndRemove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoSortBy)">
            <summary>
            Finds one matching document using the query and sortBy parameters and removes it from this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="sortBy">The sort order to select one of the matching documents.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAndRemove(MongoDB.Driver.FindAndRemoveArgs)">
            <summary>
            Finds one matching document using the supplied args and removes it from this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.FindAndModifyResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAs``1(MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDocuments.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindAs(System.Type,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDocuments.
            </summary>
            <param name="documentType">The nominal type of the documents.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1">
            <summary>
            Returns one document in this collection as a TDocument.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1(MongoDB.Driver.FindOneArgs)">
            <summary>
            Returns one document in this collection as a TDocument.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="args">The args.</param>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs``1(MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns one document in this collection that matches a query as a TDocument.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type)">
            <summary>
            Returns one document in this collection as a TDocument.
            </summary>
            <param name="documentType">The nominal type of the documents.</param>
            <returns>A document (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type,MongoDB.Driver.FindOneArgs)">
            <summary>
            Returns one document in this collection as a TDocument.
            </summary>
            <param name="documentType">The nominal type of the documents.</param>
            <param name="args">The args.</param>
            <returns>A document (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneAs(System.Type,MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns one document in this collection that matches a query as a TDocument.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneByIdAs``1(MongoDB.Bson.BsonValue)">
            <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDocument.
            </summary>
            <typeparam name="TDocument">The nominal type of the document.</typeparam>
            <param name="id">The id of the document.</param>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.FindOneByIdAs(System.Type,MongoDB.Bson.BsonValue)">
            <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDocument.
            </summary>
            <param name="documentType">The nominal type of the document.</param>
            <param name="id">The id of the document.</param>
            <returns>A TDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs``1(System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <typeparam name="TDocument">The type of the found documents.</typeparam>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="options">The options for the geoHaystack search (null if none).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs``1(MongoDB.Driver.GeoHaystackSearchArgs)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <typeparam name="TDocument">The type of the found documents.</typeparam>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs(System.Type,System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="options">The options for the geoHaystack search (null if none).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoHaystackSearchAs(System.Type,MongoDB.Driver.GeoHaystackSearchArgs)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.GeoNearArgs)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs``1(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <typeparam name="TDocument">The type to deserialize the documents as.</typeparam>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <param name="options">The GeoNear command options (usually a GeoNearOptionsDocument or constructed using the GeoNearOptions builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.GeoNearArgs)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GeoNearAs(System.Type,MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="documentType">The type to deserialize the documents as.</param>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <param name="options">The GeoNear command options (usually a GeoNearOptionsDocument or constructed using the GeoNearOptions builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GetIndexes">
            <summary>
            Gets the indexes for this collection.
            </summary>
            <returns>A list of BsonDocuments that describe the indexes.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GetStats">
            <summary>
            Gets the stats for this collection.
            </summary>
            <returns>The stats for this collection as a <see cref="T:MongoDB.Driver.CollectionStatsResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GetStats(MongoDB.Driver.GetStatsArgs)">
            <summary>
            Gets the stats for this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>The stats for this collection as a <see cref="T:MongoDB.Driver.CollectionStatsResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GetTotalDataSize">
            <summary>
            Gets the total data size for this collection (data + indexes).
            </summary>
            <returns>The total data size.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.GetTotalStorageSize">
            <summary>
            Gets the total storage size for this collection (data + indexes + overhead).
            </summary>
            <returns>The total storage size.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.GroupArgs)">
            <summary>
            Runs the group command on this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A list of results as BsonDocuments.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Runs the group command on this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="keyFunction">A JavaScript function that returns the key value to group on.</param>
            <param name="initial">Initial value passed to the reduce function for each group.</param>
            <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
            <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
            <returns>A list of results as BsonDocuments.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoGroupBy,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Runs the group command on this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="keys">The names of the fields to group on.</param>
            <param name="initial">Initial value passed to the reduce function for each group.</param>
            <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
            <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
            <returns>A list of results as BsonDocuments.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Group(MongoDB.Driver.IMongoQuery,System.String,MongoDB.Bson.BsonDocument,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Runs the group command on this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="key">The name of the field to group on.</param>
            <param name="initial">Initial value passed to the reduce function for each group.</param>
            <param name="reduce">A JavaScript function that is called for each matching document in a group.</param>
            <param name="finalize">A JavaScript function that is called at the end of the group command.</param>
            <returns>A list of results as BsonDocuments.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.IndexExists(MongoDB.Driver.IMongoIndexKeys)">
            <summary>
            Tests whether an index exists.
            </summary>
            <param name="keys">The indexed fields (usually an IndexKeysDocument or constructed using the IndexKeys builder).</param>
            <returns>True if the index exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.IndexExists(System.String[])">
            <summary>
            Tests whether an index exists.
            </summary>
            <param name="keyNames">The names of the fields in the index.</param>
            <returns>True if the index exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.IndexExistsByName(System.String)">
            <summary>
            Tests whether an index exists.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>True if the index exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InitializeOrderedBulkOperation">
            <summary>
            Creates a fluent builder for an ordered bulk operation.
            </summary>
            <returns>A fluent bulk operation builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InitializeUnorderedBulkOperation">
            <summary>
            Creates a fluent builder for an unordered bulk operation.
            </summary>
            <returns>A fluent bulk operation builder.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
            <param name="document">The document to insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
            <param name="document">The document to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert``1(``0,MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <typeparam name="TNominalType">The nominal type of the document to insert.</typeparam>
            <param name="document">The document to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="nominalType">The nominal type of the document to insert.</param>
            <param name="document">The document to insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="nominalType">The nominal type of the document to insert.</param>
            <param name="document">The document to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Insert(System.Type,System.Object,MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="nominalType">The nominal type of the document to insert.</param>
            <param name="document">The document to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
            <param name="documents">The documents to insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
            <param name="documents">The documents to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <typeparam name="TNominalType">The type of the documents to insert.</typeparam>
            <param name="documents">The documents to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="nominalType">The nominal type of the documents to insert.</param>
            <param name="documents">The documents to insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable,MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="nominalType">The nominal type of the documents to insert.</param>
            <param name="documents">The documents to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.InsertBatch(System.Type,System.Collections.IEnumerable,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="nominalType">The nominal type of the documents to insert.</param>
            <param name="documents">The documents to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.IsCapped">
            <summary>
            Tests whether this collection is capped.
            </summary>
            <returns>True if this collection is capped.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.IMongoMapReduceOptions)">
            <summary>
            Runs a Map/Reduce command on this collection.
            </summary>
            <param name="map">A JavaScript function called for each document.</param>
            <param name="reduce">A JavaScript function called on the values emitted by the map function.</param>
            <param name="options">Options for this map/reduce command (see <see cref="T:MongoDB.Driver.MapReduceOptionsDocument"/>, <see cref="T:MongoDB.Driver.Wrappers.MapReduceOptionsWrapper"/> and the <see cref="T:MongoDB.Driver.Builders.MapReduceOptions"/> builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.MapReduceResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript,MongoDB.Driver.IMongoMapReduceOptions)">
            <summary>
            Runs a Map/Reduce command on document in this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="map">A JavaScript function called for each document.</param>
            <param name="reduce">A JavaScript function called on the values emitted by the map function.</param>
            <param name="options">Options for this map/reduce command (see <see cref="T:MongoDB.Driver.MapReduceOptionsDocument"/>, <see cref="T:MongoDB.Driver.Wrappers.MapReduceOptionsWrapper"/> and the <see cref="T:MongoDB.Driver.Builders.MapReduceOptions"/> builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.MapReduceResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Driver.IMongoQuery,MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Runs a Map/Reduce command on document in this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="map">A JavaScript function called for each document.</param>
            <param name="reduce">A JavaScript function called on the values emitted by the map function.</param>
            <returns>A <see cref="T:MongoDB.Driver.MapReduceResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Bson.BsonJavaScript,MongoDB.Bson.BsonJavaScript)">
            <summary>
            Runs a Map/Reduce command on this collection.
            </summary>
            <param name="map">A JavaScript function called for each document.</param>
            <param name="reduce">A JavaScript function called on the values emitted by the map function.</param>
            <returns>A <see cref="T:MongoDB.Driver.MapReduceResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.MapReduce(MongoDB.Driver.MapReduceArgs)">
            <summary>
            Runs a Map/Reduce command on this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.MapReduceResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.ParallelScanAs``1(MongoDB.Driver.ParallelScanArgs{``0})">
            <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="args">The args.</param>
            <returns>Multiple enumerators, one for each cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.ParallelScanAs(System.Type,MongoDB.Driver.ParallelScanArgs)">
            <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
            <param name="documentType">Type of the document.</param>
            <param name="args">The args.</param>
            <returns>Multiple enumerators, one for each cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.ReIndex">
            <summary>
            Runs the ReIndex command on this collection.
            </summary>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery)">
            <summary>
            Removes documents from this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.WriteConcern)">
            <summary>
            Removes documents from this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.RemoveFlags)">
            <summary>
            Removes documents from this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="flags">The flags for this Remove (see <see cref="T:MongoDB.Driver.RemoveFlags"/>).</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Remove(MongoDB.Driver.IMongoQuery,MongoDB.Driver.RemoveFlags,MongoDB.Driver.WriteConcern)">
            <summary>
            Removes documents from this collection that match a query.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="flags">The flags for this Remove (see <see cref="T:MongoDB.Driver.RemoveFlags"/>).</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.RemoveAll">
            <summary>
            Removes all documents from this collection (see also <see cref="M:MongoDB.Driver.MongoCollection.Drop"/>).
            </summary>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.RemoveAll(MongoDB.Driver.WriteConcern)">
            <summary>
            Removes all documents from this collection (see also <see cref="M:MongoDB.Driver.MongoCollection.Drop"/>).
            </summary>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <typeparam name="TNominalType">The type of the document to save.</typeparam>
            <param name="document">The document to save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <typeparam name="TNominalType">The type of the document to save.</typeparam>
            <param name="document">The document to save.</param>
            <param name="options">The options to use for this Save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save``1(``0,MongoDB.Driver.WriteConcern)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <typeparam name="TNominalType">The type of the document to save.</typeparam>
            <param name="document">The document to save.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="nominalType">The type of the document to save.</param>
            <param name="document">The document to save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="nominalType">The type of the document to save.</param>
            <param name="document">The document to save.</param>
            <param name="options">The options to use for this Save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Save(System.Type,System.Object,MongoDB.Driver.WriteConcern)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="nominalType">The type of the document to save.</param>
            <param name="document">The document to save.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.ToString">
            <summary>
            Gets a canonical string representation for this database.
            </summary>
            <returns>A canonical string representation for this database.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate)">
            <summary>
            Updates one matching document in this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="update">The update to perform on the matching document.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.MongoUpdateOptions)">
            <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="update">The update to perform on the matching document.</param>
            <param name="options">The update options.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.WriteConcern)">
            <summary>
            Updates one matching document in this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="update">The update to perform on the matching document.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.UpdateFlags)">
            <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="update">The update to perform on the matching document.</param>
            <param name="flags">The flags for this Update.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Update(MongoDB.Driver.IMongoQuery,MongoDB.Driver.IMongoUpdate,MongoDB.Driver.UpdateFlags,MongoDB.Driver.WriteConcern)">
            <summary>
            Updates one or more matching documents in this collection (for multiple updates use UpdateFlags.Multi).
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="update">The update to perform on the matching document.</param>
            <param name="flags">The flags for this Update.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Validate">
            <summary>
            Validates the integrity of this collection.
            </summary>
            <returns>A <see cref="T:MongoDB.Driver.ValidateCollectionResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection.Validate(MongoDB.Driver.ValidateCollectionArgs)">
            <summary>
            Validates the integrity of this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.ValidateCollectionResult"/>.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoCollection.Database">
            <summary>
            Gets the database that contains this collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollection.FullName">
            <summary>
            Gets the fully qualified name of this collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollection.Name">
            <summary>
            Gets the name of this collection.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCollection.Settings">
            <summary>
            Gets the settings being used to access this collection.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCollection`1">
            <summary>
            Represents a MongoDB collection and the settings used to access it as well as a default document type. This class is thread-safe.
            </summary>
            <typeparam name="TDefaultDocument">The default document type of the collection.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.#ctor(MongoDB.Driver.MongoDatabase,System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Creates a new instance of MongoCollection. Normally you would call one of the indexers or GetCollection methods
            of MongoDatabase instead.
            </summary>
            <param name="database">The database that contains this collection.</param>
            <param name="name">The name of the collection.</param>
            <param name="settings">The settings to use to access this collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.#ctor(MongoDB.Driver.MongoDatabase,MongoDB.Driver.MongoCollectionSettings{`0})">
            <summary>
            Creates a new instance of MongoCollection. Normally you would call one of the indexers or GetCollection methods
            of MongoDatabase instead.
            </summary>
            <param name="database">The database that contains this collection.</param>
            <param name="settings">The settings to use to access this collection.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Find(MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns a cursor that can be used to find all documents in this collection that match the query as TDefaultDocuments.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.FindAll">
            <summary>
            Returns a cursor that can be used to find all documents in this collection as TDefaultDocuments.
            </summary>
            <returns>A <see cref="T:MongoDB.Driver.MongoCursor`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.FindOne">
            <summary>
            Returns one document in this collection as a TDefaultDocument.
            </summary>
            <returns>A TDefaultDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.FindOne(MongoDB.Driver.IMongoQuery)">
            <summary>
            Returns one document in this collection that matches a query as a TDefaultDocument.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <returns>A TDefaultDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.FindOneById(MongoDB.Bson.BsonValue)">
            <summary>
            Returns a cursor that can be used to find one document in this collection by its _id value as a TDefaultDocument.
            </summary>
            <param name="id">The id of the document.</param>
            <returns>A TDefaultDocument (or null if not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.GeoHaystackSearch(System.Double,System.Double,MongoDB.Driver.IMongoGeoHaystackSearchOptions)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="options">The options for the geoHaystack search (null if none).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.GeoHaystackSearch(MongoDB.Driver.GeoHaystackSearchArgs)">
            <summary>
            Runs a geoHaystack search command on this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoHaystackSearchResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.GeoNearArgs)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="args">The args.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.GeoNear(MongoDB.Driver.IMongoQuery,System.Double,System.Double,System.Int32,MongoDB.Driver.IMongoGeoNearOptions)">
            <summary>
            Runs a GeoNear command on this collection.
            </summary>
            <param name="query">The query (usually a QueryDocument or constructed using the Query builder).</param>
            <param name="x">The x coordinate of the starting location.</param>
            <param name="y">The y coordinate of the starting location.</param>
            <param name="limit">The maximum number of results returned.</param>
            <param name="options">Options for the GeoNear command (see <see cref="T:MongoDB.Driver.GeoNearOptionsDocument"/>, <see cref="T:MongoDB.Driver.Wrappers.GeoNearOptionsWrapper"/>, and the <see cref="T:MongoDB.Driver.Builders.GeoNearOptions"/> builder).</param>
            <returns>A <see cref="T:MongoDB.Driver.GeoNearResult`1"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="document">The document to insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="document">The document to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Insert(`0,MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts a document into this collection (see also InsertBatch to insert multiple documents at once).
            </summary>
            <param name="document">The document to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="documents">The documents to insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="documents">The documents to insert.</param>
            <param name="options">The options to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.InsertBatch(System.Collections.Generic.IEnumerable{`0},MongoDB.Driver.WriteConcern)">
            <summary>
            Inserts multiple documents at once into this collection (see also Insert to insert a single document).
            </summary>
            <param name="documents">The documents to insert.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A list of WriteConcernResults (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.ParallelScan(MongoDB.Driver.ParallelScanArgs{`0})">
            <summary>
            Scans an entire collection in parallel using multiple cursors.
            </summary>
            <param name="args">The args.</param>
            <returns>Multiple enumerators, one for each cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="document">The document to save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0,MongoDB.Driver.MongoInsertOptions)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="document">The document to save.</param>
            <param name="options">The options to use for this Save.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCollection`1.Save(`0,MongoDB.Driver.WriteConcern)">
            <summary>
            Saves a document to this collection. The document must have an identifiable Id field. Based on the value
            of the Id field Save will perform either an Insert or an Update.
            </summary>
            <param name="document">The document to save.</param>
            <param name="writeConcern">The write concern to use for this Insert.</param>
            <returns>A WriteConcernResult (or null if WriteConcern is disabled).</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoConnectionStringBuilder">
            <summary>
            Represents .NET style connection strings. We recommend you use URL style connection strings
            (see MongoUrl and MongoUrlBuilder).
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.#ctor">
            <summary>
            Creates a new instance of MongoConnectionStringBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoConnectionStringBuilder.
            </summary>
            <param name="connectionString">The initial settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.Clear">
            <summary>
            Clears all settings to their default values.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.ContainsKey(System.String)">
            <summary>
            Tests whether a keyword is valid.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns>True if the keyword is valid.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoConnectionStringBuilder.ToServerSettings">
            <summary>
            Creates a new instance of MongoServerSettings based on the settings in this MongoConnectionStringBuilder.
            </summary>
            <returns>A new instance of MongoServerSettings.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.AuthenticationMechanism">
            <summary>
            Gets or sets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.AuthenticationSource">
            <summary>
            Gets or sets the auth source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.ConnectionMode">
            <summary>
            Gets or sets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.ConnectTimeout">
            <summary>
            Gets or sets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.DatabaseName">
            <summary>
            Gets or sets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.FSync">
            <summary>
            Gets or sets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.GssapiServiceName">
            <summary>
            Gets or sets the GSSAPI service name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.GuidRepresentation">
            <summary>
            Gets or sets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.IPv6">
            <summary>
            Gets or sets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Journal">
            <summary>
            Gets or sets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.MaxConnectionIdleTime">
            <summary>
            Gets or sets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.MaxConnectionLifeTime">
            <summary>
            Gets or sets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.MaxConnectionPoolSize">
            <summary>
            Gets or sets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.MinConnectionPoolSize">
            <summary>
            Gets or sets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Password">
            <summary>
            Gets or sets the default password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.ReplicaSetName">
            <summary>
            Gets or sets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.SafeMode">
            <summary>
            Gets or sets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.SecondaryAcceptableLatency">
            <summary>
            Gets or sets the acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Server">
            <summary>
            Gets or sets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Servers">
            <summary>
            Gets or sets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.SlaveOk">
            <summary>
            Gets or sets whether queries should be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.SocketTimeout">
            <summary>
            Gets or sets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Username">
            <summary>
            Gets or sets the default username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.UseSsl">
            <summary>
            Gets or sets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.VerifySslCertificate">
            <summary>
            Gets or sets whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.W">
            <summary>
            Gets or sets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.WaitQueueMultiple">
            <summary>
            Gets or sets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.WaitQueueSize">
            <summary>
            Gets or sets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.WaitQueueTimeout">
            <summary>
            Gets or sets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.WTimeout">
            <summary>
            Gets or sets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoConnectionStringBuilder.Item(System.String)">
            <summary>
            Gets or sets individual settings by keyword.
            </summary>
            <param name="keyword">The keyword.</param>
            <returns>The value of the setting.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCredential">
            <summary>
            Credential to access a MongoDB database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.#ctor(System.String,MongoDB.Driver.MongoIdentity,MongoDB.Driver.MongoIdentityEvidence)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MongoCredential"/> class.
            </summary>
            <param name="mechanism">Mechanism to authenticate with.</param>
            <param name="identity">The identity.</param>
            <param name="evidence">The evidence.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Equality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.op_Inequality(MongoDB.Driver.MongoCredential,MongoDB.Driver.MongoCredential)">
            <summary>
            Compares two MongoCredentials.
            </summary>
            <param name="lhs">The first MongoCredential.</param>
            <param name="rhs">The other MongoCredential.</param>
            <returns>True if the two MongoCredentials are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for GSSAPI.</returns>
            <remarks>This overload is used primarily on linux.</remarks>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.String)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateGssapiCredential(System.String,System.Security.SecureString)">
            <summary>
            Creates a GSSAPI credential.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for GSSAPI.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.String)">
            <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for MONGODB-CR.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoCRCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for MONGODB-CR.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreateMongoX509Credential(System.String)">
            <summary>
            Creates a credential used with MONGODB-CR.
            </summary>
            <param name="username">The username.</param>
            <returns>A credential for MONGODB-X509.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.String)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.CreatePlainCredential(System.String,System.String,System.Security.SecureString)">
            <summary>
            Creates a PLAIN credential.
            </summary>
            <param name="databaseName">Name of the database.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A credential for PLAIN.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetMechanismProperty``1(System.String,``0)">
            <summary>
            Gets the mechanism property.
            </summary>
            <typeparam name="T">The type of the mechanism property.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The mechanism property if one was set; otherwise the default value.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(MongoDB.Driver.MongoCredential)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="rhs">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.Equals(System.Object)">
            <summary>
            Compares this MongoCredential to another MongoCredential.
            </summary>
            <param name="obj">The other credential.</param>
            <returns>True if the two credentials are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.GetHashCode">
            <summary>
            Gets the hashcode for the credential.
            </summary>
            <returns>The hashcode.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.ToString">
            <summary>
            Returns a string representation of the credential.
            </summary>
            <returns>A string representation of the credential.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCredential.WithMechanismProperty(System.String,System.Object)">
            <summary>
            Creates a new MongoCredential with the specified mechanism property.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>A new MongoCredential with the specified mechanism property.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Evidence">
            <summary>
            Gets the evidence.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Identity">
            <summary>
            Gets the identity.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Mechanism">
            <summary>
            Gets the mechanism to authenticate with.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Source">
            <summary>
            Gets the source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCredential.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MapReduceResult">
            <summary>
            Represents the result of a map/reduce command.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.MapReduceResult"/> class.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.GetInlineResultsAs``1">
            <summary>
            Gets the inline results as TDocuments.
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <returns>The documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.GetInlineResultsAs(System.Type)">
            <summary>
            Gets the inline results as TDocuments.
            </summary>
            <param name="documentType">The type of the documents.</param>
            <returns>The documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.GetResults">
            <summary>
            Gets the results (either inline or fetched from the output collection).
            </summary>
            <returns>The documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.GetResultsAs``1">
            <summary>
            Gets the results as TDocuments (either inline or fetched from the output collection).
            </summary>
            <typeparam name="TDocument">The type of the documents.</typeparam>
            <returns>The documents.</returns>
        </member>
        <member name="M:MongoDB.Driver.MapReduceResult.GetResultsAs(System.Type)">
            <summary>
            Gets the results as TDocuments (either inline or fetched from the output collection).
            </summary>
            <param name="documentType">The type of the documents.</param>
            <returns>The documents.</returns>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.CollectionName">
            <summary>
            Gets the output collection name (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.DatabaseName">
            <summary>
            Gets the output database name (null if none).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.Duration">
            <summary>
            Gets the duration.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.EmitCount">
            <summary>
            Gets the emit count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.OutputCount">
            <summary>
            Gets the output count.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.InlineResults">
            <summary>
            Gets the inline results.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MapReduceResult.InputCount">
            <summary>
            Gets the input count.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoServer">
            <summary>
            Represents a MongoDB server (either a single instance or a replica set) and the settings used to access it. This class is thread-safe.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.#ctor(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Creates a new instance of MongoServer. Normally you will use one of the Create methods instead
            of the constructor to create instances of this class.
            </summary>
            <param name="settings">The settings for this instance of MongoServer.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create(MongoDB.Driver.MongoConnectionStringBuilder)">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <param name="builder">Server settings in the form of a MongoConnectionStringBuilder.</param>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create(MongoDB.Driver.MongoServerSettings)">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <param name="settings">Server settings.</param>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create(MongoDB.Driver.MongoUrl)">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <param name="url">Server settings in the form of a MongoUrl.</param>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create(System.String)">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <param name="connectionString">Server settings in the form of a connection string.</param>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Create(System.Uri)">
            <summary>
            Creates a new instance or returns an existing instance of MongoServer. Only one instance
            is created for each combination of server settings.
            </summary>
            <param name="uri">Server settings in the form of a Uri.</param>
            <returns>
            A new or existing instance of MongoServer.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetAllServers">
            <summary>
            Gets an array containing a snapshot of the set of all servers that have been created so far.
            </summary>
            <returns>An array containing a snapshot of the set of all servers that have been created so far.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.UnregisterAllServers">
            <summary>
            Unregisters all servers from the dictionary used by Create to remember which servers have already been created.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.UnregisterServer(MongoDB.Driver.MongoServer)">
            <summary>
            Unregisters a server from the dictionary used by Create to remember which servers have already been created.
            </summary>
            <param name="server">The server to unregister.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Connect">
            <summary>
            Connects to the server. Normally there is no need to call this method as
            the driver will connect to the server automatically when needed.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Connect(System.TimeSpan)">
            <summary>
            Connects to the server. Normally there is no need to call this method as
            the driver will connect to the server automatically when needed.
            </summary>
            <param name="timeout">How long to wait before timing out.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.CopyDatabase(System.String,System.String)">
            <summary>
            Copies a database.
            </summary>
            <param name="from">The name of an existing database.</param>
            <param name="to">The name of the new database.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.CreateDatabaseSettings(System.String)">
            <summary>
            Creates an instance of MongoDatabaseSettings for the named database with the rest of the settings inherited.
            You can override some of these settings before calling GetDatabase.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <returns>An instance of MongoDatabase for <paramref name="databaseName"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.DatabaseExists(System.String)">
            <summary>
            Tests whether a database exists.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <returns>True if the database exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Disconnect">
            <summary>
            Disconnects from the server. Normally there is no need to call this method so
            you should be sure to have a good reason to call it.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.DropDatabase(System.String)">
            <summary>
            Drops a database.
            </summary>
            <param name="databaseName">The name of the database to be dropped.</param>
            <returns>A <see cref="T:MongoDB.Driver.CommandResult"/>.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.FetchDBRef(MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef.
            </summary>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>A BsonDocument (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.FetchDBRefAs``1(MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef, deserialized as a <typeparamref name="TDocument"/>.
            </summary>
            <typeparam name="TDocument">The nominal type of the document to fetch.</typeparam>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>A <typeparamref name="TDocument"/> (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.FetchDBRefAs(System.Type,MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef.
            </summary>
            <param name="documentType">The nominal type of the document to fetch.</param>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>The document (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetDatabase(MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseSettings">The settings to use with this database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <param name="writeConcern">The write concern to use with this database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetDatabase(System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <param name="databaseSettings">The settings to use with this database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetDatabaseNames">
            <summary>
            Gets the names of the databases on this server.
            </summary>
            <returns>A list of database names.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.GetLastError">
            <summary>
            Gets the last error (if any) that occurred on this connection. You MUST be within a RequestStart to call this method.
            </summary>
            <returns>The last error (<see cref="T:MongoDB.Driver.GetLastErrorResult"/>)</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.IsDatabaseNameValid(System.String,System.String@)">
            <summary>
            Checks whether a given database name is valid on this server.
            </summary>
            <param name="databaseName">The database name.</param>
            <param name="message">An error message if the database name is not valid.</param>
            <returns>True if the database name is valid; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Ping">
            <summary>
            Checks whether the server is alive (throws an exception if not). If server is a replica set, pings all members one at a time.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Reconnect">
            <summary>
            Reconnects to the server. Normally there is no need to call this method. All connections
            are closed and new connections will be opened as needed. Calling
            this method frequently will result in connection thrashing.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.RequestDone">
            <summary>
            Lets the server know that this thread is done with a series of related operations. Instead of calling this method it is better
            to put the return value of RequestStart in a using statement.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.RequestStart(MongoDB.Driver.MongoDatabase)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="initialDatabase">One of the databases involved in the related operations.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoServer.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.RequestStart(MongoDB.Driver.MongoDatabase,System.Boolean)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="initialDatabase">One of the databases involved in the related operations.</param>
            <param name="slaveOk">Whether a secondary is acceptable.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoServer.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.RequestStart(MongoDB.Driver.MongoDatabase,MongoDB.Driver.ReadPreference)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="initialDatabase">One of the databases involved in the related operations.</param>
            <param name="readPreference">The read preference.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoServer.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.RequestStart(MongoDB.Driver.MongoDatabase,MongoDB.Driver.MongoServerInstance)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="initialDatabase">One of the databases involved in the related operations.</param>
            <param name="serverInstance">The server instance this request should be tied to.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoServer.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.Shutdown">
            <summary>
            Shuts down the server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServer.VerifyState">
            <summary>
            Verifies the state of the server (in the case of a replica set all members are contacted one at a time).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.MaxServerCount">
            <summary>
            Gets or sets the maximum number of instances of MongoServer that will be allowed to be created.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.ServerCount">
            <summary>
            Gets the number of instances of MongoServer that have been created.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Arbiters">
            <summary>
            Gets the arbiter instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.BuildInfo">
            <summary>
            Gets the build info of the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.ConnectionAttempt">
            <summary>
            Gets the most recent connection attempt number.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Instance">
            <summary>
            Gets the one and only instance for this server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Instances">
            <summary>
            Gets the instances for this server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Passives">
            <summary>
            Gets the passive instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Primary">
            <summary>
            Gets the primary instance (null if there is no primary).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.ReplicaSetName">
            <summary>
            Gets the name of the replica set (null if not connected to a replica set).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.RequestConnection">
            <summary>
            Gets the connection reserved by the current RequestStart scope (null if not in the scope of a RequestStart).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.RequestNestingLevel">
            <summary>
            Gets the RequestStart nesting level for the current thread.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Secondaries">
            <summary>
            Gets the secondary instances.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.SequentialId">
            <summary>
            Gets the unique sequential Id for this server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Settings">
            <summary>
            Gets the settings for this server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.State">
            <summary>
            Gets the current state of this server (as of the last operation, not updated until another operation is performed).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Item(System.String)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Item(MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseSettings">The settings to use with this database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServer.Item(System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoDatabase instance representing a database on this server.
            </summary>
            <param name="databaseName">The name of the database.</param>
            <param name="writeConcern">The write concern to use with this database.</param>
            <returns>A new or existing instance of MongoDatabase.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoCursor">
            <summary>
            An object that can be enumerated to fetch the results of a query. The query is not sent
            to the server until you begin enumerating the results.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Creates a new MongoCursor. It is very unlikely that you will call this constructor. Instead, see all the Find methods in MongoCollection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="query">The query.</param>
            <param name="readPreference">The read preference.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Create(System.Type,MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Creates a cursor.
            </summary>
            <param name="documentType">The type of the returned documents.</param>
            <param name="collection">The collection to query.</param>
            <param name="query">A query.</param>
            <param name="readPreference">The read preference.</param>
            <param name="serializer">The serializer.</param>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Clone``1">
            <summary>
            Creates a clone of the cursor.
            </summary>
            <typeparam name="TDocument">The type of the documents returned.</typeparam>
            <returns>A clone of the cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Clone``1(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Creates a clone of the cursor.
            </summary>
            <typeparam name="TDocument">The type of the documents returned.</typeparam>
            <param name="serializer">The serializer to use.</param>
            <returns>
            A clone of the cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Clone(System.Type)">
            <summary>
            Creates a clone of the cursor.
            </summary>
            <param name="documentType">The type of the documents returned.</param>
            <returns>A clone of the cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Clone(System.Type,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Creates a clone of the cursor.
            </summary>
            <param name="documentType">The type of the documents returned.</param>
            <param name="serializer">The serializer to use.</param>
            <returns>
            A clone of the cursor.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Count">
            <summary>
            Returns the number of documents that match the query (ignores Skip and Limit, unlike Size which honors them).
            </summary>
            <returns>The number of documents that match the query.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Explain">
            <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
            <returns>An explanation of thow the query was executed.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Explain(System.Boolean)">
            <summary>
            Returns an explanation of how the query was executed (instead of the results).
            </summary>
            <param name="verbose">Whether the explanation should contain more details.</param>
            <returns>An explanation of thow the query was executed.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetBatchSize(System.Int32)">
            <summary>
            Sets the batch size (the number of documents returned per batch).
            </summary>
            <param name="batchSize">The number of documents in each batch.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetFields(MongoDB.Driver.IMongoFields)">
            <summary>
            Sets the fields that will be returned from the server.
            </summary>
            <param name="fields">The fields that will be returned from the server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetFields(System.String[])">
            <summary>
            Sets the fields that will be returned from the server.
            </summary>
            <param name="fields">The fields that will be returned from the server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetFlags(MongoDB.Driver.QueryFlags)">
            <summary>
            Sets the query flags.
            </summary>
            <param name="flags">The query flags.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetHint(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the index hint for the query.
            </summary>
            <param name="hint">The index hint.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetHint(System.String)">
            <summary>
            Sets the index hint for the query.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetLimit(System.Int32)">
            <summary>
            Sets the limit on the number of documents to be returned.
            </summary>
            <param name="limit">The limit on the number of documents to be returned.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetMax(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the max value for the index key range of documents to return (note: the max value itself is excluded from the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
            <param name="max">The max value.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetMaxScan(System.Int32)">
            <summary>
            Sets the maximum number of documents to scan.
            </summary>
            <param name="maxScan">The maximum number of documents to scan.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetMaxTime(System.TimeSpan)">
            <summary>
            Sets the maximum time the server should spend on this query.
            </summary>
            <param name="maxTime">The max time.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetMin(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the min value for the index key range of documents to return (note: the min value itself is included in the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
            <param name="min">The min value.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetOption(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets a cursor option.
            </summary>
            <param name="name">The name of the option.</param>
            <param name="value">The value of the option.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetOptions(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets multiple cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
            <param name="options">The options.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Sets the read preference.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSerializer(MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Sets the serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetShowDiskLoc">
            <summary>
            Sets the $showDiskLoc option.
            </summary>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSkip(System.Int32)">
            <summary>
            Sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
            <param name="skip">The number of documents to skip.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSlaveOk(System.Boolean)">
            <summary>
            Sets whether the query should be sent to a secondary server.
            </summary>
            <param name="slaveOk">Whether the query can be sent to a secondary server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSnapshot">
            <summary>
            Sets the $snapshot option.
            </summary>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
            <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
            <param name="sortBy">The sort order.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.SetSortOrder(System.String[])">
            <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
            <param name="keys">The names of the fields to sort by.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.Size">
            <summary>
            Returns the size of the result set (honors Skip and Limit, unlike Count which does not).
            </summary>
            <returns>The size of the result set.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor.IEnumerableGetEnumerator">
            <summary>
            Gets the non-generic enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Server">
            <summary>
            Gets the server that the query will be sent to.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Database">
            <summary>
            Gets the database that constains the collection that is being queried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Collection">
            <summary>
            Gets the collection that is being queried.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Query">
            <summary>
            Gets the query that will be sent to the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Fields">
            <summary>
            Gets or sets the fields that will be returned from the server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Options">
            <summary>
            Gets or sets the cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Flags">
            <summary>
            Gets or sets the query flags.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.ReadPreference">
            <summary>
            Gets or sets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.SlaveOk">
            <summary>
            Gets or sets whether the query can be sent to a secondary server.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Skip">
            <summary>
            Gets or sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Limit">
            <summary>
            Gets or sets the limit on the number of documents to be returned.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.BatchSize">
            <summary>
            Gets or sets the batch size (the number of documents returned per batch).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.Serializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor.IsFrozen">
            <summary>
            Gets whether the cursor has been frozen to prevent further changes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoCursor`1">
            <summary>
            An object that can be enumerated to fetch the results of a query. The query is not sent
            to the server until you begin enumerating the results.
            </summary>
            <typeparam name="TDocument">The type of the documents returned.</typeparam>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.#ctor(MongoDB.Driver.MongoCollection,MongoDB.Driver.IMongoQuery,MongoDB.Driver.ReadPreference,MongoDB.Bson.Serialization.IBsonSerializer)">
            <summary>
            Creates a new MongoCursor. It is very unlikely that you will call this constructor. Instead, see all the Find methods in MongoCollection.
            </summary>
            <param name="collection">The collection.</param>
            <param name="query">The query.</param>
            <param name="readPreference">The read preference.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.GetEnumerator">
            <summary>
            Returns an enumerator that can be used to enumerate the cursor. Normally you will use the foreach statement
            to enumerate the cursor (foreach will call GetEnumerator for you).
            </summary>
            <returns>An enumerator that can be used to iterate over the cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetBatchSize(System.Int32)">
            <summary>
            Sets the batch size (the number of documents returned per batch).
            </summary>
            <param name="batchSize">The number of documents in each batch.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetFields(MongoDB.Driver.IMongoFields)">
            <summary>
            Sets the fields that will be returned from the server.
            </summary>
            <param name="fields">The fields that will be returned from the server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetFields(System.String[])">
            <summary>
            Sets the fields that will be returned from the server.
            </summary>
            <param name="fields">The fields that will be returned from the server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetFlags(MongoDB.Driver.QueryFlags)">
            <summary>
            Sets the query flags.
            </summary>
            <param name="flags">The query flags.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetHint(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the index hint for the query.
            </summary>
            <param name="hint">The index hint.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetHint(System.String)">
            <summary>
            Sets the index hint for the query.
            </summary>
            <param name="indexName">The name of the index.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetLimit(System.Int32)">
            <summary>
            Sets the limit on the number of documents to be returned.
            </summary>
            <param name="limit">The limit on the number of documents to be returned.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetMax(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the max value for the index key range of documents to return (note: the max value itself is excluded from the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
            <param name="max">The max value.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetMaxScan(System.Int32)">
            <summary>
            Sets the maximum number of documents to scan.
            </summary>
            <param name="maxScan">The maximum number of documents to scan.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetMaxTime(System.TimeSpan)">
            <summary>
            Sets the maximum time the server should spend on this query.
            </summary>
            <param name="maxTime">The max time.</param>
            <returns></returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetMin(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets the min value for the index key range of documents to return (note: the min value itself is included in the range).
            Often combined with SetHint (if SetHint is not used the server will attempt to determine the matching index automatically).
            </summary>
            <param name="min">The min value.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetOption(System.String,MongoDB.Bson.BsonValue)">
            <summary>
            Sets a cursor option.
            </summary>
            <param name="name">The name of the option.</param>
            <param name="value">The value of the option.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetOptions(MongoDB.Bson.BsonDocument)">
            <summary>
            Sets multiple cursor options. See also the individual Set{Option} methods, which are easier to use.
            </summary>
            <param name="options">The options.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetReadPreference(MongoDB.Driver.ReadPreference)">
            <summary>
            Sets the read preference.
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSerializer(MongoDB.Bson.Serialization.IBsonSerializer{`0})">
            <summary>
            Sets the serializer.
            </summary>
            <param name="serializer">The serializer.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetShowDiskLoc">
            <summary>
            Sets the $showDiskLoc option.
            </summary>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSkip(System.Int32)">
            <summary>
            Sets the number of documents the server should skip before returning the rest of the documents.
            </summary>
            <param name="skip">The number of documents to skip.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSlaveOk(System.Boolean)">
            <summary>
            Sets whether the query should be sent to a secondary server.
            </summary>
            <param name="slaveOk">Whether the query should be sent to a secondary server.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSnapshot">
            <summary>
            Sets the $snapshot option.
            </summary>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSortOrder(MongoDB.Driver.IMongoSortBy)">
            <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
            <param name="sortBy">The sort order.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.SetSortOrder(System.String[])">
            <summary>
            Sets the sort order for the server to sort the documents by before returning them.
            </summary>
            <param name="keys">The names of the fields to sort by.</param>
            <returns>The cursor (so you can chain method calls to it).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoCursor`1.IEnumerableGetEnumerator">
            <summary>
            Gets the non-generic enumerator.
            </summary>
            <returns>The enumerator.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoCursor`1.Serializer">
            <summary>
            Gets the serializer.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoDatabase">
            <summary>
            Represents a MongoDB database and the settings used to access it. This class is thread-safe.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.#ctor(MongoDB.Driver.MongoServer,MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Creates a new instance of MongoDatabase. Normally you would call one of the indexers or GetDatabase methods
            of MongoServer instead.
            </summary>
            <param name="server">The server that contains this database.</param>
            <param name="settings">The settings to use to access this database.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.#ctor(MongoDB.Driver.MongoServer,System.String,MongoDB.Driver.MongoDatabaseSettings)">
            <summary>
            Creates a new instance of MongoDatabase. Normally you would call one of the indexers or GetDatabase methods
            of MongoServer instead.
            </summary>
            <param name="server">The server that contains this database.</param>
            <param name="name">The name of the database.</param>
            <param name="settings">The settings to use to access this database.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Create(MongoDB.Driver.MongoConnectionStringBuilder)">
            <summary>
            Creates an instance of a MongoDatabase.
            Automatically creates an instance of MongoServer if needed.
            </summary>
            <param name="builder">Server and database settings in the form of a MongoConnectionStringBuilder.</param>
            <returns>
            A new or existing instance of MongoDatabase.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Create(MongoDB.Driver.MongoServerSettings,System.String)">
            <summary>
            Creates an instance of a MongoDatabase.
            Automatically creates an instance of MongoServer if needed.
            </summary>
            <param name="serverSettings">The server settings for the server that contains this database.</param>
            <param name="databaseName">The name of this database (will be accessed using default settings).</param>
            <returns>
            A new or existing instance of MongoDatabase.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Create(MongoDB.Driver.MongoUrl)">
            <summary>
            Creates an instance of a MongoDatabase.
            Automatically creates an instance of MongoServer if needed.
            </summary>
            <param name="url">Server and database settings in the form of a MongoUrl.</param>
            <returns>
            A new or existing instance of MongoDatabase.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Create(System.String)">
            <summary>
            Creates an instance of a MongoDatabase.
            Automatically creates an instance of MongoServer if needed.
            </summary>
            <param name="connectionString">Server and database settings in the form of a connection string.</param>
            <returns>
            A new or existing instance of MongoDatabase.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Create(System.Uri)">
            <summary>
            Creates an instance of a MongoDatabase.
            Automatically creates an instance of MongoServer if needed.
            </summary>
            <param name="uri">Server and database settings in the form of a Uri.</param>
            <returns>
            A new or existing instance of MongoDatabase.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.AddUser(MongoDB.Driver.MongoUser)">
            <summary>
            Adds a user to this database.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.CollectionExists(System.String)">
            <summary>
            Tests whether a collection exists on this database.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>True if the collection exists.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.CreateCollection(System.String)">
            <summary>
            Creates a collection. MongoDB creates collections automatically when they are first used, so
            this command is mainly here for frameworks.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.CreateCollection(System.String,MongoDB.Driver.IMongoCollectionOptions)">
            <summary>
            Creates a collection. MongoDB creates collections automatically when they are first used, so
            you only need to call this method if you want to provide non-default options.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="options">Options for creating this collection (usually a CollectionOptionsDocument or constructed using the CollectionOptions builder).</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.CreateCollectionSettings``1(System.String)">
            <summary>
            Creates an instance of MongoCollectionSettings for the named collection with the rest of the settings inherited.
            You can override some of these settings before calling GetCollection.
            </summary>
            <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
            <param name="collectionName">The name of this collection.</param>
            <returns>A MongoCollectionSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.CreateCollectionSettings(System.Type,System.String)">
            <summary>
            Creates an instance of MongoCollectionSettings for the named collection with the rest of the settings inherited.
            You can override some of these settings before calling GetCollection.
            </summary>
            <param name="defaultDocumentType">The default document type for this collection.</param>
            <param name="collectionName">The name of this collection.</param>
            <returns>A MongoCollectionSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Drop">
            <summary>
            Drops a database.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.DropCollection(System.String)">
            <summary>
            Drops a collection.
            </summary>
            <param name="collectionName">The name of the collection to drop.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Driver.EvalFlags,MongoDB.Bson.BsonJavaScript,System.Object[])">
            <summary>
            Evaluates JavaScript code at the server.
            </summary>
            <param name="flags">Flags that control Eval options.</param>
            <param name="code">The code to evaluate.</param>
            <param name="args">Optional arguments (only used when the code is a function with parameters).</param>
            <returns>The result of evaluating the code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Bson.BsonJavaScript,System.Object[])">
            <summary>
            Evaluates JavaScript code at the server.
            </summary>
            <param name="code">The code to evaluate.</param>
            <param name="args">Optional arguments (only used when the code is a function with parameters).</param>
            <returns>The result of evaluating the code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.Eval(MongoDB.Driver.EvalArgs)">
            <summary>
            Evaluates JavaScript code at the server.
            </summary>
            <param name="args">The args.</param>
            <returns>The result of evaluating the code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRef(MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef.
            </summary>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>A BsonDocument (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRefAs``1(MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef, deserialized as a <typeparamref name="TDocument"/>.
            </summary>
            <typeparam name="TDocument">The nominal type of the document to fetch.</typeparam>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>A <typeparamref name="TDocument"/> (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.FetchDBRefAs(System.Type,MongoDB.Driver.MongoDBRef)">
            <summary>
            Fetches the document referred to by the DBRef.
            </summary>
            <param name="documentType">The nominal type of the document to fetch.</param>
            <param name="dbRef">The <see cref="T:MongoDB.Driver.MongoDBRef"/> to fetch.</param>
            <returns>An instance of nominalType (or null if the document was not found).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.FindAllUsers">
            <summary>
            Finds all users of this database.
            </summary>
            <returns>An array of users.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.FindUser(System.String)">
            <summary>
            Finds a user of this database.
            </summary>
            <param name="username">The username.</param>
            <returns>The user.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(MongoDB.Driver.MongoCollectionSettings{``0})">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
            <param name="collectionSettings">The settings to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
            <param name="collectionName">The name of the collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
            <param name="collectionName">The name of the collection.</param>
            <param name="collectionSettings">The settings to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection``1(System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <typeparam name="TDefaultDocument">The default document type for this collection.</typeparam>
            <param name="collectionName">The name of the collection.</param>
            <param name="writeConcern">The write concern to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <param name="collectionSettings">The settings to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of TDefaultDocument.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="collectionSettings">The settings to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="writeConcern">The write concern to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="defaultDocumentType">The default document type.</param>
            <param name="collectionName">The name of the collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String,MongoDB.Driver.MongoCollectionSettings)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="defaultDocumentType">The default document type.</param>
            <param name="collectionName">The name of the collection.</param>
            <param name="collectionSettings">The settings to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollection(System.Type,System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="defaultDocumentType">The default document type.</param>
            <param name="collectionName">The name of the collection.</param>
            <param name="writeConcern">The write concern to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCollectionNames">
            <summary>
            Gets a list of the names of all the collections in this database.
            </summary>
            <returns>A list of collection names.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetCurrentOp">
            <summary>
            Gets the current operation.
            </summary>
            <returns>The current operation.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetGridFS(MongoDB.Driver.GridFS.MongoGridFSSettings)">
            <summary>
            Gets an instance of MongoGridFS for this database using custom GridFS settings.
            </summary>
            <param name="gridFSSettings">The GridFS settings to use.</param>
            <returns>An instance of MongoGridFS.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetLastError">
            <summary>
            Gets the last error (if any) that occurred on this connection. You MUST be within a RequestStart to call this method.
            </summary>
            <returns>The last error (<see cref="T:MongoDB.Driver.GetLastErrorResult"/>)</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetProfilingInfo(MongoDB.Driver.IMongoQuery)">
            <summary>
            Gets one or more documents from the system.profile collection.
            </summary>
            <param name="query">A query to select which documents to return.</param>
            <returns>A cursor.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetProfilingLevel">
            <summary>
            Gets the current profiling level.
            </summary>
            <returns>The profiling level.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetSisterDatabase(System.String)">
            <summary>
            Gets a sister database on the same server.
            </summary>
            <param name="databaseName">The name of the sister database.</param>
            <returns>An instance of MongoDatabase.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.GetStats">
            <summary>
            Gets the current database stats.
            </summary>
            <returns>An instance of DatabaseStatsResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.IsCollectionNameValid(System.String,System.String@)">
            <summary>
            Checks whether a given collection name is valid in this database.
            </summary>
            <param name="collectionName">The collection name.</param>
            <param name="message">An error message if the collection name is not valid.</param>
            <returns>True if the collection name is valid; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RemoveUser(MongoDB.Driver.MongoUser)">
            <summary>
            Removes a user from this database.
            </summary>
            <param name="user">The user to remove.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RemoveUser(System.String)">
            <summary>
            Removes a user from this database.
            </summary>
            <param name="username">The username to remove.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RenameCollection(System.String,System.String)">
            <summary>
            Renames a collection on this database.
            </summary>
            <param name="oldCollectionName">The old name for the collection.</param>
            <param name="newCollectionName">The new name for the collection.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RenameCollection(System.String,System.String,System.Boolean)">
            <summary>
            Renames a collection on this database.
            </summary>
            <param name="oldCollectionName">The old name for the collection.</param>
            <param name="newCollectionName">The new name for the collection.</param>
            <param name="dropTarget">Whether to drop the target collection first if it already exists.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RequestDone">
            <summary>
            Lets the server know that this thread is done with a series of related operations. Instead of calling this method it is better
            to put the return value of RequestStart in a using statement.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RequestStart">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoDatabase.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RequestStart(System.Boolean)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="slaveOk">Whether queries should be sent to secondary servers.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoDatabase.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RequestStart(MongoDB.Driver.ReadPreference)">
            <summary>
            Lets the server know that this thread is about to begin a series of related operations that must all occur
            on the same connection. The return value of this method implements IDisposable and can be placed in a
            using statement (in which case RequestDone will be called automatically when leaving the using statement).
            </summary>
            <param name="readPreference">The read preference.</param>
            <returns>A helper object that implements IDisposable and calls <see cref="M:MongoDB.Driver.MongoDatabase.RequestDone"/> from the Dispose method.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommand(MongoDB.Driver.IMongoCommand)">
            <summary>
            Runs a command on this database.
            </summary>
            <param name="command">The command object.</param>
            <returns>A CommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommand(System.String)">
            <summary>
            Runs a command on this database.
            </summary>
            <param name="commandName">The name of the command.</param>
            <returns>A CommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs``1(MongoDB.Driver.IMongoCommand)">
            <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
            <typeparam name="TCommandResult">The type of the returned command result.</typeparam>
            <param name="command">The command object.</param>
            <returns>A TCommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs``1(System.String)">
            <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
            <typeparam name="TCommandResult">The type of the returned command result.</typeparam>
            <param name="commandName">The name of the command.</param>
            <returns>A TCommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs(System.Type,MongoDB.Driver.IMongoCommand)">
            <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
            <param name="commandResultType">The command result type.</param>
            <param name="command">The command object.</param>
            <returns>A TCommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.RunCommandAs(System.Type,System.String)">
            <summary>
            Runs a command on this database and returns the result as a TCommandResult.
            </summary>
            <param name="commandResultType">The command result type.</param>
            <param name="commandName">The name of the command.</param>
            <returns>A TCommandResult</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.SetProfilingLevel(MongoDB.Driver.ProfilingLevel)">
            <summary>
            Sets the level of profile information to write.
            </summary>
            <param name="level">The profiling level.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.SetProfilingLevel(MongoDB.Driver.ProfilingLevel,System.TimeSpan)">
            <summary>
            Sets the level of profile information to write.
            </summary>
            <param name="level">The profiling level.</param>
            <param name="slow">The threshold that defines a slow query.</param>
            <returns>A CommandResult.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoDatabase.ToString">
            <summary>
            Gets a canonical string representation for this database.
            </summary>
            <returns>A canonical string representation for this database.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.CommandCollection">
            <summary>
            Gets the command collection for this database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.GridFS">
            <summary>
            Gets the default GridFS instance for this database. The default GridFS instance uses default GridFS
            settings. See also GetGridFS if you need to use GridFS with custom settings.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.Name">
            <summary>
            Gets the name of this database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.Server">
            <summary>
            Gets the server that contains this database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.Settings">
            <summary>
            Gets the settings being used to access this database.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.Item(System.String)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoDatabase.Item(System.String,MongoDB.Driver.WriteConcern)">
            <summary>
            Gets a MongoCollection instance representing a collection on this database
            with a default document type of BsonDocument.
            </summary>
            <param name="collectionName">The name of the collection.</param>
            <param name="writeConcern">The write concern to use when accessing this collection.</param>
            <returns>An instance of MongoCollection.</returns>
        </member>
        <member name="T:MongoDB.Driver.MongoServerAddress">
            <summary>
            The address of a MongoDB server.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of MongoServerAddress.
            </summary>
            <param name="host">The server's host name.</param>
            <param name="port">The server's port number.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Parse(System.String)">
            <summary>
            Parses a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <returns>A new instance of MongoServerAddress initialized with values parsed from the string.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.TryParse(System.String,MongoDB.Driver.MongoServerAddress@)">
            <summary>
            Tries to parse a string representation of a server address.
            </summary>
            <param name="value">The string representation of a server address.</param>
            <param name="address">The server address (set to null if TryParse fails).</param>
            <returns>True if the string is parsed succesfully.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Equality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are equal (or both are null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.op_Inequality(MongoDB.Driver.MongoServerAddress,MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="lhs">The first address.</param>
            <param name="rhs">The other address.</param>
            <returns>True if the two addresses are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(MongoDB.Driver.MongoServerAddress)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="rhs">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.Equals(System.Object)">
            <summary>
            Compares two server addresses.
            </summary>
            <param name="obj">The other server address.</param>
            <returns>True if the two server addresses are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.GetHashCode">
            <summary>
            Gets the hash code for this object.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.ToString">
            <summary>
            Returns a string representation of the server address.
            </summary>
            <returns>A string representation of the server address.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoServerAddress.ToIPEndPoint(System.Net.Sockets.AddressFamily)">
            <summary>
            Returns the server address as an IPEndPoint (does a DNS lookup).
            </summary>
            <param name="addressFamily">The address family of the returned IPEndPoint.</param>
            <returns>The IPEndPoint of the server.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Host">
            <summary>
            Gets the server's host name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoServerAddress.Port">
            <summary>
            Gets the server's port number.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ConnectionMode">
            <summary>
            Server connection mode.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.Automatic">
            <summary>
            Automatically determine how to connect.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.Direct">
            <summary>
            Connect directly to a server.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.ReplicaSet">
            <summary>
            Connect to a replica set.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.ConnectionMode.ShardRouter">
            <summary>
            Connect to one or more shard routers.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.MongoUrl">
            <summary>
            Represents an immutable URL style connection string. See also MongoUrlBuilder.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.#ctor(System.String)">
            <summary>
            Creates a new instance of MongoUrl.
            </summary>
            <param name="url">The URL containing the settings.</param>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Equality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal (or both null).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.op_Inequality(MongoDB.Driver.MongoUrl,MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="lhs">The first URL.</param>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are not equal (or one is null and the other is not).</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ClearCache">
            <summary>
            Clears the URL cache. When a URL is parsed it is stored in the cache so that it doesn't have to be
            parsed again. There is rarely a need to call this method.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Create(System.String)">
            <summary>
            Creates an instance of MongoUrl (might be an existing existence if the same URL has been used before).
            </summary>
            <param name="url">The URL containing the settings.</param>
            <returns>An instance of MongoUrl.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(MongoDB.Driver.MongoUrl)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="rhs">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.Equals(System.Object)">
            <summary>
            Compares two MongoUrls.
            </summary>
            <param name="obj">The other URL.</param>
            <returns>True if the two URLs are equal.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.GetWriteConcern(System.Boolean)">
            <summary>
            Returns a WriteConcern value based on this instance's settings and a default enabled value.
            </summary>
            <param name="enabledDefault">The default enabled value.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ToServerSettings">
            <summary>
            Creates a new instance of MongoServerSettings based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>A new instance of MongoServerSettings.</returns>
        </member>
        <member name="M:MongoDB.Driver.MongoUrl.ToString">
            <summary>
            Returns the canonical URL based on the settings in this MongoUrlBuilder.
            </summary>
            <returns>The canonical URL.</returns>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationMechanism">
            <summary>
            Gets the authentication mechanism.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.AuthenticationSource">
            <summary>
            Gets the authentication source.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ComputedWaitQueueSize">
            <summary>
            Gets the actual wait queue size (either WaitQueueSize or WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ConnectionMode">
            <summary>
            Gets the connection mode.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ConnectTimeout">
            <summary>
            Gets the connect timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.DatabaseName">
            <summary>
            Gets the optional database name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.FSync">
            <summary>
            Gets the FSync component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.GssapiServiceName">
            <summary>
            Gets the GSSAPI service name.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.GuidRepresentation">
            <summary>
            Gets the representation to use for Guids.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.IPv6">
            <summary>
            Gets whether to use IPv6.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Journal">
            <summary>
            Gets the Journal component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionIdleTime">
            <summary>
            Gets the max connection idle time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionLifeTime">
            <summary>
            Gets the max connection life time.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MaxConnectionPoolSize">
            <summary>
            Gets the max connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.MinConnectionPoolSize">
            <summary>
            Gets the min connection pool size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Password">
            <summary>
            Gets the password.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReadPreference">
            <summary>
            Gets the read preference.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.ReplicaSetName">
            <summary>
            Gets the name of the replica set.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SafeMode">
            <summary>
            Gets the SafeMode to use.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SecondaryAcceptableLatency">
            <summary>
            Gets the acceptable latency for considering a replica set member for inclusion in load balancing
            when using a read preference of Secondary, SecondaryPreferred, and Nearest.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Server">
            <summary>
            Gets the address of the server (see also Servers if using more than one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Servers">
            <summary>
            Gets the list of server addresses (see also Server if using only one address).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SlaveOk">
            <summary>
            Gets whether queries can be sent to secondary servers.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.SocketTimeout">
            <summary>
            Gets the socket timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Url">
            <summary>
            Gets the URL (in canonical form).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.Username">
            <summary>
            Gets the username.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.UseSsl">
            <summary>
            Gets whether to use SSL.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.VerifySslCertificate">
            <summary>
            Gets whether to verify an SSL certificate.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.W">
            <summary>
            Gets the W component of the write concern.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueMultiple">
            <summary>
            Gets the wait queue multiple (the actual wait queue size will be WaitQueueMultiple x MaxConnectionPoolSize).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueSize">
            <summary>
            Gets the wait queue size.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WaitQueueTimeout">
            <summary>
            Gets the wait queue timeout.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.MongoUrl.WTimeout">
            <summary>
            Gets the WTimeout component of the write concern.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.RemoveFlags">
            <summary>
            Flags used with the Remove method of MongoCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.RemoveFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.RemoveFlags.Single">
            <summary>
            Remove only a single document.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.SafeMode">
            <summary>
            Represents the different safe modes that can be used.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether the server should call fsync after each operation.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether the server should call fsync after each operation.</param>
            <param name="w">The number of write replications that should be completed before server returns.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Boolean,System.Boolean,System.Int32,System.TimeSpan)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether the server should call fsync after each operation.</param>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <param name="wtimeout">The timeout for each operation.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Int32)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="w">The number of write replications that should be completed before server returns.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(System.Int32,System.TimeSpan)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <param name="wtimeout">The timeout for each operation.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.#ctor(MongoDB.Driver.SafeMode)">
            <summary>
            Creates a new instance of the SafeMode class.
            </summary>
            <param name="other">Another SafeMode to initialize this one from.</param>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.op_Implicit(MongoDB.Driver.SafeMode)~MongoDB.Driver.WriteConcern">
            <summary>
            Converts a SafeMode to a WriteConcern.
            </summary>
            <param name="safeMode">The SafeMode.</param>
            <returns>A WriteConcern.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.op_Inequality(MongoDB.Driver.SafeMode,MongoDB.Driver.SafeMode)">
            <summary>
            Determines whether two specified SafeMode objects have different values.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is different from the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.op_Equality(MongoDB.Driver.SafeMode,MongoDB.Driver.SafeMode)">
            <summary>
            Determines whether two specified SafeMode objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Boolean)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Boolean,System.Boolean)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether fysnc is true.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether fysnc is true.</param>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Boolean,System.Boolean,System.Int32,System.TimeSpan)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="enabled">Whether safe mode is enabled.</param>
            <param name="fsync">Whether fysnc is true.</param>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <param name="wtimeout">The timeout for each operation.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Int32)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Create(System.Int32,System.TimeSpan)">
            <summary>
            Creates a SafeMode instance (or returns an existing instance).
            </summary>
            <param name="w">The number of write replications that should be completed before server returns.</param>
            <param name="wtimeout">The timeout for each operation.</param>
            <returns>A SafeMode instance.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Equals(MongoDB.Driver.SafeMode,MongoDB.Driver.SafeMode)">
            <summary>
            Determines whether two specified SafeMode objects have the same value.
            </summary>
            <param name="lhs">The first value to compare, or null.</param>
            <param name="rhs">The second value to compare, or null.</param>
            <returns>True if the value of lhs is the same as the value of rhs; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Clone">
            <summary>
            Creates a clone of the SafeMode.
            </summary>
            <returns>A clone of the SafeMode.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Equals(System.Object)">
            <summary>
            Determines whether this instance and a specified object, which must also be a SafeMode object, have the same value.
            </summary>
            <param name="obj">The SafeMode object to compare to this instance.</param>
            <returns>True if obj is a SafeMode object and its value is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Equals(MongoDB.Driver.SafeMode)">
            <summary>
            Determines whether this instance and another specified SafeMode object have the same value.
            </summary>
            <param name="rhs">The SafeMode object to compare to this instance.</param>
            <returns>True if the value of the rhs parameter is the same as this instance; otherwise, false.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.Freeze">
            <summary>
            Freezes the SafeMode.
            </summary>
            <returns>The frozen SafeMode.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.FrozenCopy">
            <summary>
            Returns a frozen copy of the SafeMode.
            </summary>
            <returns>A frozen copy of the SafeMode.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:MongoDB.Driver.SafeMode.ToString">
            <summary>
            Returns a string representation of the SafeMode.
            </summary>
            <returns>A string representation of the SafeMode.</returns>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.False">
            <summary>
            Gets an instance of SafeMode with safe mode off.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.FSyncTrue">
            <summary>
            Gets an instance of SafeMode with fsync=true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.True">
            <summary>
            Gets an instance of SafeMode with safe mode on.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.W2">
            <summary>
            Gets an instance of SafeMode with safe mode on and w=2.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.W3">
            <summary>
            Gets an instance of SafeMode with safe mode on and w=3.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.W4">
            <summary>
            Gets an instance of SafeMode with safe mode on and w=4.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.Enabled">
            <summary>
            Gets whether safe mode is enabled.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.FSync">
            <summary>
            Gets whether fsync is true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.IsFrozen">
            <summary>
            Gets whether this instance is frozen.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.J">
            <summary>
            Gets whether wait for journal commit is true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.Journal">
            <summary>
            Gets whether wait for journal commit is true.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.W">
            <summary>
            Gets the w value (the number of write replications that must complete before the server returns).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.WMode">
            <summary>
            Gets the w mode (the w mode determines which write replications must complete before the server returns).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.SafeMode.WTimeout">
            <summary>
            Gets the wtimeout value (the timeout before which the server must return).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.UpdateFlags">
            <summary>
            Flags used with the Update method in MongoCollection.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateFlags.None">
            <summary>
            No flags.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateFlags.Upsert">
            <summary>
            If document doesn't exist then do an Insert.
            </summary>
        </member>
        <member name="F:MongoDB.Driver.UpdateFlags.Multi">
            <summary>
            Update all matching documents (instead of just one).
            </summary>
        </member>
        <member name="T:MongoDB.Driver.ExternalEvidence">
            <summary>
            Evidence of a MongoIdentity via an external mechanism.  For example, on windows this may 
            be the current process' user or, on linux, via kinit.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.ExternalEvidence"/> class.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:MongoDB.Driver.ExternalEvidence.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:MongoDB.Driver.XYPoint">
            <summary>
            Represents a 2D point represented using x, y coordinates.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.XYPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:MongoDB.Driver.XYPoint"/> class.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
        </member>
        <member name="P:MongoDB.Driver.XYPoint.X">
            <summary>
            Gets the X value.
            </summary>
            <value>
            The X value.
            </value>
        </member>
        <member name="P:MongoDB.Driver.XYPoint.Y">
            <summary>
            Gets the Y value.
            </summary>
            <value>
            The Y value.
            </value>
        </member>
        <member name="T:MongoDB.Driver.GetIndexesResult">
            <summary>
            Represents the result of GetIndexes.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.GetIndexesResult.#ctor(MongoDB.Bson.BsonDocument[])">
            <summary>
            Initializes a new instance of the GetIndexesResult class.
            </summary>
            <param name="documents">The raw documents containing the information about the indexes.</param>
        </member>
        <member name="P:MongoDB.Driver.GetIndexesResult.Item(System.Int32)">
            <summary>
            Gets the IndexInfo at the specified index.
            </summary>
            <param name="index">The zero-based index of the IndexInfo to get.</param>
            <returns>An IndexInfo.</returns>
        </member>
        <member name="P:MongoDB.Driver.GetIndexesResult.Count">
            <summary>
            Gets the count of indexes.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.GetIndexesResult.RawDocuments">
            <summary>
            Gets the raw BSON documents containing the information about the indexes.
            </summary>
        </member>
        <member name="T:MongoDB.Driver.IndexInfo">
            <summary>
            Represents information about an index.
            </summary>
        </member>
        <member name="M:MongoDB.Driver.IndexInfo.#ctor(MongoDB.Bson.BsonDocument)">
            <summary>
            Creates a new instance of the IndexInfo class.
            </summary>
            <param name="document">The BSON document that contains information about the index.</param>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.DroppedDups">
            <summary>
            Gets whether the dups were dropped when the index was created.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.IsBackground">
            <summary>
            Gets whether the index was created in the background.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.IsSparse">
            <summary>
            Gets whether the index is sparse.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.IsUnique">
            <summary>
            Gets whether the index is unique.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.Key">
            <summary>
            Gets the key of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.Name">
            <summary>
            Gets the name of the index.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.Namespace">
            <summary>
            Gets the namespace of the collection that the index is for.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.RawDocument">
            <summary>
            Gets the raw BSON document containing the index information.
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.TimeToLive">
            <summary>
            Gets the time to live value (or TimeSpan.MaxValue if index doesn't have a time to live value).
            </summary>
        </member>
        <member name="P:MongoDB.Driver.IndexInfo.Version">
            <summary>
            Gets the version of the index.
            </summary>
        </member>
    </members>
</doc>
